namespace Sfdc.Rest
{
    public class LoginFault : ApiFault
    {
    }
    public class ApiFault
    {
        private ExceptionCode exceptionCodeField;
        private string exceptionMessageField;
        private ExtendedErrorDetails[] extendedErrorDetailsField;
        public ExceptionCode exceptionCode
        {
            get
            {
                return this.exceptionCodeField;
            }
            set
            {
                this.exceptionCodeField = value;
            }
        }
        public string exceptionMessage
        {
            get
            {
                return this.exceptionMessageField;
            }
            set
            {
                this.exceptionMessageField = value;
            }
        }
        public ExtendedErrorDetails[] extendedErrorDetails
        {
            get
            {
                return this.extendedErrorDetailsField;
            }
            set
            {
                this.extendedErrorDetailsField = value;
            }
        }
    }
    public enum ExceptionCode
    {
        ADAPTER_ERROR,
        ADAPTER_VALIDATION_EXCEPTION,
        APEX_REST_SERVICES_DISABLED,
        APEX_TRIGGER_COUPLING_LIMIT,
        API_CURRENTLY_DISABLED,
        API_DISABLED_FOR_ORG,
        ARGUMENT_OBJECT_PARSE_ERROR,
        ASYNC_OPERATION_LOCATOR,
        ASYNC_QUERY_UNSUPPORTED_QUERY,
        BAD_REQUEST,
        BATCH_PROCESSING_HALTED,
        BIG_OBJECT_UNSUPPORTED_OPERATION,
        BILLING_ENTITIES_NO_ACCESS,
        CANNOT_DELETE_ENTITY,
        CANNOT_DELETE_OWNER,
        CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY,
        CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY,
        CATEGORY_NOT_FOUND,
        CIRCULAR_OBJECT_GRAPH,
        CLIENT_NOT_ACCESSIBLE_FOR_USER,
        CLIENT_REQUIRE_UPDATE_FOR_USER,
        CLONE_FIELD_INTEGRITY_EXCEPTION,
        CLONE_NOT_SUPPORTED,
        COMMERCE_ADMIN_MISCONFIGURATION,
        CONTENT_ALREADY_AN_ASSET_EXCEPTION,
        CONTENT_CUSTOM_DOWNLOAD_EXCEPTION,
        CONTENT_HUB_AUTHENTICATION_EXCEPTION,
        CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION,
        CONTENT_HUB_FILE_HAS_NO_URL_EXCEPTION,
        CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION,
        CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION,
        CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION,
        CONTENT_HUB_INVALID_PAYLOAD,
        CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION,
        CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION,
        CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION,
        CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION,
        CONTENT_HUB_SECURITY_EXCEPTION,
        CONTENT_HUB_TIMEOUT_EXCEPTION,
        CONTENT_HUB_UNEXPECTED_EXCEPTION,
        CONTENT_IMAGE_SCALING_INVALID_ARGUMENTS_EXCEPTION,
        CONTENT_IMAGE_SCALING_INVALID_IMAGE_EXCEPTION,
        CONTENT_IMAGE_SCALING_MAX_RENDITIONS_EXCEPTION,
        CONTENT_IMAGE_SCALING_TIMEOUT_EXCEPTION,
        CONTENT_IMAGE_SCALING_UNKNOWN_EXCEPTION,
        CUSTOM_METADATA_LIMIT_EXCEEDED,
        CUSTOM_SETTINGS_LIMIT_EXCEEDED,
        DATACLOUD_API_CLIENT_EXCEPTION,
        DATACLOUD_API_DISABLED_EXCEPTION,
        DATACLOUD_API_INVALID_QUERY_EXCEPTION,
        DATACLOUD_API_SERVER_BUSY_EXCEPTION,
        DATACLOUD_API_SERVER_EXCEPTION,
        DATACLOUD_API_TIMEOUT_EXCEPTION,
        DATACLOUD_API_UNAVAILABLE,
        DATA_INTEGRATION_INPUT_ERROR,
        DATA_INTEGRATION_NOT_FOUND,
        DATA_INTEGRATION_NO_ACCESS,
        DATA_INTEGRATION_PACKAGE_ERROR,
        DATA_INTEGRATION_SERVER_ERROR,
        DATA_INTEGRATION_VENDOR_SETUP_ERROR,
        DEPENDENCY_API_UNSUPPORTED_EXCEPTION,
        DUPLICATE_ARGUMENT_VALUE,
        DUPLICATE_VALUE,
        EMAIL_BATCH_SIZE_LIMIT_EXCEEDED,
        EMAIL_TO_CASE_INVALID_ROUTING,
        EMAIL_TO_CASE_LIMIT_EXCEEDED,
        EMAIL_TO_CASE_NOT_ENABLED,
        ENTITY_NOT_QUERYABLE,
        ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT,
        EXCEEDED_ID_LIMIT,
        EXCEEDED_LEAD_CONVERT_LIMIT,
        EXCEEDED_MAX_FILTER_ENTITIES,
        EXCEEDED_MAX_SEMIJOIN_SUBSELECTS,
        EXCEEDED_MAX_SIZE_REQUEST,
        EXCEEDED_MAX_SOBJECTS,
        EXCEEDED_MAX_TYPES_LIMIT,
        EXCEEDED_QUOTA,
        EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION,
        EXTERNAL_OBJECT_CONNECTION_EXCEPTION,
        EXTERNAL_OBJECT_EXCEPTION,
        EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION,
        EXTERNAL_SERVICE_AUTHENTICATION_EXCEPTION,
        EXTERNAL_SERVICE_CONNECTION_EXCEPTION,
        EXTERNAL_SERVICE_DATA_EXCEPTION,
        EXTERNAL_SERVICE_EXCEPTION,
        EXTERNAL_SERVICE_INVALID_STATE_EXCEPTION,
        EXTERNAL_SERVICE_UNSUPPORTED_EXCEPTION,
        FEDERATED_SEARCH_ERROR,
        FEED_NOT_ENABLED_FOR_OBJECT,
        FUNCTIONALITY_NOT_ENABLED,
        FUNCTIONALITY_TEMPORARILY_UNAVAILABLE,
        GMAIL_ROUTING_CREATION_NOT_ALLOWED,
        IDEMPOTENCY_FEATURE_NOT_ENABLED,
        IDEMPOTENCY_NOT_SUPPORTED,
        ID_REQUIRED,
        ILLEGAL_QUERY_PARAMETER_VALUE,
        INACTIVE_OWNER_OR_USER,
        INACTIVE_PORTAL,
        INDEX_NOT_FOUND,
        INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE,
        INSTALL_KEY_INVALID,
        INSTALL_KEY_REQUIRED,
        INSUFFICIENT_ACCESS,
        INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY,
        INTERNAL_CANVAS_ERROR,
        INTERNAL_SERVER_ERROR,
        INVALID_ASSIGNMENT_RULE,
        INVALID_AUTH_HEADER,
        INVALID_BATCH_REQUEST,
        INVALID_BATCH_SIZE,
        INVALID_CLIENT,
        INVALID_CROSS_REFERENCE_KEY,
        INVALID_DATE_FORMAT,
        INVALID_FIELD,
        INVALID_FILTER_LANGUAGE,
        INVALID_FILTER_VALUE,
        INVALID_IDEMPOTENCY_KEY,
        INVALID_ID_FIELD,
        INVALID_INPUT_COMBINATION,
        INVALID_LOCALE_LANGUAGE,
        INVALID_LOCATOR,
        INVALID_LOGIN,
        INVALID_MULTIPART_REQUEST,
        INVALID_NEW_PASSWORD,
        INVALID_OLD_PASSWORD,
        INVALID_OPERATION,
        INVALID_OPERATION_WITH_EXPIRED_PASSWORD,
        INVALID_PACKAGE_VERSION,
        INVALID_PAGING_OPTION,
        INVALID_QUERY_FILTER_OPERATOR,
        INVALID_QUERY_KEY,
        INVALID_QUERY_LOCATOR,
        INVALID_QUERY_SCOPE,
        INVALID_QUERY_VALUE,
        INVALID_REPLICATION_DATE,
        INVALID_SEARCH,
        INVALID_SEARCH_SCOPE,
        INVALID_SESSION_ID,
        INVALID_SOAP_HEADER,
        INVALID_SORT_OPTION,
        INVALID_SSO_GATEWAY_URL,
        INVALID_TYPE,
        INVALID_TYPE_FOR_OPERATION,
        JIGSAW_ACTION_DISABLED,
        JIGSAW_IMPORT_LIMIT_EXCEEDED,
        JIGSAW_REQUEST_NOT_SUPPORTED,
        JSON_PARSER_ERROR,
        KEY_HAS_BEEN_DESTROYED,
        LICENSING_DATA_ERROR,
        LICENSING_UNKNOWN_ERROR,
        LIMIT_EXCEEDED,
        LOGIN_CHALLENGE_ISSUED,
        LOGIN_CHALLENGE_PENDING,
        LOGIN_DURING_RESTRICTED_DOMAIN,
        LOGIN_DURING_RESTRICTED_TIME,
        LOGIN_MUST_USE_SECURITY_TOKEN,
        MALFORMED_ID,
        MALFORMED_QUERY,
        MALFORMED_SEARCH,
        MISMATCHING_VERSIONS,
        MISSING_ARGUMENT,
        MISSING_RECORD,
        MODIFIED,
        MULTIPLE_RECORDS_FOUND,
        MUTUAL_AUTHENTICATION_FAILED,
        NOT_ACCEPTABLE,
        NOT_MODIFIED,
        NO_ACTIVE_DUPLICATE_RULE,
        NO_RECIPIENTS,
        NO_SOFTPHONE_LAYOUT,
        NUMBER_OUTSIDE_VALID_RANGE,
        OCR_INVALID_REQUEST,
        OPERATION_TOO_LARGE,
        ORDER_MANAGEMENT_ACTION_NOT_ALLOWED,
        ORG_IN_MAINTENANCE,
        ORG_IS_DOT_ORG,
        ORG_IS_SIGNING_UP,
        ORG_LOCKED,
        ORG_NOT_OWNED_BY_INSTANCE,
        PASSWORD_LOCKOUT,
        PAYLOAD_ITEM_MAP_ERROR,
        PORTAL_NO_ACCESS,
        POST_BODY_PARSE_ERROR,
        PRODUCT_NOT_FOUND,
        QAT_HETEROGENOUS_CONTEXT_IDS,
        QAT_INVALID_CONTEXT_ID,
        QAT_INVALID_QUICK_ACTION,
        QUERY_TIMEOUT,
        QUERY_TOO_COMPLICATED,
        REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT,
        RECORD_NOT_FOUND,
        REPORT_EXPORT_LIMIT_EXCEEDED,
        REQUEST_LIMIT_EXCEEDED,
        REQUEST_RUNNING_TOO_LONG,
        SERVER_UNAVAILABLE,
        SERVICE_DESK_NOT_ENABLED,
        SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION,
        SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION,
        SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE,
        SPECIFICATION_GENERATION_EXCEPTION,
        SSO_SERVICE_DOWN,
        SST_ADMIN_FILE_DOWNLOAD_EXCEPTION,
        STATE_TRANSITION_NOT_ALLOWED,
        TOO_MANY_APEX_REQUESTS,
        TOO_MANY_JOBS,
        TOO_MANY_RECIPIENTS,
        TOO_MANY_RECORDS,
        TRIAL_EXPIRED,
        TXN_SECURITY_APEX_ERROR,
        TXN_SECURITY_END_A_SESSION,
        TXN_SECURITY_FAIL_CLOSE,
        TXN_SECURITY_METERING_ERROR,
        TXN_SECURITY_NO_ACCESS,
        TXN_SECURITY_RUNTIME_ERROR,
        TXN_SECURITY_TWO_FA_REQUIRED,
        UNABLE_TO_LOCK_ROW,
        UNKNOWN_ATTACHMENT_EXCEPTION,
        UNKNOWN_EXCEPTION,
        UNKNOWN_ORG_SETTING,
        UNSUPPORTED_API_VERSION,
        UNSUPPORTED_ATTACHMENT_ENCODING,
        UNSUPPORTED_CLIENT,
        UNSUPPORTED_MEDIA_TYPE,
        VERSION_NOT_FOUND,
        WEBSTORE_NOT_FOUND,
        XML_PARSER_ERROR,
    }
    public class ExtendedErrorDetails
    {
        private ExtendedErrorCode extendedErrorCodeField;
        private System.Xml.XmlElement[] anyField;
        public ExtendedErrorCode extendedErrorCode
        {
            get
            {
                return this.extendedErrorCodeField;
            }
            set
            {
                this.extendedErrorCodeField = value;
            }
        }
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
    }
    public enum ExtendedErrorCode
    {
        ACTIONCALL_DUPLICATE_INPUT_PARAM,
        ACTIONCALL_DUPLICATE_OUTPUT_PARAM,
        ACTIONCALL_INPUT_VALIDATION_FAILED,
        ACTIONCALL_INVALID_INPUT_PARAM_NAME,
        ACTIONCALL_MISSING_NAME,
        ACTIONCALL_MISSING_REQUIRED_PARAM,
        ACTIONCALL_MISSING_REQUIRED_TYPE,
        ACTIONCALL_NOT_FOUND_WITH_NAME_AND_TYPE,
        ACTIONCALL_NOT_SUPPORTED_FOR_PROCESSTYPE,
        ACTIONCALL_NOT_SUPPORTED_FOR_TRIGGERTYPE,
        ACTIONCALL_TRANSACTION_MODEL_NOT_ALLOWED,
        ACTIONCALL_TRANSACTION_MODEL_NOT_SUPPORTED,
        ACTIONCALL_TRIGGERING_RECORD_MISMATCHED_OBJECTTYPE,
        ACTION_CALL_INVALID_CONFIGURATION,
        ACTION_CALL_INVALID_INPUT_PARAM,
        ACTION_CALL_INVALID_OUTPUT_PARAM,
        ADDING_ATTACHMENT_QUESTIONS_ADDITION_TO_EXISTING_SURVEY,
        APEXCALLOUT_INPUT_DUPLICATE,
        APEXCALLOUT_INPUT_INCOMPATIBLE_DATATYPE,
        APEXCALLOUT_INVALID,
        APEXCALLOUT_MISSING_CLASSNAME,
        APEXCALLOUT_NOT_FOUND,
        APEXCALLOUT_OUTPUT_INCOMPATIBLE_DATATYPE,
        APEXCALLOUT_OUTPUT_INVALID,
        APEXCALLOUT_REQUIRED_INPUT_MISSING,
        APEXCLASS_MISSING_INTERFACE,
        APEX_CLASS_VARIABLE_NOT_FOUND,
        ASSIGNEE_AUTOPROC,
        ASSIGNEE_USER_USERNAME,
        ASSIGNMENTITEM_ELEMENT_MISSING_DATATYPE,
        ASSIGNMENTITEM_ELEMENT_NOT_SUPPORTED,
        ASSIGNMENTITEM_FIELD_INVALID_DATATYPE,
        ASSIGNMENTITEM_FIELD_INVALID_DATATYPE_WITH_ELEMENT,
        ASSIGNMENTITEM_INCOMPATIBLE_DATATYPES,
        ASSIGNMENTITEM_INVALID_ASSIGNTOREFERENCE,
        ASSIGNMENTITEM_INVALID_COLLECTION,
        ASSIGNMENTITEM_INVALID_DATATYPE_IN_ELEMENT,
        ASSIGNMENTITEM_INVALID_ELEMENTREFERENCE,
        ASSIGNMENTITEM_INVALID_MERGE_FIELD,
        ASSIGNMENTITEM_INVALID_OPERATOR,
        ASSIGNMENTITEM_INVALID_REFERENCE,
        ASSIGNMENTITEM_INVALID_VALUE,
        ASSIGNMENTITEM_LEFT_DATATYPE_INVALID_FOR_OPERATOR,
        ASSIGNMENTITEM_MODIFIES_NONVARIABLE,
        ASSIGNMENTITEM_NONEXISTENT_REFERENCE,
        ASSIGNMENTITEM_REQUIRED,
        ASSIGNMENTITEM_RIGHT_DATATYPE_INVALID_FOR_OPERATOR,
        AUTOLAUNCHED_CHOICELOOKUP_NOT_SUPPORTED,
        AUTOLAUNCHED_CHOICE_NOT_SUPPORTED,
        AUTOLAUNCHED_SCREEN_NOT_SUPPORTED,
        AUTOLAUNCHED_STEP_NOT_SUPPORTED,
        AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE,
        AUTOLAUNCHED_WAIT_NOT_SUPPORTED,
        BEFORE_SAVE_FLOW_RECORD_UPDATE_CANNOT_HAVE_FAULT_CONNECTOR,
        BEFORE_SAVE_FLOW_RECORD_UPDATE_INVALID_REFERENCE,
        BEFORE_SAVE_FLOW_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS,
        BOTH_START_NODE_AND_REFERENCE_FOUND,
        CHOICEFIELD_DEFAULT_CHOICE_NOT_FOUND,
        CHOICEFIELD_MISSING_CHOICE,
        CHOICELOOKUP_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD,
        CHOICE_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD,
        CHOICE_LOOKUP_COLLECTION_REFERENCE_NULL,
        CHOICE_LOOKUP_INVALID_COLLECTION_REFERENCE,
        CHOICE_NOT_SUPPORTED_FOR_SCREENFIELDTYPE,
        CHOICE_USED_MULTIPLE_TIMES_IN_SAME_FIELD,
        COLLECTION_PROCESSOR_DUPLICATE_MAPITEM,
        COLLECTION_PROCESSOR_INVALID_COLLECTION_REFERENCE,
        COLLECTION_PROCESSOR_INVALID_CONFIGURATION,
        COLLECTION_PROCESSOR_INVALID_OUTPUTSOBJECTTYPE,
        COLLECTION_PROCESSOR_MAX_SORT_FIELDS_LIMIT_EXCEEDED,
        COLLECTION_PROCESSOR_MISMATCHED_OBJECTTYPE,
        COLLECTION_PROCESSOR_MISSING_MAP,
        COLLECTION_PROCESSOR_MISSING_OUTPUTSOBJECTTYPE,
        COLLECTION_PROCESSOR_MISSING_PARAMETER,
        COLLECTION_PROCESSOR_MISSING_SORT,
        COLLECTION_PROCESSOR_NOT_SUPPORTED_FOR_API_VERSION,
        COLLECTION_PROCESSOR_REQUIRES_PERM,
        COLLECTION_PROCESSOR_SORT_FIELD_INVALID_FOR_OBJECT,
        COLLECTION_PROCESSOR_TYPE_NOT_SUPPORTED,
        COLLECTION_PROCESSOR_VARIABLE_NULL,
        CONDITION_BUILDER_MISSING_FLOW_VARIABLE,
        CONDITION_BUILDER_MISSING_REQUIRED_PERMISSIONS,
        CONDITION_BUILDER_UNSUPPORTED_FLOW_VARIABLE,
        CONDITION_INVALID_LEFTOPERAND,
        CONDITION_LOGIC_EXCEEDS_LIMIT,
        CONDITION_LOGIC_INVALID,
        CONDITION_LOGIC_MISSING,
        CONDITION_MISSING_DATATYPE,
        CONDITION_MISSING_OPERATOR,
        CONDITION_OPERAND_DATATYPES_INCOMPATIBLE,
        CONDITION_OPERAND_INCOMPATIBLE_WITH_ELEMENT,
        CONDITION_OPERATOR_INCOMPATIBLE,
        CONDITION_REFERENCED_ELEMENT_NOT_FOUND,
        CONDITION_RIGHTOPERAND_NULL,
        CONNECTOR_MISSING_TARGET,
        CONSTANT_INCLUDES_REFERENCES,
        CUSTOMEVENTS_NOT_ENABLED,
        CUSTOMEVENT_MISSING_PROCESSMETADATAVALUES,
        CUSTOMEVENT_OBJECTTYPE_NOT_FOUND,
        CUSTOMEVENT_OBJECTTYPE_NOT_SUPPORTED,
        CUSTOMEVENT_PROCESSMETADATAVALUES_MISSING_NAME,
        CUSTOMEVENT_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME,
        DATATYPE_INVALID,
        DATATYPE_MISSING,
        DATA_TYPE_NOT_SUPPORTED_FOR_PROCESSTYPE,
        DECISION_DEFAULT_CONNECTOR_MISSING_LABEL,
        DECISION_MISSING_OUTCOME,
        DYNAMIC_TYPE_MAPPING_MISSING,
        ELEMENT_CONNECTS_TO_SELF,
        ELEMENT_COORDINATES_INVALID,
        ELEMENT_INVALID_CONNECTOR,
        ELEMENT_INVALID_REFERENCE,
        ELEMENT_INVALID_REFERENCE_FOR_CONFLICTING_FIELD_VALUE,
        ELEMENT_MISSING_CONNECTOR,
        ELEMENT_MISSING_LABEL,
        ELEMENT_MISSING_NAME,
        ELEMENT_MISSING_REFERENCE,
        ELEMENT_MORE_THAN_ONE_FIELD,
        ELEMENT_NAME_INVALID,
        ELEMENT_NEVER_USED,
        ELEMENT_NOT_SUPPORTED_IN_SUBFLOW_FOR_TRIGGER_TYPE,
        ELEMENT_SCALE_SMALLER_THAN_DEFAULTVALUE,
        ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_ELEMENTTYPE,
        ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_PROCESSTYPE,
        EXTERNAL_OBJECTS_NOT_SUPPORTED,
        EXTERNAL_OBJECT_FIELDS_NOT_SUPPORTED,
        EX_AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE,
        FEATURE_DISABLED,
        FIELDASSIGNMENT_FIELD_INCOMPATIBLE_DATATYPE,
        FIELDASSIGNMENT_INVALID_DATATYPE,
        FIELDASSIGNMENT_INVALID_ELEMENT,
        FIELDASSIGNMENT_INVALID_REFERENCE,
        FIELDASSIGNMENT_MULTIPLE_REFERENCES_SAME_FIELD,
        FIELDASSIGNMENT_PICKLISTFIELD_INCOMPATIBLE_DATATYPE,
        FIELDASSIGNMENT_REFERENCED_ELEMENT_MISSING_DATATYPE,
        FIELDSERVICE_UNSUPPORTED_FIELD_TYPE,
        FIELD_INVALID_VALUE,
        FIELD_NOT_FOUND,
        FIELD_RELATIONSHIP_NOT_SUPPORTED,
        FIELD_TYPE_NOT_SUPPORTED_AS_CHILD_OF_SCREENFIELD_REGION_OR_REGIONCONTAINER,
        FIELD_TYPE_NOT_SUPPORTED_AS_PARENT,
        FIELD_VALUE_REQUIRES_PERM,
        FLEXIPAGE_COMPONENT_ATTRIBUTE_EXPRESSION_EXCEPTION,
        FLEXIPAGE_COMPONENT_ATTRIBUTE_GENERIC_EXCEPTION,
        FLEXIPAGE_COMPONENT_ATTRIBUTE_MISSING_REQUIRED,
        FLEXIPAGE_COMPONENT_ATTRIBUTE_TOO_LONG,
        FLEXIPAGE_COMPONENT_CUSTOM_VALIDATION_EXCEPTION,
        FLEXIPAGE_COMPONENT_DESIGN_EXCEPTION,
        FLEXIPAGE_COMPONENT_EVENT_DUPLICATE_TARGET_EXCEPTION,
        FLEXIPAGE_COMPONENT_EVENT_EMPTY_TARGET_MAPPING_EXCEPTION,
        FLEXIPAGE_COMPONENT_EVENT_INVALID_FORMFACTOR_EXCEPTION,
        FLEXIPAGE_COMPONENT_EVENT_INVALID_SERVICE_EXCEPTION,
        FLEXIPAGE_COMPONENT_EVENT_SOURCE_EXCEPTION,
        FLEXIPAGE_COMPONENT_MAX_LIMIT_EXCEPTION,
        FLEXIPAGE_COMPONENT_RULE_VALIDATION_EXCEPTION,
        FLEXIPAGE_DUPLICATE_PROPERTY_COMPONENT_EXCEPTION,
        FLEXIPAGE_EVENT_ATTRIBUTE_GENERIC_EXCEPTION,
        FLEXIPAGE_INVALID_ITEM_INSTANCE_TYPE_EXCEPTION,
        FLEXIPAGE_INVALID_PROPERTY_TYPE_COMPONENT_EXCEPTION,
        FLEXIPAGE_INVALID_PROPERTY_TYPE_EVENT_TARGET_EXCEPTION,
        FLEXIPAGE_ITEM_INSTANCE_CUSTOM_VALIDATION_EXCEPTION,
        FLEXIPAGE_MAX_INTERACTIONS_EXCEPTION,
        FLEXIPAGE_PICKLIST_INVALID_VALUE_EXCEPTION,
        FLEXIPAGE_RENAMED_COMPONENT_VALIDATION_EXCEPTION,
        FLEXIPAGE_TEMPLATE_INVALID_SWITCH,
        FLOW_ALREADY_OVERRIDDEN,
        FLOW_COMPLEX_VALUE_COLLECTION_TYPE_EXPECTED,
        FLOW_COMPLEX_VALUE_INVALID_JSON,
        FLOW_COMPLEX_VALUE_INVALID_MERGE_FIELD,
        FLOW_COMPLEX_VALUE_NOT_SUPPORTED,
        FLOW_COMPLEX_VALUE_SCALAR_TYPE_EXPECTED,
        FLOW_CONTEXT_RECORD_ASSIGNMENT_VARIABLE_INVALID,
        FLOW_ELEMENT_SCALE_LESS_THAN_ZERO,
        FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_CALLOUTS,
        FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_OBJECTS,
        FLOW_INCLUDES_STEP,
        FLOW_INTERVIEW_BULK_EXECUTION,
        FLOW_INTERVIEW_HANDLED_ERROR,
        FLOW_INTERVIEW_INPUT_VALIDATION,
        FLOW_INTERVIEW_INTERACTION_NOT_FOUND,
        FLOW_INTERVIEW_INVALID_CHOICE_USER_INPUT,
        FLOW_INTERVIEW_INVALID_FIELD_VALUE,
        FLOW_INTERVIEW_INVALID_START_REQUEST,
        FLOW_INTERVIEW_LIMIT_EXCEEDED,
        FLOW_INTERVIEW_MISSING_CHOICE_FOR_REQUIRED_CHOICE_FIELD,
        FLOW_INTERVIEW_MISSING_VALUE_FOR_REQUIRED_INPUT_FIELD,
        FLOW_INTERVIEW_NAVIGATE,
        FLOW_INTERVIEW_RANGE_VALIDATION,
        FLOW_INTERVIEW_REGEX_VALIDATION,
        FLOW_INTERVIEW_RESUME_INTERVIEW,
        FLOW_INTERVIEW_SAVE_RESULT,
        FLOW_INTERVIEW_SET_CHOICE_SELECTED,
        FLOW_INTERVIEW_START_INTERVIEW,
        FLOW_INTERVIEW_TYPE_CONVERSION,
        FLOW_INVALID_NAME,
        FLOW_NAME_USED_IN_OTHER_CLIENT,
        FLOW_OVERRIDABLE_CANNOT_BE_OVERRIDE,
        FLOW_OVERRIDABLE_CANNOT_BE_TEMPLATE,
        FLOW_OVERRIDDEN_FLOW_INVALID_REFERENCE,
        FLOW_OVERRIDE_EXTRA_VARIABLE,
        FLOW_OVERRIDE_INCOMPATIBLE_PROCESS_TYPE,
        FLOW_OVERRIDE_INCOMPATIBLE_TYPE,
        FLOW_OVERRIDE_INCOMPATIBLE_VARIABLE,
        FLOW_RECORD_PRIOR_AUTOLAUNCH_UPDATE_ONLY,
        FLOW_RECORD_PRIOR_INVALID_IN_RECORD_CREATE,
        FLOW_RECORD_PRIOR_INVALID_IN_RECORD_DELETE,
        FLOW_RECORD_PRIOR_INVALID_IN_RECORD_UPDATE,
        FLOW_RECORD_PRIOR_READ_ONLY,
        FLOW_REFERENCES_APEX_CLASS_NOT_IN_SAME_PACKAGE,
        FLOW_RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED_FOR_RECORD_PRIOR,
        FLOW_SCHEDULED_PATH_ALLOWED_ONE_ASYNCAFTERCOMMIT_PATH,
        FLOW_SCHEDULED_PATH_ASYNCAFTERCOMMIT_REQUIRES_RECORD_CHANGED_OR_ISCHANGED,
        FLOW_SCHEDULED_PATH_CANNOT_USE_IS_CHANGED,
        FLOW_SCHEDULED_PATH_INCOMPATIBLE_TIME_SOURCE,
        FLOW_SCHEDULED_PATH_INCOMPATIBLE_WHEN_DECISION_REQUIRES_RECORD_CHANGED,
        FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_FLOW_TRIGGER_TYPE,
        FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_RECORD_PRIOR,
        FLOW_SCHEDULED_PATH_INVALID_BATCH_SIZE,
        FLOW_SCHEDULED_PATH_INVALID_OFFSET,
        FLOW_SCHEDULED_PATH_REQUIRES_DEFAULT_WORKFLOW_USER,
        FLOW_SCHEDULED_PATH_REQUIRES_RECORD_CHANGED_TO_MEET_CRITERIA,
        FLOW_SCHEDULE_INFORMATION_INCOMPLETE,
        FLOW_SOBJECT_VARIABLE_NOT_PERSISTED,
        FLOW_SOURCE_TEMPLATE_INVALID_REFERENCE,
        FLOW_STAGE_INCLUDES_REFERENCES,
        FLOW_STAGE_ORDER_DUPLICATE,
        FLOW_STAGE_ORDER_OUT_OF_RANGE,
        FLOW_SYSTEM_VARIABLE_NOT_SUPPORTED_FOR_TRIGGERTYPE,
        FLOW_TRIGGER_DERIVED_FIELD_NOT_SUPPORTED,
        FLOW_TRIGGER_ORDER_OUT_OF_BOUNDS,
        FLOW_TRIGGER_TYPE_INCOMPATIBLE_WITH_RECORD_TRIGGER_TYPE,
        FORMULA_CMT_LIMIT_EXCEEDED,
        FORMULA_EXPRESSION_INVALID,
        GLOBAL_VARIABLE_NOT_SUPPORTED_FOR_PROCESSTYPE,
        HTTP_METHOD_NOT_SUPPORTED,
        INCONSISTENT_DYNAMIC_TYPE_MAPPING,
        INCONSISTENT_VALUE_FOR_DYNAMIC_VALUE_FIELD,
        INPUTPARAM_CONFIGURATION_NOT_FOUND,
        INPUTPARAM_INCOMPATIBLE_CONFIGURATION_ONLY,
        INPUTPARAM_INCOMPATIBLE_DATATYPE,
        INPUTPARAM_INCOMPATIBLE_WITH_COLLECTION_VARIABLE,
        INPUTPARAM_INCOMPATIBLE_WITH_NONCOLLECTION_VARIABLE,
        INPUTPARAM_MISMATCHED_OBJECTTYPE,
        INVALID_ASSIGNEE,
        INVALID_EMAIL_ADDRESS,
        INVALID_FLOW,
        INVALID_FLOW_INTERVIEW,
        INVALID_REGEX_IN_SURVEY_QUESTIONS,
        INVALID_SENDER_TYPE,
        INVALID_SURVEY_VARIABLE_NAME_OR_TYPE,
        LOOP_ASSIGNNEXTVALUETO_MISMATCHED_APEXCLASSTYPE,
        LOOP_ASSIGNNEXTVALUETO_MISMATCHED_DATATYPE,
        LOOP_ASSIGNNEXTVALUETO_MISMATCHED_OBJECTTYPE,
        LOOP_ASSIGNNEXTVALUETO_MISSING,
        LOOP_ASSIGNNEXTVALUETO_MISSING_VARIABLE,
        LOOP_ASSIGNNEXTVALUETO_REFERENCE_NOT_FOUND,
        LOOP_COLLECTION_ELEMENT_NOT_FOUND,
        LOOP_COLLECTION_NOT_FOUND,
        LOOP_COLLECTION_NOT_SUPPORTED_FOR_FIELD,
        LOOP_MISSING_COLLECTION,
        MAX_EXTERNAL_REFERENCES_IN_QUERY,
        MAX_STATEMENT_SIZE,
        MISSING_ASSIGNEE,
        MISSING_ASSIGNEE_TYPE,
        MISSING_EMAIL_RECIPIENTS,
        MULTIPLE_ASSIGNEES_NOT_ALLOWED,
        NON_EXPOSED_COMPONENT_IN_FLOW,
        NON_GLOBAL_COMPONENT_IN_EXPORTED_FLOW,
        NUMBER_OF_SCREENFIELD_REGIONS_EXCEEDS_LIMIT,
        OBJECTTYPE_INVALID,
        OBJECT_CANNOT_BE_CREATED,
        OBJECT_CANNOT_BE_DELETED,
        OBJECT_CANNOT_BE_QUERIED,
        OBJECT_CANNOT_BE_UPDATED,
        OBJECT_ENCRYPTED_FIELDS_NOT_SUPPORTED,
        OBJECT_NOT_FOUND,
        OBJECT_TYPE_DOES_NOT_EXIST,
        ORCHESTRATION_REQUIRESASYNCPROCESSING_NOT_SUPPORTED,
        ORG_WIDE_EMAIL_INVALID,
        ORG_WIDE_EMAIL_NOT_USED,
        OUTPUTPARAM_ASSIGNTOREFERENCE_INVALID,
        OUTPUTPARAM_ASSIGNTOREFERENCE_NOTFOUND,
        OUTPUTPARAM_INCOMPATIBLE_DATATYPE,
        OUTPUTPARAM_MISMATCHED_OBJECTTYPE,
        OUTPUTPARAM_MISMATCHED_WITH_COLLECTION_VARIABLE,
        OUTPUTPARAM_MISSING_ASSIGNTOREFERENCE,
        OUTPUTPARAM_MISTMATCHED_WITH_NONCOLLECTION_VARIABLE,
        PARAM_DATATYPE_NOT_SUPPORTED,
        PAST_SCHEDULE_FLOW_WILL_NOT_RUN,
        PRICE_ADJUSTMENT_TIER_VALIDATION_ERROR,
        PROCESSMETADATAVALUES_NOT_SUPPORTED_FOR_PROCESSTYPE,
        PROCESSMETADATAVALUE_NONEXISTENT_ELEMENT,
        PROCESSTYPE_COMPONENTTYPE_NOT_SUPPORTED,
        PROCESSTYPE_ELEMENT_CONFIG_NOT_SUPPORTED,
        PROCESSTYPE_ELEMENT_NOT_SUPPORTED,
        PROCESSTYPE_EVALUATIONFLOW_REQUIRED,
        PROCESSTYPE_NOT_SUPPORTED,
        PROCESSTYPE_SCREEN_FIELDTYPE_NOT_SUPPORTED,
        PROCESS_TYPE_INCOMPATIBLE,
        RECOMMENDATION_STRATEGY_EXCEPTION,
        RECORDFILTER_ENCRYPTED_FIELDS_NOT_SUPPORTED,
        RECORDFILTER_GEOLOCATION_FIELDS_NOT_SUPPORTED,
        RECORDFILTER_INVALID_DATATYPE,
        RECORDFILTER_INVALID_ELEMENT,
        RECORDFILTER_INVALID_OPERATOR,
        RECORDFILTER_INVALID_REFERENCE,
        RECORDFILTER_MISSING_DATATYPE,
        RECORDFILTER_MULTIPLE_QUERIES_SAME_FIELD,
        RECORDFILTER_NON_PRIMITIVE,
        RECORDLOOKUP_IDASSIGNMENT_VARIABLE_INCOMPATIBLE_DATATYPE,
        RECORDLOOKUP_IDASSIGNMENT_VARIABLE_NOT_FOUND,
        RECORDUPDATE_MISSING_FILTERS,
        REFERENCED_ELEMENT_NOT_FOUND,
        REQUIRED_VARIABLE_INVALID,
        REQUIRED_VARIABLE_MISSING,
        RESOURCE_NOT_SUPPORTED,
        RULE_MISSING_CONDITION,
        RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED,
        SCHEDULE_TRIGGERED_FLOW_REQUIRES_DEFAULT_WORKFLOW_USER,
        SCREENCOMPONENT_CONTAINS_VISIBILITY_RULE,
        SCREENFIELD_API_VERSION_NOT_SUPPORTED,
        SCREENFIELD_BOOLEAN_ISREQUIRED_IS_FALSE,
        SCREENFIELD_CANNOT_HAVE_BOTH_DEFAULTVALUE_AND_DEFAULTSELECTEDCHOICEREFERENCE,
        SCREENFIELD_DEFAULTVALUE_NOT_SUPPORTED,
        SCREENFIELD_EXTENSION_DUPLICATE_INPUT_PARAM,
        SCREENFIELD_EXTENSION_DUPLICATE_OUTPUT_PARAM,
        SCREENFIELD_EXTENSION_IMPLEMENTATION_INVALID,
        SCREENFIELD_EXTENSION_INPUT_ATTRIBUTE_INVALID,
        SCREENFIELD_EXTENSION_NAME_INVALID,
        SCREENFIELD_EXTENSION_NAME_MISSING,
        SCREENFIELD_EXTENSION_NAME_NOT_SUPPORTED,
        SCREENFIELD_EXTENSION_OUTPUT_ATTRIBUTE_INVALID,
        SCREENFIELD_EXTENSION_REQUIRED_INPUT_MISSING,
        SCREENFIELD_INPUTS_NOT_SUPPORTED,
        SCREENFIELD_INPUTS_ON_NEXT_NAV_TO_ASSOC_SCRN_NOT_SUPPORTED,
        SCREENFIELD_INVALID_DATATYPE,
        SCREENFIELD_MULTISELECTCHOICE_SEMICOLON_NOT_SUPPORTED,
        SCREENFIELD_OBJECTFIELDREFERENCE_INVALID_FORMAT,
        SCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_DEFAULTVALUE,
        SCREENFIELD_OBJECTPROVIDED_CANNOT_HAVE_HELPTEXT,
        SCREENFIELD_OBJECTPROVIDED_ISREQUIRED_NOT_SUPPORTED,
        SCREENFIELD_OBJECTPROVIDED_LIGHTNING_RUNTIME_DISABLED,
        SCREENFIELD_OBJECTPROVIDED_MISSING_OBJECTFIELDREFERENCE,
        SCREENFIELD_OUTPUTS_NOT_SUPPORTED,
        SCREENFIELD_REGION_CONTAINS_DUPLICATE_INPUT_PARAMETER_VALUES,
        SCREENFIELD_REGION_INPUT_PARAMETER_NOT_SUPPORTED,
        SCREENFIELD_REGION_MISSING_REQUIRED_PERMISSIONS,
        SCREENFIELD_REGION_NOT_IN_CONTAINER,
        SCREENFIELD_REGION_REQUIRED_INPUT_PARAMETER_MISSING,
        SCREENFIELD_REGION_WIDTH_SUM_EXCEEDS_LIMIT,
        SCREENFIELD_REGION_WIDTH_VALUE_INVALID,
        SCREENFIELD_TYPE_NOT_SUPPORTED,
        SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_API_VERSION,
        SCREENFIELD_USERINPUT_NOT_SUPPORTED_FOR_CHOICETYPE,
        SCREENFIELD_VALIDATIONRULE_NOT_SUPPORTED,
        SCREENFOOTER_MERGEFIELD_NOT_SUPPORTED,
        SCREENRULE_ACTION_INVALID_ATTRIBUTE,
        SCREENRULE_ACTION_INVALID_ATTRIBUTE_FOR_API_VERSION,
        SCREENRULE_ACTION_INVALID_VALUE,
        SCREENRULE_ACTION_MISSING_ATTRIBUTE,
        SCREENRULE_ACTION_MISSING_FIELDREFERENCE,
        SCREENRULE_ACTION_MISSING_VALUE,
        SCREENRULE_ATTRIBUTE_NOT_SUPPORTED_FOR_SCREENFIELD,
        SCREENRULE_FIELD_NOT_FOUND_ON_SCREEN,
        SCREENRULE_MISSING_ACTION,
        SCREENRULE_NOT_SUPPORTED_IN_ORG,
        SCREENRULE_SCREENFIELD_NOT_VISIBLE,
        SCREENRULE_VISIBILITY_NOT_SUPPORTED_IN_ORG,
        SCREEN_ALLOWBACK_ALLOWFINISH_BOTH_FALSE,
        SCREEN_CONTAINS_LIGHTNING_COMPONENT,
        SCREEN_CONTAINS_REGION_CONTAINER_COMPONENT,
        SCREEN_MISSING_FOOTER_AND_LIGHTNING_COMPONENT,
        SCREEN_MISSING_LABEL,
        SCREEN_MULTISELECTFIELD_DOESNT_SUPPORT_CHOICE_WITH_USERINPUT,
        SCREEN_PAUSEDTEXT_NOT_SHOWN_WHEN_ALLOWPAUSE_IS_FALSE,
        SETTING_FIELD_MAKES_OTHER_FIELD_REQUIRED,
        SETTING_FIELD_MAKES_OTHER_FIELD_UNSUPPORTED,
        SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_UNSUPPORTED,
        SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_UNSUPPORTED,
        SLACK_API_EXCEPTION_EXTENSION,
        SOBJECT_ELEMENT_INCOMPATIBLE_DATATYPE,
        SOBJECT_ELEMENT_MISMATCHED_OBJECTTYPE,
        SORT_ENCRYPTED_FIELDS_NOT_SUPPORTED,
        SORT_FIELD_MISSING,
        SORT_FIELD_NOT_SUPPORTED,
        SORT_GEOLOCATION_FIELDS_NOT_SUPPORTED,
        SORT_LIMIT_INVALID,
        SORT_ORDER_MISSING,
        SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_REQUIRED,
        STAGE_NAME_NOT_FULLY_QUALIFIED,
        START_ELEMENT_MISSING,
        SUBFLOW_DESKTOP_DESIGNER_FLOWS_NOT_SUPPORTED,
        SUBFLOW_DIFFERENT_RUNMODE,
        SUBFLOW_INPUT_ELEMENT_INCOMPATIBLE_DATATYPES,
        SUBFLOW_INPUT_INVALID_VALUE,
        SUBFLOW_INPUT_MISMATCHED_APEX_CLASS,
        SUBFLOW_INPUT_MISMATCHED_COLLECTIONTYPES,
        SUBFLOW_INPUT_MISMATCHED_OBJECTS,
        SUBFLOW_INPUT_MISSING_NAME,
        SUBFLOW_INPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE,
        SUBFLOW_INPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE,
        SUBFLOW_INPUT_VALUE_INCOMPATIBLE_DATATYPES,
        SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW,
        SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW,
        SUBFLOW_INPUT_VARIABLE_NO_INPUT_ACCESS,
        SUBFLOW_INVALID_NAME,
        SUBFLOW_INVALID_REFERENCE,
        SUBFLOW_MASTER_FLOW_TYPE_NOT_AUTOLAUNCHED,
        SUBFLOW_MISSING_NAME,
        SUBFLOW_NO_ACTIVE_VERSION,
        SUBFLOW_OUTPUT_INCOMPATIBLE_DATATYPES,
        SUBFLOW_OUTPUT_MISMATCHED_APEX_CLASS,
        SUBFLOW_OUTPUT_MISMATCHED_COLLECTIONTYPES,
        SUBFLOW_OUTPUT_MISMATCHED_OBJECTS,
        SUBFLOW_OUTPUT_MISSING_ASSIGNTOREFERENCE,
        SUBFLOW_OUTPUT_MISSING_NAME,
        SUBFLOW_OUTPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE,
        SUBFLOW_OUTPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE,
        SUBFLOW_OUTPUT_TARGET_DOES_NOT_EXIST_IN_MASTER_FLOW,
        SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW,
        SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW,
        SUBFLOW_OUTPUT_VARIABLE_NO_OUTPUT_ACCESS,
        SUBFLOW_PROCESSTYPE_NOT_SUPPORTED,
        SUBFLOW_PROCESS_TYPE_INCOMPATIBLE,
        SUBFLOW_REFERENCES_MASTERFLOW,
        SURVEY_ADVANCED_CONDITION_LOGIC_NOT_SUPPORTED,
        SURVEY_CHOICE_NOT_REFERENCED_BY_A_QUESTION,
        SURVEY_CHOICE_REFERENCED_BY_MULTIPLE_QUESTIONS,
        SURVEY_ELEMENT_NEVER_REACHED,
        SURVEY_ENRICH_INVALID_CONFIGURATION,
        SURVEY_INACTIVE_SUBFLOWS,
        SURVEY_INVALID_ATTACHMENT_QUESTION_CONFIGURATION,
        SURVEY_INVALID_CMT_CONFIGURED,
        SURVEY_INVALID_LINK_TARGET_IN_QUESTION_LABEL,
        SURVEY_INVALID_MERGE_FIELD_CONFIGURATION,
        SURVEY_INVALID_OUTPUT_VARIABLE,
        SURVEY_MISSING_QUESTION_OR_SUBFLOW,
        SURVEY_MISSING_REQUIRED_VARIABLES,
        SURVEY_MULTIPLE_SCREENS_CANNOT_CONNECT_TO_SAME_DECISION,
        SURVEY_NESTED_SUBFLOWS,
        SURVEY_NONSURVEY_SUBFLOWS,
        SURVEY_RULE_INVALID_RIGHT_OPERAND,
        SURVEY_SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_QUESTION,
        SURVEY_START_ELEMENT_INVALID,
        SURVEY_VARIABLE_ACCESS_INVALID,
        SYSTEM_MODE_NOT_ALLOWED,
        TRIGGERED_FLOW_REDUNDANT_QUERY,
        TRIGGERING_RECORD_UPDATE_REQUIRES_INPUTASSIGNMENTS,
        TRIGGER_ORDER_NOT_SUPPORTED,
        TRIGGER_TYPE_CONTEXT_OBJECT_NOT_SUPPORTED,
        TRIGGER_TYPE_ELEMENT_NOT_SUPPORTED,
        TRIGGER_TYPE_INCOMPATIBLE_WITH_PROCESS_TYPE,
        TRIGGER_TYPE_NOT_ALLOWED_FOR_SUBFLOW,
        TYPE_MAPPING_DUPLICATED,
        TYPE_MAPPING_NAME_MISSING,
        TYPE_MAPPING_NOT_FOUND,
        TYPE_MAPPING_NOT_SUPPORTED,
        TYPE_MAPPING_NOT_SUPPORTED_FOR_API_VERSION,
        TYPE_MAPPING_NOT_SUPPORTED_FOR_PROCESS_TYPE,
        UNEXPECTED_ERROR,
        VALIDATION_EXCEPTION,
        VALUE_CHAR_LIMIT_EXCEEDED,
        VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE,
        VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE_AND_COLLECTION,
        VARIABLE_FIELD_REQUIRED_FOR_DATATYPE,
        VARIABLE_SCALE_EXCEEDS_LIMIT,
        VARIABLE_SCALE_NEGATIVE_INTEGER,
        VARIABLE_SCALE_NULL,
        VERSION_NOT_VALID,
        VISIBILITY_RULE_EXCEEDS_CONDITION_LIMIT,
        VISIBILITY_RULE_NOT_AVAILABLE_IN_ORG,
        VISIBILITY_RULE_NOT_SUPPORTED_FOR_API_VERSION,
        VISIBILITY_RULE_NOT_SUPPORTED_FOR_PROCESSTYPE,
        VISIBILITY_RULE_NO_CONDITIONS,
        WAITEVENT_DEFAULT_CONNECTOR_MISSING_LABEL,
        WAITEVENT_DUPLICATE_INPUT_PARAM,
        WAITEVENT_INPUT_NOT_SUPPORTED_FOR_EVENTTYPE,
        WAITEVENT_INPUT_REQUIRES_LITERAL_VALUE,
        WAITEVENT_INVALID_CONDITION_LOGIC,
        WAITEVENT_MISSING,
        WAITEVENT_MISSING_CONNECTOR,
        WAITEVENT_MISSING_EVENTTYPE,
        WAITEVENT_OBJECT_NOT_SUPPORTED_FOR_EVENTTYPE,
        WAITEVENT_OUTPUT_NOT_SUPPORTED_FOR_EVENTTYPE,
        WAITEVENT_RELATIVEALARM_INVALID_DATETIME_FIELD,
        WAITEVENT_RELATIVEALARM_INVALID_FIELD,
        WAITEVENT_RELATIVEALARM_INVALID_OBJECTTYPE,
        WAITEVENT_RELATIVEALARM_INVALID_OFFSETNUMBER,
        WAITEVENT_RELATIVEALARM_INVALID_OFFSETUNIT,
        WAITEVENT_REQUIRED_INPUT_MISSING,
        WAITEVENT_TYPE_INVALID_OR_NOT_SUPPORTED,
        WORKFLOW_MISSING_PROCESSMETADATAVALUES,
        WORKFLOW_OBJECTTYPE_NOT_FOUND,
        WORKFLOW_OBJECTTYPE_NOT_SUPPORTED,
        WORKFLOW_OBJECTVARIABLE_AND_OLDOBJECTVARIABLE_REFERENCE_SAME_SOBJECT_VARIABLE,
        WORKFLOW_OBJECTVARIABLE_DOESNT_SUPPORT_INPUT,
        WORKFLOW_OLDOBJECTVARIABLE_DOESNT_SUPPORT_INPUT,
        WORKFLOW_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME,
        WORKFLOW_PROCESS_METADATAVALUES_MISSING_NAME,
        WORKFLOW_RECURSIVECOUNTVARIABLE_DOESNT_SUPPORT_INPUT,
        WORKFLOW_RULE_NOT_DEACTIVATED,
        WORKFLOW_TRIGGERTYPE_INVALID_VALUE,
    }
    public class GetUserInfoResult
    {
        private bool accessibilityModeField;
        private bool chatterExternalField;
        private string currencySymbolField;
        private int orgAttachmentFileSizeLimitField;
        private string orgDefaultCurrencyIsoCodeField;
        private string orgDefaultCurrencyLocaleField;
        private bool orgDisallowHtmlAttachmentsField;
        private bool orgHasPersonAccountsField;
        private string organizationIdField;
        private bool organizationMultiCurrencyField;
        private string organizationNameField;
        private string profileIdField;
        private string roleIdField;
        private int sessionSecondsValidField;
        private string userDefaultCurrencyIsoCodeField;
        private string userEmailField;
        private string userFullNameField;
        private string userIdField;
        private string userLanguageField;
        private string userLocaleField;
        private string userNameField;
        private string userTimeZoneField;
        private string userTypeField;
        private string userUiSkinField;
        public bool accessibilityMode
        {
            get
            {
                return this.accessibilityModeField;
            }
            set
            {
                this.accessibilityModeField = value;
            }
        }
        public bool chatterExternal
        {
            get
            {
                return this.chatterExternalField;
            }
            set
            {
                this.chatterExternalField = value;
            }
        }
        public string currencySymbol
        {
            get
            {
                return this.currencySymbolField;
            }
            set
            {
                this.currencySymbolField = value;
            }
        }
        public int orgAttachmentFileSizeLimit
        {
            get
            {
                return this.orgAttachmentFileSizeLimitField;
            }
            set
            {
                this.orgAttachmentFileSizeLimitField = value;
            }
        }
        public string orgDefaultCurrencyIsoCode
        {
            get
            {
                return this.orgDefaultCurrencyIsoCodeField;
            }
            set
            {
                this.orgDefaultCurrencyIsoCodeField = value;
            }
        }
        public string orgDefaultCurrencyLocale
        {
            get
            {
                return this.orgDefaultCurrencyLocaleField;
            }
            set
            {
                this.orgDefaultCurrencyLocaleField = value;
            }
        }
        public bool orgDisallowHtmlAttachments
        {
            get
            {
                return this.orgDisallowHtmlAttachmentsField;
            }
            set
            {
                this.orgDisallowHtmlAttachmentsField = value;
            }
        }
        public bool orgHasPersonAccounts
        {
            get
            {
                return this.orgHasPersonAccountsField;
            }
            set
            {
                this.orgHasPersonAccountsField = value;
            }
        }
        public string organizationId
        {
            get
            {
                return this.organizationIdField;
            }
            set
            {
                this.organizationIdField = value;
            }
        }
        public bool organizationMultiCurrency
        {
            get
            {
                return this.organizationMultiCurrencyField;
            }
            set
            {
                this.organizationMultiCurrencyField = value;
            }
        }
        public string organizationName
        {
            get
            {
                return this.organizationNameField;
            }
            set
            {
                this.organizationNameField = value;
            }
        }
        public string profileId
        {
            get
            {
                return this.profileIdField;
            }
            set
            {
                this.profileIdField = value;
            }
        }
        public string roleId
        {
            get
            {
                return this.roleIdField;
            }
            set
            {
                this.roleIdField = value;
            }
        }
        public int sessionSecondsValid
        {
            get
            {
                return this.sessionSecondsValidField;
            }
            set
            {
                this.sessionSecondsValidField = value;
            }
        }
        public string userDefaultCurrencyIsoCode
        {
            get
            {
                return this.userDefaultCurrencyIsoCodeField;
            }
            set
            {
                this.userDefaultCurrencyIsoCodeField = value;
            }
        }
        public string userEmail
        {
            get
            {
                return this.userEmailField;
            }
            set
            {
                this.userEmailField = value;
            }
        }
        public string userFullName
        {
            get
            {
                return this.userFullNameField;
            }
            set
            {
                this.userFullNameField = value;
            }
        }
        public string userId
        {
            get
            {
                return this.userIdField;
            }
            set
            {
                this.userIdField = value;
            }
        }
        public string userLanguage
        {
            get
            {
                return this.userLanguageField;
            }
            set
            {
                this.userLanguageField = value;
            }
        }
        public string userLocale
        {
            get
            {
                return this.userLocaleField;
            }
            set
            {
                this.userLocaleField = value;
            }
        }
        public string userName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }
        public string userTimeZone
        {
            get
            {
                return this.userTimeZoneField;
            }
            set
            {
                this.userTimeZoneField = value;
            }
        }
        public string userType
        {
            get
            {
                return this.userTypeField;
            }
            set
            {
                this.userTypeField = value;
            }
        }
        public string userUiSkin
        {
            get
            {
                return this.userUiSkinField;
            }
            set
            {
                this.userUiSkinField = value;
            }
        }
    }
    public class UnexpectedErrorFault : ApiFault
    {
    }
    public class InvalidIdFault : ApiFault
    {
    }
    public class InvalidOldPasswordFault : ApiFault
    {
    }
    public class InvalidNewPasswordFault : ApiFault
    {
    }
    public class InvalidQueryLocatorFault : ApiFault
    {
    }
    public class ApiQueryFault : ApiFault
    {
        private int rowField;
        private int columnField;
        public int row
        {
            get
            {
                return this.rowField;
            }
            set
            {
                this.rowField = value;
            }
        }
        public int column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }
    }
    public class MalformedSearchFault : ApiQueryFault
    {
    }
    public class MalformedQueryFault : ApiQueryFault
    {
    }
    public class InvalidSObjectFault : ApiQueryFault
    {
    }
    public class InvalidFieldFault : ApiQueryFault
    {
    }
    public class LoginScopeHeader
    {
        private string organizationIdField;
        private string portalIdField;
        public string organizationId
        {
            get
            {
                return this.organizationIdField;
            }
            set
            {
                this.organizationIdField = value;
            }
        }
        public string portalId
        {
            get
            {
                return this.portalIdField;
            }
            set
            {
                this.portalIdField = value;
            }
        }
    }
    public class CallOptions
    {
        private string clientField;
        private string defaultNamespaceField;
        public string client
        {
            get
            {
                return this.clientField;
            }
            set
            {
                this.clientField = value;
            }
        }
        public string defaultNamespace
        {
            get
            {
                return this.defaultNamespaceField;
            }
            set
            {
                this.defaultNamespaceField = value;
            }
        }
    }
    public class loginRequest
    {
        public string client_id;
        public string client_secret;
        public string grant_type;
        public string username;
        public string password;
        public string scope;
        public string redirect_uri;
        public string response_type;
        public string code;
        public string state;
        public string refresh_token;
        public string token;
        public string login_hint;
        public string prompt;
        public string include_granted_scopes;
        public string access_type;
        public string assertion;
        public string nonce;
        public string display;
        public string subject_token_type;
        public string subject_token;
        public string actor_token_type;
        public string actor_token;

        internal void Encrypt(SfdcConnect.SfdcDataProtection service)
        {
            if (!string.IsNullOrEmpty(client_id)) client_id = service.Encrypt(client_id);
            if (!string.IsNullOrEmpty(client_secret)) client_secret = service.Encrypt(client_secret);
            if (!string.IsNullOrEmpty(username)) username = service.Encrypt(username);
            if (!string.IsNullOrEmpty(password)) password = service.Encrypt(password);
            if (!string.IsNullOrEmpty(refresh_token)) refresh_token = service.Encrypt(refresh_token);
        }

        internal void Decrypt(SfdcConnect.SfdcDataProtection service)
        {
            if (!string.IsNullOrEmpty(client_id)) client_id = service.Decrypt(client_id);
            if (!string.IsNullOrEmpty(client_secret)) client_secret = service.Decrypt(client_secret);
            if (!string.IsNullOrEmpty(username)) username = service.Decrypt(username);
            if (!string.IsNullOrEmpty(password)) password = service.Decrypt(password);
            if (!string.IsNullOrEmpty(refresh_token)) refresh_token = service.Decrypt(refresh_token);
        }

        public override string ToString()
        {
            System.Reflection.FieldInfo[] props = this.GetType().GetFields();
            System.Collections.Generic.List<string> values = new System.Collections.Generic.List<string>();
            foreach (System.Reflection.FieldInfo pi in props)
            {
                if (!string.IsNullOrEmpty(pi.Name) && pi.GetValue(this) != null) values.Add(pi.Name + "=" + System.Web.HttpUtility.UrlEncode(pi.GetValue(this).ToString()));
            }


            //if (!string.IsNullOrEmpty(client_id)) values.Add("client_id=" + HttpUtility.UrlEncode(client_id));
            //if (!string.IsNullOrEmpty(client_secret)) values.Add("client_secret=" + HttpUtility.UrlEncode(client_secret));
            //if (!string.IsNullOrEmpty(grant_type)) values.Add("grant_type=" + HttpUtility.UrlEncode(grant_type));
            //if (!string.IsNullOrEmpty(username)) values.Add("username=" + HttpUtility.UrlEncode(username));
            //if (!string.IsNullOrEmpty(password)) values.Add("password=" + HttpUtility.UrlEncode(password));
            //if (!string.IsNullOrEmpty(scope)) values.Add("scope=" + HttpUtility.UrlEncode(scope));
            //if (!string.IsNullOrEmpty(redirect_uri)) values.Add("redirect_uri=" + HttpUtility.UrlEncode(redirect_uri));
            //if (!string.IsNullOrEmpty(response_type)) values.Add("response_type=" + HttpUtility.UrlEncode(response_type));
            //if (!string.IsNullOrEmpty(code)) values.Add("code=" + HttpUtility.UrlEncode(code));
            //if (!string.IsNullOrEmpty(state)) values.Add("state=" + HttpUtility.UrlEncode(state));
            //if (!string.IsNullOrEmpty(refresh_token)) values.Add("refresh_token=" + HttpUtility.UrlEncode(refresh_token));
            //if (!string.IsNullOrEmpty(token)) values.Add("token=" + HttpUtility.UrlEncode(token));
            //if (!string.IsNullOrEmpty(assertion)) values.Add("assertion=" + HttpUtility.UrlEncode(assertion));
            //if (!string.IsNullOrEmpty(login_hint)) values.Add("login_hint=" + HttpUtility.UrlEncode(login_hint));
            //if (!string.IsNullOrEmpty(nonce)) values.Add("nonce=" + HttpUtility.UrlEncode(nonce));

            return string.Join("&", values);

        }
    }
    public class LoginResult
    {
        public string code;
        public string access_token;
        public string signature;
        public string scope;
        public string id_token;
        public string instance_url;
        public string id;
        public string token_type;
        public string issued_at;
        public string refresh_token;
        public string error;
        public string sfdc_site_url;
        public string sfdc_site_id;
        public string issued_token_type;
        public string expires_in;


        internal void Encrypt(SfdcConnect.SfdcDataProtection service)
        {
            if (!string.IsNullOrEmpty(access_token)) access_token = service.Encrypt(access_token);
            if (!string.IsNullOrEmpty(refresh_token)) refresh_token = service.Encrypt(refresh_token);
        }

        internal void Decrypt(SfdcConnect.SfdcDataProtection service)
        {
            if (!string.IsNullOrEmpty(access_token)) access_token = service.Decrypt(access_token);
            if (!string.IsNullOrEmpty(refresh_token)) refresh_token = service.Decrypt(refresh_token);
        }
    }
    public class loginResponse
    {
        public LoginResult result;
        public loginResponse()
        {
        }
        public loginResponse(LoginResult result)
        {
            this.result = result;
        }
    }
    public class SessionHeader
    {
        private string sessionIdField;
        public string sessionId
        {
            get
            {
                return this.sessionIdField;
            }
            set
            {
                this.sessionIdField = value;
            }
        }
    }
    public class PackageVersion
    {
        private int majorNumberField;
        private int minorNumberField;
        private string namespaceField;
        public int majorNumber
        {
            get
            {
                return this.majorNumberField;
            }
            set
            {
                this.majorNumberField = value;
            }
        }
        public int minorNumber
        {
            get
            {
                return this.minorNumberField;
            }
            set
            {
                this.minorNumberField = value;
            }
        }
        public string @namespace
        {
            get
            {
                return this.namespaceField;
            }
            set
            {
                this.namespaceField = value;
            }
        }
    }
    public class LocaleOptions
    {
        private string languageField;
        private bool localizeErrorsField;
        private bool localizeErrorsFieldSpecified;
        public string language
        {
            get
            {
                return this.languageField;
            }
            set
            {
                this.languageField = value;
            }
        }
        public bool localizeErrors
        {
            get
            {
                return this.localizeErrorsField;
            }
            set
            {
                this.localizeErrorsField = value;
            }
        }
        public bool localizeErrorsSpecified
        {
            get
            {
                return this.localizeErrorsFieldSpecified;
            }
            set
            {
                this.localizeErrorsFieldSpecified = value;
            }
        }
    }
    public class LimitInfo
    {
        private int currentField;
        private int limitField;
        private string typeField;
        public int current
        {
            get
            {
                return this.currentField;
            }
            set
            {
                this.currentField = value;
            }
        }
        public int limit
        {
            get
            {
                return this.limitField;
            }
            set
            {
                this.limitField = value;
            }
        }
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    public class DescribeSObjectResult
    {
        private ActionOverride[] actionOverridesField;
        private bool activateableField;
        private string associateEntityTypeField;
        private string associateParentEntityField;
        private ChildRelationship[] childRelationshipsField;
        private bool compactLayoutableField;
        private bool createableField;
        private bool customField;
        private bool customSettingField;
        private bool dataTranslationEnabledField;
        private bool dataTranslationEnabledFieldSpecified;
        private bool deepCloneableField;
        private string defaultImplementationField;
        private bool deletableField;
        private bool deprecatedAndHiddenField;
        private bool feedEnabledField;
        private Field[] fieldsField;
        private bool hasSubtypesField;
        private bool idEnabledField;
        private string implementedByField;
        private string implementsInterfacesField;
        private bool isInterfaceField;
        private bool isSubtypeField;
        private string keyPrefixField;
        private string labelField;
        private string labelPluralField;
        private bool layoutableField;
        private bool mergeableField;
        private bool mruEnabledField;
        private string nameField;
        private NamedLayoutInfo[] namedLayoutInfosField;
        private string networkScopeFieldNameField;
        private bool queryableField;
        private RecordTypeInfo[] recordTypeInfosField;
        private bool replicateableField;
        private bool retrieveableField;
        private bool searchLayoutableField;
        private bool searchLayoutableFieldSpecified;
        private bool searchableField;
        private ScopeInfo[] supportedScopesField;
        private bool triggerableField;
        private bool triggerableFieldSpecified;
        private bool undeletableField;
        private bool updateableField;
        private string urlDetailField;
        private string urlEditField;
        private string urlNewField;
        public ActionOverride[] actionOverrides
        {
            get
            {
                return this.actionOverridesField;
            }
            set
            {
                this.actionOverridesField = value;
            }
        }
        public bool activateable
        {
            get
            {
                return this.activateableField;
            }
            set
            {
                this.activateableField = value;
            }
        }
        public string associateEntityType
        {
            get
            {
                return this.associateEntityTypeField;
            }
            set
            {
                this.associateEntityTypeField = value;
            }
        }
        public string associateParentEntity
        {
            get
            {
                return this.associateParentEntityField;
            }
            set
            {
                this.associateParentEntityField = value;
            }
        }
        public ChildRelationship[] childRelationships
        {
            get
            {
                return this.childRelationshipsField;
            }
            set
            {
                this.childRelationshipsField = value;
            }
        }
        public bool compactLayoutable
        {
            get
            {
                return this.compactLayoutableField;
            }
            set
            {
                this.compactLayoutableField = value;
            }
        }
        public bool createable
        {
            get
            {
                return this.createableField;
            }
            set
            {
                this.createableField = value;
            }
        }
        public bool custom
        {
            get
            {
                return this.customField;
            }
            set
            {
                this.customField = value;
            }
        }
        public bool customSetting
        {
            get
            {
                return this.customSettingField;
            }
            set
            {
                this.customSettingField = value;
            }
        }
        public bool dataTranslationEnabled
        {
            get
            {
                return this.dataTranslationEnabledField;
            }
            set
            {
                this.dataTranslationEnabledField = value;
            }
        }
        public bool dataTranslationEnabledSpecified
        {
            get
            {
                return this.dataTranslationEnabledFieldSpecified;
            }
            set
            {
                this.dataTranslationEnabledFieldSpecified = value;
            }
        }
        public bool deepCloneable
        {
            get
            {
                return this.deepCloneableField;
            }
            set
            {
                this.deepCloneableField = value;
            }
        }
        public string defaultImplementation
        {
            get
            {
                return this.defaultImplementationField;
            }
            set
            {
                this.defaultImplementationField = value;
            }
        }
        public bool deletable
        {
            get
            {
                return this.deletableField;
            }
            set
            {
                this.deletableField = value;
            }
        }
        public bool deprecatedAndHidden
        {
            get
            {
                return this.deprecatedAndHiddenField;
            }
            set
            {
                this.deprecatedAndHiddenField = value;
            }
        }
        public bool feedEnabled
        {
            get
            {
                return this.feedEnabledField;
            }
            set
            {
                this.feedEnabledField = value;
            }
        }
        public Field[] fields
        {
            get
            {
                return this.fieldsField;
            }
            set
            {
                this.fieldsField = value;
            }
        }
        public bool hasSubtypes
        {
            get
            {
                return this.hasSubtypesField;
            }
            set
            {
                this.hasSubtypesField = value;
            }
        }
        public bool idEnabled
        {
            get
            {
                return this.idEnabledField;
            }
            set
            {
                this.idEnabledField = value;
            }
        }
        public string implementedBy
        {
            get
            {
                return this.implementedByField;
            }
            set
            {
                this.implementedByField = value;
            }
        }
        public string implementsInterfaces
        {
            get
            {
                return this.implementsInterfacesField;
            }
            set
            {
                this.implementsInterfacesField = value;
            }
        }
        public bool isInterface
        {
            get
            {
                return this.isInterfaceField;
            }
            set
            {
                this.isInterfaceField = value;
            }
        }
        public bool isSubtype
        {
            get
            {
                return this.isSubtypeField;
            }
            set
            {
                this.isSubtypeField = value;
            }
        }
        public string keyPrefix
        {
            get
            {
                return this.keyPrefixField;
            }
            set
            {
                this.keyPrefixField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string labelPlural
        {
            get
            {
                return this.labelPluralField;
            }
            set
            {
                this.labelPluralField = value;
            }
        }
        public bool layoutable
        {
            get
            {
                return this.layoutableField;
            }
            set
            {
                this.layoutableField = value;
            }
        }
        public bool mergeable
        {
            get
            {
                return this.mergeableField;
            }
            set
            {
                this.mergeableField = value;
            }
        }
        public bool mruEnabled
        {
            get
            {
                return this.mruEnabledField;
            }
            set
            {
                this.mruEnabledField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public NamedLayoutInfo[] namedLayoutInfos
        {
            get
            {
                return this.namedLayoutInfosField;
            }
            set
            {
                this.namedLayoutInfosField = value;
            }
        }
        public string networkScopeFieldName
        {
            get
            {
                return this.networkScopeFieldNameField;
            }
            set
            {
                this.networkScopeFieldNameField = value;
            }
        }
        public bool queryable
        {
            get
            {
                return this.queryableField;
            }
            set
            {
                this.queryableField = value;
            }
        }
        public RecordTypeInfo[] recordTypeInfos
        {
            get
            {
                return this.recordTypeInfosField;
            }
            set
            {
                this.recordTypeInfosField = value;
            }
        }
        public bool replicateable
        {
            get
            {
                return this.replicateableField;
            }
            set
            {
                this.replicateableField = value;
            }
        }
        public bool retrieveable
        {
            get
            {
                return this.retrieveableField;
            }
            set
            {
                this.retrieveableField = value;
            }
        }
        public bool searchLayoutable
        {
            get
            {
                return this.searchLayoutableField;
            }
            set
            {
                this.searchLayoutableField = value;
            }
        }
        public bool searchLayoutableSpecified
        {
            get
            {
                return this.searchLayoutableFieldSpecified;
            }
            set
            {
                this.searchLayoutableFieldSpecified = value;
            }
        }
        public bool searchable
        {
            get
            {
                return this.searchableField;
            }
            set
            {
                this.searchableField = value;
            }
        }
        public ScopeInfo[] supportedScopes
        {
            get
            {
                return this.supportedScopesField;
            }
            set
            {
                this.supportedScopesField = value;
            }
        }
        public bool triggerable
        {
            get
            {
                return this.triggerableField;
            }
            set
            {
                this.triggerableField = value;
            }
        }
        public bool triggerableSpecified
        {
            get
            {
                return this.triggerableFieldSpecified;
            }
            set
            {
                this.triggerableFieldSpecified = value;
            }
        }
        public bool undeletable
        {
            get
            {
                return this.undeletableField;
            }
            set
            {
                this.undeletableField = value;
            }
        }
        public bool updateable
        {
            get
            {
                return this.updateableField;
            }
            set
            {
                this.updateableField = value;
            }
        }
        public string urlDetail
        {
            get
            {
                return this.urlDetailField;
            }
            set
            {
                this.urlDetailField = value;
            }
        }
        public string urlEdit
        {
            get
            {
                return this.urlEditField;
            }
            set
            {
                this.urlEditField = value;
            }
        }
        public string urlNew
        {
            get
            {
                return this.urlNewField;
            }
            set
            {
                this.urlNewField = value;
            }
        }
    }
    public class ActionOverride
    {
        private string formFactorField;
        private bool isAvailableInTouchField;
        private string nameField;
        private string pageIdField;
        private string urlField;
        public string formFactor
        {
            get
            {
                return this.formFactorField;
            }
            set
            {
                this.formFactorField = value;
            }
        }
        public bool isAvailableInTouch
        {
            get
            {
                return this.isAvailableInTouchField;
            }
            set
            {
                this.isAvailableInTouchField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string pageId
        {
            get
            {
                return this.pageIdField;
            }
            set
            {
                this.pageIdField = value;
            }
        }
        public string url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }
    }
    public class ChildRelationship
    {
        private bool cascadeDeleteField;
        private string childSObjectField;
        private bool deprecatedAndHiddenField;
        private string fieldField;
        private string[] junctionIdListNamesField;
        private string[] junctionReferenceToField;
        private string relationshipNameField;
        private bool restrictedDeleteField;
        private bool restrictedDeleteFieldSpecified;
        public bool cascadeDelete
        {
            get
            {
                return this.cascadeDeleteField;
            }
            set
            {
                this.cascadeDeleteField = value;
            }
        }
        public string childSObject
        {
            get
            {
                return this.childSObjectField;
            }
            set
            {
                this.childSObjectField = value;
            }
        }
        public bool deprecatedAndHidden
        {
            get
            {
                return this.deprecatedAndHiddenField;
            }
            set
            {
                this.deprecatedAndHiddenField = value;
            }
        }
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        public string[] junctionIdListNames
        {
            get
            {
                return this.junctionIdListNamesField;
            }
            set
            {
                this.junctionIdListNamesField = value;
            }
        }
        public string[] junctionReferenceTo
        {
            get
            {
                return this.junctionReferenceToField;
            }
            set
            {
                this.junctionReferenceToField = value;
            }
        }
        public string relationshipName
        {
            get
            {
                return this.relationshipNameField;
            }
            set
            {
                this.relationshipNameField = value;
            }
        }
        public bool restrictedDelete
        {
            get
            {
                return this.restrictedDeleteField;
            }
            set
            {
                this.restrictedDeleteField = value;
            }
        }
        public bool restrictedDeleteSpecified
        {
            get
            {
                return this.restrictedDeleteFieldSpecified;
            }
            set
            {
                this.restrictedDeleteFieldSpecified = value;
            }
        }
    }
    public class Field
    {
        private bool aggregatableField;
        private bool aiPredictionFieldField;
        private bool autoNumberField;
        private int byteLengthField;
        private bool calculatedField;
        private string calculatedFormulaField;
        private bool cascadeDeleteField;
        private bool cascadeDeleteFieldSpecified;
        private bool caseSensitiveField;
        private string compoundFieldNameField;
        private string controllerNameField;
        private bool createableField;
        private bool customField;
        private bool dataTranslationEnabledField;
        private bool dataTranslationEnabledFieldSpecified;
        private object defaultValueField;
        private string defaultValueFormulaField;
        private bool defaultedOnCreateField;
        private bool dependentPicklistField;
        private bool dependentPicklistFieldSpecified;
        private bool deprecatedAndHiddenField;
        private int digitsField;
        private bool displayLocationInDecimalField;
        private bool displayLocationInDecimalFieldSpecified;
        private bool encryptedField;
        private bool encryptedFieldSpecified;
        private bool externalIdField;
        private bool externalIdFieldSpecified;
        private string extraTypeInfoField;
        private bool filterableField;
        private FilteredLookupInfo filteredLookupInfoField;
        private bool formulaTreatNullNumberAsZeroField;
        private bool formulaTreatNullNumberAsZeroFieldSpecified;
        private bool groupableField;
        private bool highScaleNumberField;
        private bool highScaleNumberFieldSpecified;
        private bool htmlFormattedField;
        private bool htmlFormattedFieldSpecified;
        private bool idLookupField;
        private string inlineHelpTextField;
        private string labelField;
        private int lengthField;
        private string maskField;
        private string maskTypeField;
        private string nameField1;
        private bool nameFieldField;
        private bool namePointingField;
        private bool namePointingFieldSpecified;
        private bool nillableField;
        private bool permissionableField;
        private PicklistEntry[] picklistValuesField;
        private bool polymorphicForeignKeyField;
        private int precisionField;
        private bool queryByDistanceField;
        private string referenceTargetFieldField;
        private string[] referenceToField;
        private string relationshipNameField;
        private int relationshipOrderField;
        private bool relationshipOrderFieldSpecified;
        private bool restrictedDeleteField;
        private bool restrictedDeleteFieldSpecified;
        private bool restrictedPicklistField;
        private int scaleField;
        private bool searchPrefilterableField;
        private soapType soapTypeField;
        private bool sortableField;
        private bool sortableFieldSpecified;
        private fieldType typeField;
        private bool uniqueField;
        private bool updateableField;
        private bool writeRequiresMasterReadField;
        private bool writeRequiresMasterReadFieldSpecified;
        public bool aggregatable
        {
            get
            {
                return this.aggregatableField;
            }
            set
            {
                this.aggregatableField = value;
            }
        }
        public bool aiPredictionField
        {
            get
            {
                return this.aiPredictionFieldField;
            }
            set
            {
                this.aiPredictionFieldField = value;
            }
        }
        public bool autoNumber
        {
            get
            {
                return this.autoNumberField;
            }
            set
            {
                this.autoNumberField = value;
            }
        }
        public int byteLength
        {
            get
            {
                return this.byteLengthField;
            }
            set
            {
                this.byteLengthField = value;
            }
        }
        public bool calculated
        {
            get
            {
                return this.calculatedField;
            }
            set
            {
                this.calculatedField = value;
            }
        }
        public string calculatedFormula
        {
            get
            {
                return this.calculatedFormulaField;
            }
            set
            {
                this.calculatedFormulaField = value;
            }
        }
        public bool cascadeDelete
        {
            get
            {
                return this.cascadeDeleteField;
            }
            set
            {
                this.cascadeDeleteField = value;
            }
        }
        public bool cascadeDeleteSpecified
        {
            get
            {
                return this.cascadeDeleteFieldSpecified;
            }
            set
            {
                this.cascadeDeleteFieldSpecified = value;
            }
        }
        public bool caseSensitive
        {
            get
            {
                return this.caseSensitiveField;
            }
            set
            {
                this.caseSensitiveField = value;
            }
        }
        public string compoundFieldName
        {
            get
            {
                return this.compoundFieldNameField;
            }
            set
            {
                this.compoundFieldNameField = value;
            }
        }
        public string controllerName
        {
            get
            {
                return this.controllerNameField;
            }
            set
            {
                this.controllerNameField = value;
            }
        }
        public bool createable
        {
            get
            {
                return this.createableField;
            }
            set
            {
                this.createableField = value;
            }
        }
        public bool custom
        {
            get
            {
                return this.customField;
            }
            set
            {
                this.customField = value;
            }
        }
        public bool dataTranslationEnabled
        {
            get
            {
                return this.dataTranslationEnabledField;
            }
            set
            {
                this.dataTranslationEnabledField = value;
            }
        }
        public bool dataTranslationEnabledSpecified
        {
            get
            {
                return this.dataTranslationEnabledFieldSpecified;
            }
            set
            {
                this.dataTranslationEnabledFieldSpecified = value;
            }
        }
        public object defaultValue
        {
            get
            {
                return this.defaultValueField;
            }
            set
            {
                this.defaultValueField = value;
            }
        }
        public string defaultValueFormula
        {
            get
            {
                return this.defaultValueFormulaField;
            }
            set
            {
                this.defaultValueFormulaField = value;
            }
        }
        public bool defaultedOnCreate
        {
            get
            {
                return this.defaultedOnCreateField;
            }
            set
            {
                this.defaultedOnCreateField = value;
            }
        }
        public bool dependentPicklist
        {
            get
            {
                return this.dependentPicklistField;
            }
            set
            {
                this.dependentPicklistField = value;
            }
        }
        public bool dependentPicklistSpecified
        {
            get
            {
                return this.dependentPicklistFieldSpecified;
            }
            set
            {
                this.dependentPicklistFieldSpecified = value;
            }
        }
        public bool deprecatedAndHidden
        {
            get
            {
                return this.deprecatedAndHiddenField;
            }
            set
            {
                this.deprecatedAndHiddenField = value;
            }
        }
        public int digits
        {
            get
            {
                return this.digitsField;
            }
            set
            {
                this.digitsField = value;
            }
        }
        public bool displayLocationInDecimal
        {
            get
            {
                return this.displayLocationInDecimalField;
            }
            set
            {
                this.displayLocationInDecimalField = value;
            }
        }
        public bool displayLocationInDecimalSpecified
        {
            get
            {
                return this.displayLocationInDecimalFieldSpecified;
            }
            set
            {
                this.displayLocationInDecimalFieldSpecified = value;
            }
        }
        public bool encrypted
        {
            get
            {
                return this.encryptedField;
            }
            set
            {
                this.encryptedField = value;
            }
        }
        public bool encryptedSpecified
        {
            get
            {
                return this.encryptedFieldSpecified;
            }
            set
            {
                this.encryptedFieldSpecified = value;
            }
        }
        public bool externalId
        {
            get
            {
                return this.externalIdField;
            }
            set
            {
                this.externalIdField = value;
            }
        }
        public bool externalIdSpecified
        {
            get
            {
                return this.externalIdFieldSpecified;
            }
            set
            {
                this.externalIdFieldSpecified = value;
            }
        }
        public string extraTypeInfo
        {
            get
            {
                return this.extraTypeInfoField;
            }
            set
            {
                this.extraTypeInfoField = value;
            }
        }
        public bool filterable
        {
            get
            {
                return this.filterableField;
            }
            set
            {
                this.filterableField = value;
            }
        }
        public FilteredLookupInfo filteredLookupInfo
        {
            get
            {
                return this.filteredLookupInfoField;
            }
            set
            {
                this.filteredLookupInfoField = value;
            }
        }
        public bool formulaTreatNullNumberAsZero
        {
            get
            {
                return this.formulaTreatNullNumberAsZeroField;
            }
            set
            {
                this.formulaTreatNullNumberAsZeroField = value;
            }
        }
        public bool formulaTreatNullNumberAsZeroSpecified
        {
            get
            {
                return this.formulaTreatNullNumberAsZeroFieldSpecified;
            }
            set
            {
                this.formulaTreatNullNumberAsZeroFieldSpecified = value;
            }
        }
        public bool groupable
        {
            get
            {
                return this.groupableField;
            }
            set
            {
                this.groupableField = value;
            }
        }
        public bool highScaleNumber
        {
            get
            {
                return this.highScaleNumberField;
            }
            set
            {
                this.highScaleNumberField = value;
            }
        }
        public bool highScaleNumberSpecified
        {
            get
            {
                return this.highScaleNumberFieldSpecified;
            }
            set
            {
                this.highScaleNumberFieldSpecified = value;
            }
        }
        public bool htmlFormatted
        {
            get
            {
                return this.htmlFormattedField;
            }
            set
            {
                this.htmlFormattedField = value;
            }
        }
        public bool htmlFormattedSpecified
        {
            get
            {
                return this.htmlFormattedFieldSpecified;
            }
            set
            {
                this.htmlFormattedFieldSpecified = value;
            }
        }
        public bool idLookup
        {
            get
            {
                return this.idLookupField;
            }
            set
            {
                this.idLookupField = value;
            }
        }
        public string inlineHelpText
        {
            get
            {
                return this.inlineHelpTextField;
            }
            set
            {
                this.inlineHelpTextField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public int length
        {
            get
            {
                return this.lengthField;
            }
            set
            {
                this.lengthField = value;
            }
        }
        public string mask
        {
            get
            {
                return this.maskField;
            }
            set
            {
                this.maskField = value;
            }
        }
        public string maskType
        {
            get
            {
                return this.maskTypeField;
            }
            set
            {
                this.maskTypeField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField1;
            }
            set
            {
                this.nameField1 = value;
            }
        }
        public bool nameField
        {
            get
            {
                return this.nameFieldField;
            }
            set
            {
                this.nameFieldField = value;
            }
        }
        public bool namePointing
        {
            get
            {
                return this.namePointingField;
            }
            set
            {
                this.namePointingField = value;
            }
        }
        public bool namePointingSpecified
        {
            get
            {
                return this.namePointingFieldSpecified;
            }
            set
            {
                this.namePointingFieldSpecified = value;
            }
        }
        public bool nillable
        {
            get
            {
                return this.nillableField;
            }
            set
            {
                this.nillableField = value;
            }
        }
        public bool permissionable
        {
            get
            {
                return this.permissionableField;
            }
            set
            {
                this.permissionableField = value;
            }
        }
        public PicklistEntry[] picklistValues
        {
            get
            {
                return this.picklistValuesField;
            }
            set
            {
                this.picklistValuesField = value;
            }
        }
        public bool polymorphicForeignKey
        {
            get
            {
                return this.polymorphicForeignKeyField;
            }
            set
            {
                this.polymorphicForeignKeyField = value;
            }
        }
        public int precision
        {
            get
            {
                return this.precisionField;
            }
            set
            {
                this.precisionField = value;
            }
        }
        public bool queryByDistance
        {
            get
            {
                return this.queryByDistanceField;
            }
            set
            {
                this.queryByDistanceField = value;
            }
        }
        public string referenceTargetField
        {
            get
            {
                return this.referenceTargetFieldField;
            }
            set
            {
                this.referenceTargetFieldField = value;
            }
        }
        public string[] referenceTo
        {
            get
            {
                return this.referenceToField;
            }
            set
            {
                this.referenceToField = value;
            }
        }
        public string relationshipName
        {
            get
            {
                return this.relationshipNameField;
            }
            set
            {
                this.relationshipNameField = value;
            }
        }
        public int relationshipOrder
        {
            get
            {
                return this.relationshipOrderField;
            }
            set
            {
                this.relationshipOrderField = value;
            }
        }
        public bool relationshipOrderSpecified
        {
            get
            {
                return this.relationshipOrderFieldSpecified;
            }
            set
            {
                this.relationshipOrderFieldSpecified = value;
            }
        }
        public bool restrictedDelete
        {
            get
            {
                return this.restrictedDeleteField;
            }
            set
            {
                this.restrictedDeleteField = value;
            }
        }
        public bool restrictedDeleteSpecified
        {
            get
            {
                return this.restrictedDeleteFieldSpecified;
            }
            set
            {
                this.restrictedDeleteFieldSpecified = value;
            }
        }
        public bool restrictedPicklist
        {
            get
            {
                return this.restrictedPicklistField;
            }
            set
            {
                this.restrictedPicklistField = value;
            }
        }
        public int scale
        {
            get
            {
                return this.scaleField;
            }
            set
            {
                this.scaleField = value;
            }
        }
        public bool searchPrefilterable
        {
            get
            {
                return this.searchPrefilterableField;
            }
            set
            {
                this.searchPrefilterableField = value;
            }
        }
        public soapType soapType
        {
            get
            {
                return this.soapTypeField;
            }
            set
            {
                this.soapTypeField = value;
            }
        }
        public bool sortable
        {
            get
            {
                return this.sortableField;
            }
            set
            {
                this.sortableField = value;
            }
        }
        public bool sortableSpecified
        {
            get
            {
                return this.sortableFieldSpecified;
            }
            set
            {
                this.sortableFieldSpecified = value;
            }
        }
        public fieldType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        public bool unique
        {
            get
            {
                return this.uniqueField;
            }
            set
            {
                this.uniqueField = value;
            }
        }
        public bool updateable
        {
            get
            {
                return this.updateableField;
            }
            set
            {
                this.updateableField = value;
            }
        }
        public bool writeRequiresMasterRead
        {
            get
            {
                return this.writeRequiresMasterReadField;
            }
            set
            {
                this.writeRequiresMasterReadField = value;
            }
        }
        public bool writeRequiresMasterReadSpecified
        {
            get
            {
                return this.writeRequiresMasterReadFieldSpecified;
            }
            set
            {
                this.writeRequiresMasterReadFieldSpecified = value;
            }
        }
    }
    public class FilteredLookupInfo
    {
        private string[] controllingFieldsField;
        private bool dependentField;
        private bool optionalFilterField;
        public string[] controllingFields
        {
            get
            {
                return this.controllingFieldsField;
            }
            set
            {
                this.controllingFieldsField = value;
            }
        }
        public bool dependent
        {
            get
            {
                return this.dependentField;
            }
            set
            {
                this.dependentField = value;
            }
        }
        public bool optionalFilter
        {
            get
            {
                return this.optionalFilterField;
            }
            set
            {
                this.optionalFilterField = value;
            }
        }
    }
    public class PicklistEntry
    {
        private bool activeField;
        private bool defaultValueField;
        private string labelField;
        private byte[] validForField;
        private string valueField;
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }
        public bool defaultValue
        {
            get
            {
                return this.defaultValueField;
            }
            set
            {
                this.defaultValueField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public byte[] validFor
        {
            get
            {
                return this.validForField;
            }
            set
            {
                this.validForField = value;
            }
        }
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    public enum soapType
    {
        tnsID,
        xsdbase64Binary,
        xsdboolean,
        xsddouble,
        xsdint,
        xsdlong,
        xsdstring,
        xsddate,
        xsddateTime,
        xsdtime,
        tnslocation,
        tnsaddress,
        xsdanyType,
        tnsjson,
        urnRelationshipReferenceTo,
        urnJunctionIdListNames,
        urnSearchLayoutFieldsDisplayed,
        urnSearchLayoutField,
        urnSearchLayoutButtonsDisplayed,
        urnSearchLayoutButton,
        urnRecordTypesSupported,
        tnsStringList,
        tnsChangeEventHeader,
    }
    public enum fieldType
    {
        @string,
        picklist,
        multipicklist,
        combobox,
        reference,
        base64,
        boolean,
        currency,
        textarea,
        @int,
        @double,
        percent,
        phone,
        id,
        date,
        datetime,
        time,
        url,
        email,
        encryptedstring,
        datacategorygroupreference,
        location,
        address,
        anyType,
        json,
        complexvalue,
        @long,
    }
    public class NamedLayoutInfo
    {
        private string nameField;
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class RecordTypeInfo
    {
        private bool activeField;
        private bool availableField;
        private bool defaultRecordTypeMappingField;
        private string developerNameField;
        private bool masterField;
        private string nameField;
        private string recordTypeIdField;
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }
        public bool available
        {
            get
            {
                return this.availableField;
            }
            set
            {
                this.availableField = value;
            }
        }
        public bool defaultRecordTypeMapping
        {
            get
            {
                return this.defaultRecordTypeMappingField;
            }
            set
            {
                this.defaultRecordTypeMappingField = value;
            }
        }
        public string developerName
        {
            get
            {
                return this.developerNameField;
            }
            set
            {
                this.developerNameField = value;
            }
        }
        public bool master
        {
            get
            {
                return this.masterField;
            }
            set
            {
                this.masterField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string recordTypeId
        {
            get
            {
                return this.recordTypeIdField;
            }
            set
            {
                this.recordTypeIdField = value;
            }
        }
    }
    public class ScopeInfo
    {
        private string labelField;
        private string nameField;
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class describeSObjectRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public string sObjectType;
        public describeSObjectRequest()
        {
        }
        public describeSObjectRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string sObjectType)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.sObjectType = sObjectType;
        }
    }
    public class describeSObjectResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeSObjectResult result;
        public describeSObjectResponse()
        {
        }
        public describeSObjectResponse(LimitInfo[] LimitInfoHeader, DescribeSObjectResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class describeSObjectsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public string[] sObjectType;
        public describeSObjectsRequest()
        {
        }
        public describeSObjectsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] sObjectType)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.sObjectType = sObjectType;
        }
    }
    public class describeSObjectsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeSObjectResult[] result;
        public describeSObjectsResponse()
        {
        }
        public describeSObjectsResponse(LimitInfo[] LimitInfoHeader, DescribeSObjectResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeGlobalResult
    {
        private string encodingField;
        private int maxBatchSizeField;
        private DescribeGlobalSObjectResult[] sobjectsField;
        public string encoding
        {
            get
            {
                return this.encodingField;
            }
            set
            {
                this.encodingField = value;
            }
        }
        public int maxBatchSize
        {
            get
            {
                return this.maxBatchSizeField;
            }
            set
            {
                this.maxBatchSizeField = value;
            }
        }
        public DescribeGlobalSObjectResult[] sobjects
        {
            get
            {
                return this.sobjectsField;
            }
            set
            {
                this.sobjectsField = value;
            }
        }
    }
    public class DescribeGlobalSObjectResult
    {
        private bool activateableField;
        private string associateEntityTypeField;
        private string associateParentEntityField;
        private bool createableField;
        private bool customField;
        private bool customSettingField;
        private bool dataTranslationEnabledField;
        private bool dataTranslationEnabledFieldSpecified;
        private bool deepCloneableField;
        private bool deletableField;
        private bool deprecatedAndHiddenField;
        private bool feedEnabledField;
        private bool hasSubtypesField;
        private bool idEnabledField;
        private bool isInterfaceField;
        private bool isSubtypeField;
        private string keyPrefixField;
        private string labelField;
        private string labelPluralField;
        private bool layoutableField;
        private bool mergeableField;
        private bool mruEnabledField;
        private string nameField;
        private bool queryableField;
        private bool replicateableField;
        private bool retrieveableField;
        private bool searchableField;
        private bool triggerableField;
        private bool undeletableField;
        private bool updateableField;
        public bool activateable
        {
            get
            {
                return this.activateableField;
            }
            set
            {
                this.activateableField = value;
            }
        }
        public string associateEntityType
        {
            get
            {
                return this.associateEntityTypeField;
            }
            set
            {
                this.associateEntityTypeField = value;
            }
        }
        public string associateParentEntity
        {
            get
            {
                return this.associateParentEntityField;
            }
            set
            {
                this.associateParentEntityField = value;
            }
        }
        public bool createable
        {
            get
            {
                return this.createableField;
            }
            set
            {
                this.createableField = value;
            }
        }
        public bool custom
        {
            get
            {
                return this.customField;
            }
            set
            {
                this.customField = value;
            }
        }
        public bool customSetting
        {
            get
            {
                return this.customSettingField;
            }
            set
            {
                this.customSettingField = value;
            }
        }
        public bool dataTranslationEnabled
        {
            get
            {
                return this.dataTranslationEnabledField;
            }
            set
            {
                this.dataTranslationEnabledField = value;
            }
        }
        public bool dataTranslationEnabledSpecified
        {
            get
            {
                return this.dataTranslationEnabledFieldSpecified;
            }
            set
            {
                this.dataTranslationEnabledFieldSpecified = value;
            }
        }
        public bool deepCloneable
        {
            get
            {
                return this.deepCloneableField;
            }
            set
            {
                this.deepCloneableField = value;
            }
        }
        public bool deletable
        {
            get
            {
                return this.deletableField;
            }
            set
            {
                this.deletableField = value;
            }
        }
        public bool deprecatedAndHidden
        {
            get
            {
                return this.deprecatedAndHiddenField;
            }
            set
            {
                this.deprecatedAndHiddenField = value;
            }
        }
        public bool feedEnabled
        {
            get
            {
                return this.feedEnabledField;
            }
            set
            {
                this.feedEnabledField = value;
            }
        }
        public bool hasSubtypes
        {
            get
            {
                return this.hasSubtypesField;
            }
            set
            {
                this.hasSubtypesField = value;
            }
        }
        public bool idEnabled
        {
            get
            {
                return this.idEnabledField;
            }
            set
            {
                this.idEnabledField = value;
            }
        }
        public bool isInterface
        {
            get
            {
                return this.isInterfaceField;
            }
            set
            {
                this.isInterfaceField = value;
            }
        }
        public bool isSubtype
        {
            get
            {
                return this.isSubtypeField;
            }
            set
            {
                this.isSubtypeField = value;
            }
        }
        public string keyPrefix
        {
            get
            {
                return this.keyPrefixField;
            }
            set
            {
                this.keyPrefixField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string labelPlural
        {
            get
            {
                return this.labelPluralField;
            }
            set
            {
                this.labelPluralField = value;
            }
        }
        public bool layoutable
        {
            get
            {
                return this.layoutableField;
            }
            set
            {
                this.layoutableField = value;
            }
        }
        public bool mergeable
        {
            get
            {
                return this.mergeableField;
            }
            set
            {
                this.mergeableField = value;
            }
        }
        public bool mruEnabled
        {
            get
            {
                return this.mruEnabledField;
            }
            set
            {
                this.mruEnabledField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public bool queryable
        {
            get
            {
                return this.queryableField;
            }
            set
            {
                this.queryableField = value;
            }
        }
        public bool replicateable
        {
            get
            {
                return this.replicateableField;
            }
            set
            {
                this.replicateableField = value;
            }
        }
        public bool retrieveable
        {
            get
            {
                return this.retrieveableField;
            }
            set
            {
                this.retrieveableField = value;
            }
        }
        public bool searchable
        {
            get
            {
                return this.searchableField;
            }
            set
            {
                this.searchableField = value;
            }
        }
        public bool triggerable
        {
            get
            {
                return this.triggerableField;
            }
            set
            {
                this.triggerableField = value;
            }
        }
        public bool undeletable
        {
            get
            {
                return this.undeletableField;
            }
            set
            {
                this.undeletableField = value;
            }
        }
        public bool updateable
        {
            get
            {
                return this.updateableField;
            }
            set
            {
                this.updateableField = value;
            }
        }
    }
    public class describeGlobalRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public describeGlobalRequest()
        {
        }
        public describeGlobalRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }
    public class describeGlobalResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeGlobalResult result;
        public describeGlobalResponse()
        {
        }
        public describeGlobalResponse(LimitInfo[] LimitInfoHeader, DescribeGlobalResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeDataCategoryGroupResult
    {
        private int categoryCountField;
        private string descriptionField;
        private string labelField;
        private string nameField;
        private string sobjectField;
        public int categoryCount
        {
            get
            {
                return this.categoryCountField;
            }
            set
            {
                this.categoryCountField = value;
            }
        }
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string sobject
        {
            get
            {
                return this.sobjectField;
            }
            set
            {
                this.sobjectField = value;
            }
        }
    }
    public class describeDataCategoryGroupsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public string[] sObjectType;
        public describeDataCategoryGroupsRequest()
        {
        }
        public describeDataCategoryGroupsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] sObjectType)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.sObjectType = sObjectType;
        }
    }
    public class describeDataCategoryGroupsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeDataCategoryGroupResult[] result;
        public describeDataCategoryGroupsResponse()
        {
        }
        public describeDataCategoryGroupsResponse(LimitInfo[] LimitInfoHeader, DescribeDataCategoryGroupResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DataCategoryGroupSobjectTypePair
    {
        private string dataCategoryGroupNameField;
        private string sobjectField;
        public string dataCategoryGroupName
        {
            get
            {
                return this.dataCategoryGroupNameField;
            }
            set
            {
                this.dataCategoryGroupNameField = value;
            }
        }
        public string sobject
        {
            get
            {
                return this.sobjectField;
            }
            set
            {
                this.sobjectField = value;
            }
        }
    }
    public class DescribeDataCategoryGroupStructureResult
    {
        private string descriptionField;
        private string labelField;
        private string nameField;
        private string sobjectField;
        private DataCategory[] topCategoriesField;
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string sobject
        {
            get
            {
                return this.sobjectField;
            }
            set
            {
                this.sobjectField = value;
            }
        }
        public DataCategory[] topCategories
        {
            get
            {
                return this.topCategoriesField;
            }
            set
            {
                this.topCategoriesField = value;
            }
        }
    }
    public class DataCategory
    {
        private DataCategory[] childCategoriesField;
        private string labelField;
        private string nameField;
        public DataCategory[] childCategories
        {
            get
            {
                return this.childCategoriesField;
            }
            set
            {
                this.childCategoriesField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class describeDataCategoryGroupStructuresRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public DataCategoryGroupSobjectTypePair[] pairs;
        public bool topCategoriesOnly;
        public describeDataCategoryGroupStructuresRequest()
        {
        }
        public describeDataCategoryGroupStructuresRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, DataCategoryGroupSobjectTypePair[] pairs, bool topCategoriesOnly)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.pairs = pairs;
            this.topCategoriesOnly = topCategoriesOnly;
        }
    }
    public class describeDataCategoryGroupStructuresResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeDataCategoryGroupStructureResult[] result;
        public describeDataCategoryGroupStructuresResponse()
        {
        }
        public describeDataCategoryGroupStructuresResponse(LimitInfo[] LimitInfoHeader, DescribeDataCategoryGroupStructureResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeDataCategoryMappingResult
    {
        private string dataCategoryGroupIdField;
        private string dataCategoryGroupLabelField;
        private string dataCategoryGroupNameField;
        private string dataCategoryIdField;
        private string dataCategoryLabelField;
        private string dataCategoryNameField;
        private string idField;
        private string mappedEntityField;
        private string mappedFieldField;
        public string dataCategoryGroupId
        {
            get
            {
                return this.dataCategoryGroupIdField;
            }
            set
            {
                this.dataCategoryGroupIdField = value;
            }
        }
        public string dataCategoryGroupLabel
        {
            get
            {
                return this.dataCategoryGroupLabelField;
            }
            set
            {
                this.dataCategoryGroupLabelField = value;
            }
        }
        public string dataCategoryGroupName
        {
            get
            {
                return this.dataCategoryGroupNameField;
            }
            set
            {
                this.dataCategoryGroupNameField = value;
            }
        }
        public string dataCategoryId
        {
            get
            {
                return this.dataCategoryIdField;
            }
            set
            {
                this.dataCategoryIdField = value;
            }
        }
        public string dataCategoryLabel
        {
            get
            {
                return this.dataCategoryLabelField;
            }
            set
            {
                this.dataCategoryLabelField = value;
            }
        }
        public string dataCategoryName
        {
            get
            {
                return this.dataCategoryNameField;
            }
            set
            {
                this.dataCategoryNameField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public string mappedEntity
        {
            get
            {
                return this.mappedEntityField;
            }
            set
            {
                this.mappedEntityField = value;
            }
        }
        public string mappedField
        {
            get
            {
                return this.mappedFieldField;
            }
            set
            {
                this.mappedFieldField = value;
            }
        }
    }
    public class describeDataCategoryMappingsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public describeDataCategoryMappingsRequest()
        {
        }
        public describeDataCategoryMappingsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
        }
    }
    public class describeDataCategoryMappingsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeDataCategoryMappingResult[] result;
        public describeDataCategoryMappingsResponse()
        {
        }
        public describeDataCategoryMappingsResponse(LimitInfo[] LimitInfoHeader, DescribeDataCategoryMappingResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class KnowledgeSettings
    {
        private string defaultLanguageField;
        private bool knowledgeEnabledField;
        private KnowledgeLanguageItem[] languagesField;
        public string defaultLanguage
        {
            get
            {
                return this.defaultLanguageField;
            }
            set
            {
                this.defaultLanguageField = value;
            }
        }
        public bool knowledgeEnabled
        {
            get
            {
                return this.knowledgeEnabledField;
            }
            set
            {
                this.knowledgeEnabledField = value;
            }
        }
        public KnowledgeLanguageItem[] languages
        {
            get
            {
                return this.languagesField;
            }
            set
            {
                this.languagesField = value;
            }
        }
    }
    public class KnowledgeLanguageItem
    {
        private bool activeField;
        private string assigneeIdField;
        private string nameField;
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }
        public string assigneeId
        {
            get
            {
                return this.assigneeIdField;
            }
            set
            {
                this.assigneeIdField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class describeKnowledgeSettingsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public describeKnowledgeSettingsRequest()
        {
        }
        public describeKnowledgeSettingsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
        }
    }
    public class describeKnowledgeSettingsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public KnowledgeSettings result;
        public describeKnowledgeSettingsResponse()
        {
        }
        public describeKnowledgeSettingsResponse(LimitInfo[] LimitInfoHeader, KnowledgeSettings result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public enum AppMenuType
    {
        AppSwitcher,
        Salesforce1,
        NetworkTabs,
    }
    public class DescribeAppMenuItem
    {
        private DescribeColor[] colorsField;
        private string contentField;
        private DescribeIcon[] iconsField;
        private string labelField;
        private string nameField;
        private string typeField;
        private string urlField;
        public DescribeColor[] colors
        {
            get
            {
                return this.colorsField;
            }
            set
            {
                this.colorsField = value;
            }
        }
        public string content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }
        public DescribeIcon[] icons
        {
            get
            {
                return this.iconsField;
            }
            set
            {
                this.iconsField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        public string url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }
    }
    public class DescribeColor
    {
        private string colorField;
        private string contextField;
        private string themeField;
        public string color
        {
            get
            {
                return this.colorField;
            }
            set
            {
                this.colorField = value;
            }
        }
        public string context
        {
            get
            {
                return this.contextField;
            }
            set
            {
                this.contextField = value;
            }
        }
        public string theme
        {
            get
            {
                return this.themeField;
            }
            set
            {
                this.themeField = value;
            }
        }
    }
    public class DescribeIcon
    {
        private string contentTypeField;
        private System.Nullable<int> heightField;
        private string themeField;
        private string urlField;
        private System.Nullable<int> widthField;
        public string contentType
        {
            get
            {
                return this.contentTypeField;
            }
            set
            {
                this.contentTypeField = value;
            }
        }
        public System.Nullable<int> height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                this.heightField = value;
            }
        }
        public string theme
        {
            get
            {
                return this.themeField;
            }
            set
            {
                this.themeField = value;
            }
        }
        public string url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }
        public System.Nullable<int> width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                this.widthField = value;
            }
        }
    }
    public class describeAppMenuRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public AppMenuType appMenuType;
        public string networkId;
        public describeAppMenuRequest()
        {
        }
        public describeAppMenuRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, AppMenuType appMenuType, string networkId)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.appMenuType = appMenuType;
            this.networkId = networkId;
        }
    }
    public class describeAppMenuResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeAppMenuItem[] result;
        public describeAppMenuResponse()
        {
        }
        public describeAppMenuResponse(LimitInfo[] LimitInfoHeader, DescribeAppMenuItem[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeGlobalTheme
    {
        private DescribeGlobalResult globalField;
        private DescribeThemeItem[] themeField;
        public DescribeGlobalResult global
        {
            get
            {
                return this.globalField;
            }
            set
            {
                this.globalField = value;
            }
        }
        public DescribeThemeItem[] theme
        {
            get
            {
                return this.themeField;
            }
            set
            {
                this.themeField = value;
            }
        }
    }
    public class DescribeThemeItem
    {
        private DescribeColor[] colorsField;
        private DescribeIcon[] iconsField;
        private string nameField;
        public DescribeColor[] colors
        {
            get
            {
                return this.colorsField;
            }
            set
            {
                this.colorsField = value;
            }
        }
        public DescribeIcon[] icons
        {
            get
            {
                return this.iconsField;
            }
            set
            {
                this.iconsField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class describeGlobalThemeRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public describeGlobalThemeRequest()
        {
        }
        public describeGlobalThemeRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }
    public class describeGlobalThemeResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeGlobalTheme result;
        public describeGlobalThemeResponse()
        {
        }
        public describeGlobalThemeResponse(LimitInfo[] LimitInfoHeader, DescribeGlobalTheme result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class describeThemeRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public string[] sobjectType;
        public describeThemeRequest()
        {
        }
        public describeThemeRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sobjectType)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sobjectType = sobjectType;
        }
    }
    public class describeThemeResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeThemeItem[] result;
        public describeThemeResponse()
        {
        }
        public describeThemeResponse(LimitInfo[] LimitInfoHeader, DescribeThemeItem[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeLayoutResult
    {
        private DescribeLayout[] layoutsField;
        private RecordTypeMapping[] recordTypeMappingsField;
        private bool recordTypeSelectorRequiredField;
        public DescribeLayout[] layouts
        {
            get
            {
                return this.layoutsField;
            }
            set
            {
                this.layoutsField = value;
            }
        }
        public RecordTypeMapping[] recordTypeMappings
        {
            get
            {
                return this.recordTypeMappingsField;
            }
            set
            {
                this.recordTypeMappingsField = value;
            }
        }
        public bool recordTypeSelectorRequired
        {
            get
            {
                return this.recordTypeSelectorRequiredField;
            }
            set
            {
                this.recordTypeSelectorRequiredField = value;
            }
        }
    }
    public class DescribeLayout
    {
        private DescribeLayoutButton[] buttonLayoutSectionField;
        private DescribeLayoutSection[] detailLayoutSectionsField;
        private DescribeLayoutSection[] editLayoutSectionsField;
        private DescribeLayoutFeedFilter[] feedViewField;
        private DescribeLayoutSection highlightsPanelLayoutSectionField;
        private string idField;
        private DescribeQuickActionListItemResult[] quickActionListField;
        private DescribeRelatedContentItem[] relatedContentField;
        private RelatedList[] relatedListsField;
        private DescribeLayoutSaveOption[] saveOptionsField;
        public DescribeLayoutButton[] buttonLayoutSection
        {
            get
            {
                return this.buttonLayoutSectionField;
            }
            set
            {
                this.buttonLayoutSectionField = value;
            }
        }
        public DescribeLayoutSection[] detailLayoutSections
        {
            get
            {
                return this.detailLayoutSectionsField;
            }
            set
            {
                this.detailLayoutSectionsField = value;
            }
        }
        public DescribeLayoutSection[] editLayoutSections
        {
            get
            {
                return this.editLayoutSectionsField;
            }
            set
            {
                this.editLayoutSectionsField = value;
            }
        }
        public DescribeLayoutFeedFilter[] feedView
        {
            get
            {
                return this.feedViewField;
            }
            set
            {
                this.feedViewField = value;
            }
        }
        public DescribeLayoutSection highlightsPanelLayoutSection
        {
            get
            {
                return this.highlightsPanelLayoutSectionField;
            }
            set
            {
                this.highlightsPanelLayoutSectionField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public DescribeQuickActionListItemResult[] quickActionList
        {
            get
            {
                return this.quickActionListField;
            }
            set
            {
                this.quickActionListField = value;
            }
        }
        public DescribeRelatedContentItem[] relatedContent
        {
            get
            {
                return this.relatedContentField;
            }
            set
            {
                this.relatedContentField = value;
            }
        }
        public RelatedList[] relatedLists
        {
            get
            {
                return this.relatedListsField;
            }
            set
            {
                this.relatedListsField = value;
            }
        }
        public DescribeLayoutSaveOption[] saveOptions
        {
            get
            {
                return this.saveOptionsField;
            }
            set
            {
                this.saveOptionsField = value;
            }
        }
    }
    public class DescribeLayoutButton
    {
        private System.Nullable<WebLinkWindowType> behaviorField;
        private bool behaviorFieldSpecified;
        private DescribeColor[] colorsField;
        private string contentField;
        private System.Nullable<WebLinkType> contentSourceField;
        private bool contentSourceFieldSpecified;
        private bool customField;
        private string encodingField;
        private System.Nullable<int> heightField;
        private bool heightFieldSpecified;
        private DescribeIcon[] iconsField;
        private string labelField;
        private System.Nullable<bool> menubarField;
        private string nameField;
        private bool overriddenField;
        private System.Nullable<bool> resizeableField;
        private System.Nullable<bool> scrollbarsField;
        private System.Nullable<bool> showsLocationField;
        private System.Nullable<bool> showsStatusField;
        private System.Nullable<bool> toolbarField;
        private string urlField;
        private System.Nullable<int> widthField;
        private bool widthFieldSpecified;
        private System.Nullable<WebLinkPosition> windowPositionField;
        private bool windowPositionFieldSpecified;
        public System.Nullable<WebLinkWindowType> behavior
        {
            get
            {
                return this.behaviorField;
            }
            set
            {
                this.behaviorField = value;
            }
        }
        public bool behaviorSpecified
        {
            get
            {
                return this.behaviorFieldSpecified;
            }
            set
            {
                this.behaviorFieldSpecified = value;
            }
        }
        public DescribeColor[] colors
        {
            get
            {
                return this.colorsField;
            }
            set
            {
                this.colorsField = value;
            }
        }
        public string content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }
        public System.Nullable<WebLinkType> contentSource
        {
            get
            {
                return this.contentSourceField;
            }
            set
            {
                this.contentSourceField = value;
            }
        }
        public bool contentSourceSpecified
        {
            get
            {
                return this.contentSourceFieldSpecified;
            }
            set
            {
                this.contentSourceFieldSpecified = value;
            }
        }
        public bool custom
        {
            get
            {
                return this.customField;
            }
            set
            {
                this.customField = value;
            }
        }
        public string encoding
        {
            get
            {
                return this.encodingField;
            }
            set
            {
                this.encodingField = value;
            }
        }
        public System.Nullable<int> height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                this.heightField = value;
            }
        }
        public bool heightSpecified
        {
            get
            {
                return this.heightFieldSpecified;
            }
            set
            {
                this.heightFieldSpecified = value;
            }
        }
        public DescribeIcon[] icons
        {
            get
            {
                return this.iconsField;
            }
            set
            {
                this.iconsField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public System.Nullable<bool> menubar
        {
            get
            {
                return this.menubarField;
            }
            set
            {
                this.menubarField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public bool overridden
        {
            get
            {
                return this.overriddenField;
            }
            set
            {
                this.overriddenField = value;
            }
        }
        public System.Nullable<bool> resizeable
        {
            get
            {
                return this.resizeableField;
            }
            set
            {
                this.resizeableField = value;
            }
        }
        public System.Nullable<bool> scrollbars
        {
            get
            {
                return this.scrollbarsField;
            }
            set
            {
                this.scrollbarsField = value;
            }
        }
        public System.Nullable<bool> showsLocation
        {
            get
            {
                return this.showsLocationField;
            }
            set
            {
                this.showsLocationField = value;
            }
        }
        public System.Nullable<bool> showsStatus
        {
            get
            {
                return this.showsStatusField;
            }
            set
            {
                this.showsStatusField = value;
            }
        }
        public System.Nullable<bool> toolbar
        {
            get
            {
                return this.toolbarField;
            }
            set
            {
                this.toolbarField = value;
            }
        }
        public string url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }
        public System.Nullable<int> width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                this.widthField = value;
            }
        }
        public bool widthSpecified
        {
            get
            {
                return this.widthFieldSpecified;
            }
            set
            {
                this.widthFieldSpecified = value;
            }
        }
        public System.Nullable<WebLinkPosition> windowPosition
        {
            get
            {
                return this.windowPositionField;
            }
            set
            {
                this.windowPositionField = value;
            }
        }
        public bool windowPositionSpecified
        {
            get
            {
                return this.windowPositionFieldSpecified;
            }
            set
            {
                this.windowPositionFieldSpecified = value;
            }
        }
    }
    public enum WebLinkWindowType
    {
        newWindow,
        sidebar,
        noSidebar,
        replace,
        onClickJavaScript,
    }
    public enum WebLinkType
    {
        url,
        sControl,
        javascript,
        page,
        flow,
    }
    public enum WebLinkPosition
    {
        fullScreen,
        none,
        topLeft,
    }
    public class DescribeLayoutSection
    {
        private bool collapsedField;
        private int columnsField;
        private string headingField;
        private DescribeLayoutRow[] layoutRowsField;
        private string layoutSectionIdField;
        private string parentLayoutIdField;
        private int rowsField;
        private TabOrderType tabOrderField;
        private bool useCollapsibleSectionField;
        private bool useHeadingField;
        public bool collapsed
        {
            get
            {
                return this.collapsedField;
            }
            set
            {
                this.collapsedField = value;
            }
        }
        public int columns
        {
            get
            {
                return this.columnsField;
            }
            set
            {
                this.columnsField = value;
            }
        }
        public string heading
        {
            get
            {
                return this.headingField;
            }
            set
            {
                this.headingField = value;
            }
        }
        public DescribeLayoutRow[] layoutRows
        {
            get
            {
                return this.layoutRowsField;
            }
            set
            {
                this.layoutRowsField = value;
            }
        }
        public string layoutSectionId
        {
            get
            {
                return this.layoutSectionIdField;
            }
            set
            {
                this.layoutSectionIdField = value;
            }
        }
        public string parentLayoutId
        {
            get
            {
                return this.parentLayoutIdField;
            }
            set
            {
                this.parentLayoutIdField = value;
            }
        }
        public int rows
        {
            get
            {
                return this.rowsField;
            }
            set
            {
                this.rowsField = value;
            }
        }
        public TabOrderType tabOrder
        {
            get
            {
                return this.tabOrderField;
            }
            set
            {
                this.tabOrderField = value;
            }
        }
        public bool useCollapsibleSection
        {
            get
            {
                return this.useCollapsibleSectionField;
            }
            set
            {
                this.useCollapsibleSectionField = value;
            }
        }
        public bool useHeading
        {
            get
            {
                return this.useHeadingField;
            }
            set
            {
                this.useHeadingField = value;
            }
        }
    }
    public class DescribeLayoutRow
    {
        private DescribeLayoutItem[] layoutItemsField;
        private int numItemsField;
        public DescribeLayoutItem[] layoutItems
        {
            get
            {
                return this.layoutItemsField;
            }
            set
            {
                this.layoutItemsField = value;
            }
        }
        public int numItems
        {
            get
            {
                return this.numItemsField;
            }
            set
            {
                this.numItemsField = value;
            }
        }
    }
    public class DescribeLayoutItem
    {
        private bool editableForNewField;
        private bool editableForUpdateField;
        private string labelField;
        private DescribeLayoutComponent[] layoutComponentsField;
        private bool placeholderField;
        private bool requiredField;
        public bool editableForNew
        {
            get
            {
                return this.editableForNewField;
            }
            set
            {
                this.editableForNewField = value;
            }
        }
        public bool editableForUpdate
        {
            get
            {
                return this.editableForUpdateField;
            }
            set
            {
                this.editableForUpdateField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public DescribeLayoutComponent[] layoutComponents
        {
            get
            {
                return this.layoutComponentsField;
            }
            set
            {
                this.layoutComponentsField = value;
            }
        }
        public bool placeholder
        {
            get
            {
                return this.placeholderField;
            }
            set
            {
                this.placeholderField = value;
            }
        }
        public bool required
        {
            get
            {
                return this.requiredField;
            }
            set
            {
                this.requiredField = value;
            }
        }
    }
    public class DescribeLayoutComponent
    {
        private int displayLinesField;
        private int tabOrderField;
        private layoutComponentType typeField;
        private string valueField;
        public int displayLines
        {
            get
            {
                return this.displayLinesField;
            }
            set
            {
                this.displayLinesField = value;
            }
        }
        public int tabOrder
        {
            get
            {
                return this.tabOrderField;
            }
            set
            {
                this.tabOrderField = value;
            }
        }
        public layoutComponentType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    public enum layoutComponentType
    {
        ReportChart,
        Field,
        Separator,
        SControl,
        EmptySpace,
        VisualforcePage,
        ExpandedLookup,
        AuraComponent,
        Canvas,
        CustomLink,
        AnalyticsCloud,
    }
    public class CustomLinkComponent : DescribeLayoutComponent
    {
        private DescribeLayoutButton customLinkField;
        public DescribeLayoutButton customLink
        {
            get
            {
                return this.customLinkField;
            }
            set
            {
                this.customLinkField = value;
            }
        }
    }
    public class AnalyticsCloudComponent : DescribeLayoutComponent
    {
        private string errorField;
        private string filterField;
        private string heightField;
        private bool hideOnErrorField;
        private bool showSharingField;
        private bool showTitleField;
        private string widthField;
        public string error
        {
            get
            {
                return this.errorField;
            }
            set
            {
                this.errorField = value;
            }
        }
        public string filter
        {
            get
            {
                return this.filterField;
            }
            set
            {
                this.filterField = value;
            }
        }
        public string height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                this.heightField = value;
            }
        }
        public bool hideOnError
        {
            get
            {
                return this.hideOnErrorField;
            }
            set
            {
                this.hideOnErrorField = value;
            }
        }
        public bool showSharing
        {
            get
            {
                return this.showSharingField;
            }
            set
            {
                this.showSharingField = value;
            }
        }
        public bool showTitle
        {
            get
            {
                return this.showTitleField;
            }
            set
            {
                this.showTitleField = value;
            }
        }
        public string width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                this.widthField = value;
            }
        }
    }
    public class ReportChartComponent : DescribeLayoutComponent
    {
        private bool cacheDataField;
        private string contextFilterableFieldField;
        private string errorField;
        private bool hideOnErrorField;
        private bool includeContextField;
        private bool showTitleField;
        private ReportChartSize sizeField;
        public bool cacheData
        {
            get
            {
                return this.cacheDataField;
            }
            set
            {
                this.cacheDataField = value;
            }
        }
        public string contextFilterableField
        {
            get
            {
                return this.contextFilterableFieldField;
            }
            set
            {
                this.contextFilterableFieldField = value;
            }
        }
        public string error
        {
            get
            {
                return this.errorField;
            }
            set
            {
                this.errorField = value;
            }
        }
        public bool hideOnError
        {
            get
            {
                return this.hideOnErrorField;
            }
            set
            {
                this.hideOnErrorField = value;
            }
        }
        public bool includeContext
        {
            get
            {
                return this.includeContextField;
            }
            set
            {
                this.includeContextField = value;
            }
        }
        public bool showTitle
        {
            get
            {
                return this.showTitleField;
            }
            set
            {
                this.showTitleField = value;
            }
        }
        public ReportChartSize size
        {
            get
            {
                return this.sizeField;
            }
            set
            {
                this.sizeField = value;
            }
        }
    }
    public enum ReportChartSize
    {
        SMALL,
        MEDIUM,
        LARGE,
    }
    public class Canvas : DescribeLayoutComponent
    {
        private string displayLocationField;
        private string referenceIdField;
        private bool showLabelField;
        private bool showScrollbarsField;
        private string suggestedHeightField;
        private string suggestedWidthField;
        public string displayLocation
        {
            get
            {
                return this.displayLocationField;
            }
            set
            {
                this.displayLocationField = value;
            }
        }
        public string referenceId
        {
            get
            {
                return this.referenceIdField;
            }
            set
            {
                this.referenceIdField = value;
            }
        }
        public bool showLabel
        {
            get
            {
                return this.showLabelField;
            }
            set
            {
                this.showLabelField = value;
            }
        }
        public bool showScrollbars
        {
            get
            {
                return this.showScrollbarsField;
            }
            set
            {
                this.showScrollbarsField = value;
            }
        }
        public string suggestedHeight
        {
            get
            {
                return this.suggestedHeightField;
            }
            set
            {
                this.suggestedHeightField = value;
            }
        }
        public string suggestedWidth
        {
            get
            {
                return this.suggestedWidthField;
            }
            set
            {
                this.suggestedWidthField = value;
            }
        }
    }
    public class VisualforcePage : DescribeLayoutComponent
    {
        private bool showLabelField;
        private bool showScrollbarsField;
        private string suggestedHeightField;
        private string suggestedWidthField;
        private string urlField;
        public bool showLabel
        {
            get
            {
                return this.showLabelField;
            }
            set
            {
                this.showLabelField = value;
            }
        }
        public bool showScrollbars
        {
            get
            {
                return this.showScrollbarsField;
            }
            set
            {
                this.showScrollbarsField = value;
            }
        }
        public string suggestedHeight
        {
            get
            {
                return this.suggestedHeightField;
            }
            set
            {
                this.suggestedHeightField = value;
            }
        }
        public string suggestedWidth
        {
            get
            {
                return this.suggestedWidthField;
            }
            set
            {
                this.suggestedWidthField = value;
            }
        }
        public string url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }
    }
    public class FieldLayoutComponent : DescribeLayoutComponent
    {
        private DescribeLayoutComponent[] componentsField;
        private fieldType fieldTypeField;
        public DescribeLayoutComponent[] components
        {
            get
            {
                return this.componentsField;
            }
            set
            {
                this.componentsField = value;
            }
        }
        public fieldType fieldType
        {
            get
            {
                return this.fieldTypeField;
            }
            set
            {
                this.fieldTypeField = value;
            }
        }
    }
    public class FieldComponent : DescribeLayoutComponent
    {
        private Field fieldField;
        public Field field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
    }
    public enum TabOrderType
    {
        LeftToRight,
        TopToBottom,
    }
    public class DescribeLayoutFeedFilter
    {
        private string labelField;
        private string nameField;
        private FeedLayoutFilterType typeField;
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public FeedLayoutFilterType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    public enum FeedLayoutFilterType
    {
        AllUpdates,
        FeedItemType,
        Custom,
    }
    public class DescribeQuickActionListItemResult
    {
        private System.Nullable<ShareAccessLevel> accessLevelRequiredField;
        private DescribeColor[] colorsField;
        private string iconUrlField;
        private DescribeIcon[] iconsField;
        private string labelField;
        private string miniIconUrlField;
        private string quickActionNameField;
        private string targetSobjectTypeField;
        private string typeField;
        public System.Nullable<ShareAccessLevel> accessLevelRequired
        {
            get
            {
                return this.accessLevelRequiredField;
            }
            set
            {
                this.accessLevelRequiredField = value;
            }
        }
        public DescribeColor[] colors
        {
            get
            {
                return this.colorsField;
            }
            set
            {
                this.colorsField = value;
            }
        }
        public string iconUrl
        {
            get
            {
                return this.iconUrlField;
            }
            set
            {
                this.iconUrlField = value;
            }
        }
        public DescribeIcon[] icons
        {
            get
            {
                return this.iconsField;
            }
            set
            {
                this.iconsField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string miniIconUrl
        {
            get
            {
                return this.miniIconUrlField;
            }
            set
            {
                this.miniIconUrlField = value;
            }
        }
        public string quickActionName
        {
            get
            {
                return this.quickActionNameField;
            }
            set
            {
                this.quickActionNameField = value;
            }
        }
        public string targetSobjectType
        {
            get
            {
                return this.targetSobjectTypeField;
            }
            set
            {
                this.targetSobjectTypeField = value;
            }
        }
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    public enum ShareAccessLevel
    {
        Read,
        Edit,
        All,
    }
    public class DescribeRelatedContentItem
    {
        private DescribeLayoutItem describeLayoutItemField;
        public DescribeLayoutItem describeLayoutItem
        {
            get
            {
                return this.describeLayoutItemField;
            }
            set
            {
                this.describeLayoutItemField = value;
            }
        }
    }
    public class RelatedList
    {
        private System.Nullable<ShareAccessLevel> accessLevelRequiredForCreateField;
        private DescribeLayoutButton[] buttonsField;
        private RelatedListColumn[] columnsField;
        private bool customField;
        private string fieldField;
        private string labelField;
        private int limitRowsField;
        private string nameField;
        private string sobjectField;
        private RelatedListSort[] sortField;
        public System.Nullable<ShareAccessLevel> accessLevelRequiredForCreate
        {
            get
            {
                return this.accessLevelRequiredForCreateField;
            }
            set
            {
                this.accessLevelRequiredForCreateField = value;
            }
        }
        public DescribeLayoutButton[] buttons
        {
            get
            {
                return this.buttonsField;
            }
            set
            {
                this.buttonsField = value;
            }
        }
        public RelatedListColumn[] columns
        {
            get
            {
                return this.columnsField;
            }
            set
            {
                this.columnsField = value;
            }
        }
        public bool custom
        {
            get
            {
                return this.customField;
            }
            set
            {
                this.customField = value;
            }
        }
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public int limitRows
        {
            get
            {
                return this.limitRowsField;
            }
            set
            {
                this.limitRowsField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string sobject
        {
            get
            {
                return this.sobjectField;
            }
            set
            {
                this.sobjectField = value;
            }
        }
        public RelatedListSort[] sort
        {
            get
            {
                return this.sortField;
            }
            set
            {
                this.sortField = value;
            }
        }
    }
    public class RelatedListColumn
    {
        private string fieldField;
        private string fieldApiNameField;
        private string formatField;
        private string labelField;
        private string lookupIdField;
        private string nameField;
        private bool sortableField;
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        public string fieldApiName
        {
            get
            {
                return this.fieldApiNameField;
            }
            set
            {
                this.fieldApiNameField = value;
            }
        }
        public string format
        {
            get
            {
                return this.formatField;
            }
            set
            {
                this.formatField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string lookupId
        {
            get
            {
                return this.lookupIdField;
            }
            set
            {
                this.lookupIdField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public bool sortable
        {
            get
            {
                return this.sortableField;
            }
            set
            {
                this.sortableField = value;
            }
        }
    }
    public class RelatedListSort
    {
        private bool ascendingField;
        private string columnField;
        public bool ascending
        {
            get
            {
                return this.ascendingField;
            }
            set
            {
                this.ascendingField = value;
            }
        }
        public string column
        {
            get
            {
                return this.columnField;
            }
            set
            {
                this.columnField = value;
            }
        }
    }
    public class DescribeLayoutSaveOption
    {
        private bool defaultValueField;
        private bool isDisplayedField;
        private string labelField;
        private string nameField;
        private string restHeaderNameField;
        private string soapHeaderNameField;
        public bool defaultValue
        {
            get
            {
                return this.defaultValueField;
            }
            set
            {
                this.defaultValueField = value;
            }
        }
        public bool isDisplayed
        {
            get
            {
                return this.isDisplayedField;
            }
            set
            {
                this.isDisplayedField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string restHeaderName
        {
            get
            {
                return this.restHeaderNameField;
            }
            set
            {
                this.restHeaderNameField = value;
            }
        }
        public string soapHeaderName
        {
            get
            {
                return this.soapHeaderNameField;
            }
            set
            {
                this.soapHeaderNameField = value;
            }
        }
    }
    public class RecordTypeMapping
    {
        private bool activeField;
        private bool availableField;
        private bool defaultRecordTypeMappingField;
        private string developerNameField;
        private string layoutIdField;
        private bool masterField;
        private string nameField;
        private PicklistForRecordType[] picklistsForRecordTypeField;
        private string recordTypeIdField;
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }
        public bool available
        {
            get
            {
                return this.availableField;
            }
            set
            {
                this.availableField = value;
            }
        }
        public bool defaultRecordTypeMapping
        {
            get
            {
                return this.defaultRecordTypeMappingField;
            }
            set
            {
                this.defaultRecordTypeMappingField = value;
            }
        }
        public string developerName
        {
            get
            {
                return this.developerNameField;
            }
            set
            {
                this.developerNameField = value;
            }
        }
        public string layoutId
        {
            get
            {
                return this.layoutIdField;
            }
            set
            {
                this.layoutIdField = value;
            }
        }
        public bool master
        {
            get
            {
                return this.masterField;
            }
            set
            {
                this.masterField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public PicklistForRecordType[] picklistsForRecordType
        {
            get
            {
                return this.picklistsForRecordTypeField;
            }
            set
            {
                this.picklistsForRecordTypeField = value;
            }
        }
        public string recordTypeId
        {
            get
            {
                return this.recordTypeIdField;
            }
            set
            {
                this.recordTypeIdField = value;
            }
        }
    }
    public class PicklistForRecordType
    {
        private string picklistNameField;
        private PicklistEntry[] picklistValuesField;
        public string picklistName
        {
            get
            {
                return this.picklistNameField;
            }
            set
            {
                this.picklistNameField = value;
            }
        }
        public PicklistEntry[] picklistValues
        {
            get
            {
                return this.picklistValuesField;
            }
            set
            {
                this.picklistValuesField = value;
            }
        }
    }
    public class describeLayoutRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public string sObjectType;
        public string layoutName;
        public string[] recordTypeIds;
        public describeLayoutRequest()
        {
        }
        public describeLayoutRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string layoutName, string[] recordTypeIds)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.layoutName = layoutName;
            this.recordTypeIds = recordTypeIds;
        }
    }
    public class describeLayoutResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeLayoutResult result;
        public describeLayoutResponse()
        {
        }
        public describeLayoutResponse(LimitInfo[] LimitInfoHeader, DescribeLayoutResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeSoftphoneLayoutResult
    {
        private DescribeSoftphoneLayoutCallType[] callTypesField;
        private string idField;
        private string nameField;
        public DescribeSoftphoneLayoutCallType[] callTypes
        {
            get
            {
                return this.callTypesField;
            }
            set
            {
                this.callTypesField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class DescribeSoftphoneLayoutCallType
    {
        private DescribeSoftphoneLayoutInfoField[] infoFieldsField;
        private string nameField;
        private DescribeSoftphoneScreenPopOption[] screenPopOptionsField;
        private string screenPopsOpenWithinField;
        private DescribeSoftphoneLayoutSection[] sectionsField;
        public DescribeSoftphoneLayoutInfoField[] infoFields
        {
            get
            {
                return this.infoFieldsField;
            }
            set
            {
                this.infoFieldsField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public DescribeSoftphoneScreenPopOption[] screenPopOptions
        {
            get
            {
                return this.screenPopOptionsField;
            }
            set
            {
                this.screenPopOptionsField = value;
            }
        }
        public string screenPopsOpenWithin
        {
            get
            {
                return this.screenPopsOpenWithinField;
            }
            set
            {
                this.screenPopsOpenWithinField = value;
            }
        }
        public DescribeSoftphoneLayoutSection[] sections
        {
            get
            {
                return this.sectionsField;
            }
            set
            {
                this.sectionsField = value;
            }
        }
    }
    public class DescribeSoftphoneLayoutInfoField
    {
        private string nameField;
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class DescribeSoftphoneScreenPopOption
    {
        private string matchTypeField;
        private string screenPopDataField;
        private string screenPopTypeField;
        public string matchType
        {
            get
            {
                return this.matchTypeField;
            }
            set
            {
                this.matchTypeField = value;
            }
        }
        public string screenPopData
        {
            get
            {
                return this.screenPopDataField;
            }
            set
            {
                this.screenPopDataField = value;
            }
        }
        public string screenPopType
        {
            get
            {
                return this.screenPopTypeField;
            }
            set
            {
                this.screenPopTypeField = value;
            }
        }
    }
    public class DescribeSoftphoneLayoutSection
    {
        private string entityApiNameField;
        private DescribeSoftphoneLayoutItem[] itemsField;
        public string entityApiName
        {
            get
            {
                return this.entityApiNameField;
            }
            set
            {
                this.entityApiNameField = value;
            }
        }
        public DescribeSoftphoneLayoutItem[] items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }
    }
    public class DescribeSoftphoneLayoutItem
    {
        private string itemApiNameField;
        public string itemApiName
        {
            get
            {
                return this.itemApiNameField;
            }
            set
            {
                this.itemApiNameField = value;
            }
        }
    }
    public class describeSoftphoneLayoutRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public describeSoftphoneLayoutRequest()
        {
        }
        public describeSoftphoneLayoutRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }
    public class describeSoftphoneLayoutResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeSoftphoneLayoutResult result;
        public describeSoftphoneLayoutResponse()
        {
        }
        public describeSoftphoneLayoutResponse(LimitInfo[] LimitInfoHeader, DescribeSoftphoneLayoutResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeSearchLayoutResult
    {
        private string errorMsgField;
        private string labelField;
        private System.Nullable<int> limitRowsField;
        private string objectTypeField;
        private DescribeColumn[] searchColumnsField;
        public string errorMsg
        {
            get
            {
                return this.errorMsgField;
            }
            set
            {
                this.errorMsgField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public System.Nullable<int> limitRows
        {
            get
            {
                return this.limitRowsField;
            }
            set
            {
                this.limitRowsField = value;
            }
        }
        public string objectType
        {
            get
            {
                return this.objectTypeField;
            }
            set
            {
                this.objectTypeField = value;
            }
        }
        public DescribeColumn[] searchColumns
        {
            get
            {
                return this.searchColumnsField;
            }
            set
            {
                this.searchColumnsField = value;
            }
        }
    }
    public class DescribeColumn
    {
        private string fieldField;
        private string formatField;
        private string labelField;
        private string nameField;
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        public string format
        {
            get
            {
                return this.formatField;
            }
            set
            {
                this.formatField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class describeSearchLayoutsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public string[] sObjectType;
        public describeSearchLayoutsRequest()
        {
        }
        public describeSearchLayoutsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sObjectType)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
        }
    }
    public class describeSearchLayoutsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeSearchLayoutResult[] result;
        public describeSearchLayoutsResponse()
        {
        }
        public describeSearchLayoutsResponse(LimitInfo[] LimitInfoHeader, DescribeSearchLayoutResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeSearchableEntityResult
    {
        private string labelField;
        private string nameField;
        private string pluralLabelField;
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string pluralLabel
        {
            get
            {
                return this.pluralLabelField;
            }
            set
            {
                this.pluralLabelField = value;
            }
        }
    }
    public class describeSearchableEntitiesRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public bool includeOnlyEntitiesWithTabs;
        public describeSearchableEntitiesRequest()
        {
        }
        public describeSearchableEntitiesRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeOnlyEntitiesWithTabs)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.includeOnlyEntitiesWithTabs = includeOnlyEntitiesWithTabs;
        }
    }
    public class describeSearchableEntitiesResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeSearchableEntityResult[] result;
        public describeSearchableEntitiesResponse()
        {
        }
        public describeSearchableEntitiesResponse(LimitInfo[] LimitInfoHeader, DescribeSearchableEntityResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeSearchScopeOrderResult
    {
        private string keyPrefixField;
        private string nameField;
        public string keyPrefix
        {
            get
            {
                return this.keyPrefixField;
            }
            set
            {
                this.keyPrefixField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class describeSearchScopeOrderRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public bool includeRealTimeEntities;
        public describeSearchScopeOrderRequest()
        {
        }
        public describeSearchScopeOrderRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeRealTimeEntities)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.includeRealTimeEntities = includeRealTimeEntities;
        }
    }
    public class describeSearchScopeOrderResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeSearchScopeOrderResult[] result;
        public describeSearchScopeOrderResponse()
        {
        }
        public describeSearchScopeOrderResponse(LimitInfo[] LimitInfoHeader, DescribeSearchScopeOrderResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeCompactLayoutsResult
    {
        private DescribeCompactLayout[] compactLayoutsField;
        private string defaultCompactLayoutIdField;
        private RecordTypeCompactLayoutMapping[] recordTypeCompactLayoutMappingsField;
        public DescribeCompactLayout[] compactLayouts
        {
            get
            {
                return this.compactLayoutsField;
            }
            set
            {
                this.compactLayoutsField = value;
            }
        }
        public string defaultCompactLayoutId
        {
            get
            {
                return this.defaultCompactLayoutIdField;
            }
            set
            {
                this.defaultCompactLayoutIdField = value;
            }
        }
        public RecordTypeCompactLayoutMapping[] recordTypeCompactLayoutMappings
        {
            get
            {
                return this.recordTypeCompactLayoutMappingsField;
            }
            set
            {
                this.recordTypeCompactLayoutMappingsField = value;
            }
        }
    }
    public class DescribeCompactLayout
    {
        private DescribeLayoutButton[] actionsField;
        private DescribeLayoutItem[] fieldItemsField;
        private string idField;
        private DescribeLayoutItem[] imageItemsField;
        private string labelField;
        private string nameField;
        private string objectTypeField;
        public DescribeLayoutButton[] actions
        {
            get
            {
                return this.actionsField;
            }
            set
            {
                this.actionsField = value;
            }
        }
        public DescribeLayoutItem[] fieldItems
        {
            get
            {
                return this.fieldItemsField;
            }
            set
            {
                this.fieldItemsField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public DescribeLayoutItem[] imageItems
        {
            get
            {
                return this.imageItemsField;
            }
            set
            {
                this.imageItemsField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string objectType
        {
            get
            {
                return this.objectTypeField;
            }
            set
            {
                this.objectTypeField = value;
            }
        }
    }
    public class RecordTypeCompactLayoutMapping
    {
        private bool availableField;
        private string compactLayoutIdField;
        private string compactLayoutNameField;
        private string recordTypeIdField;
        private string recordTypeNameField;
        public bool available
        {
            get
            {
                return this.availableField;
            }
            set
            {
                this.availableField = value;
            }
        }
        public string compactLayoutId
        {
            get
            {
                return this.compactLayoutIdField;
            }
            set
            {
                this.compactLayoutIdField = value;
            }
        }
        public string compactLayoutName
        {
            get
            {
                return this.compactLayoutNameField;
            }
            set
            {
                this.compactLayoutNameField = value;
            }
        }
        public string recordTypeId
        {
            get
            {
                return this.recordTypeIdField;
            }
            set
            {
                this.recordTypeIdField = value;
            }
        }
        public string recordTypeName
        {
            get
            {
                return this.recordTypeNameField;
            }
            set
            {
                this.recordTypeNameField = value;
            }
        }
    }
    public class describeCompactLayoutsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public string sObjectType;
        public string[] recordTypeIds;
        public describeCompactLayoutsRequest()
        {
        }
        public describeCompactLayoutsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string[] recordTypeIds)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.recordTypeIds = recordTypeIds;
        }
    }
    public class describeCompactLayoutsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeCompactLayoutsResult result;
        public describeCompactLayoutsResponse()
        {
        }
        public describeCompactLayoutsResponse(LimitInfo[] LimitInfoHeader, DescribeCompactLayoutsResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribePathAssistant
    {
        private bool activeField;
        private DescribeAnimationRule[] animationRuleField;
        private string apiNameField;
        private string labelField;
        private string pathPicklistFieldField;
        private PicklistForRecordType[] picklistsForRecordTypeField;
        private string recordTypeIdField;
        private DescribePathAssistantStep[] stepsField;
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }
        public DescribeAnimationRule[] animationRule
        {
            get
            {
                return this.animationRuleField;
            }
            set
            {
                this.animationRuleField = value;
            }
        }
        public string apiName
        {
            get
            {
                return this.apiNameField;
            }
            set
            {
                this.apiNameField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string pathPicklistField
        {
            get
            {
                return this.pathPicklistFieldField;
            }
            set
            {
                this.pathPicklistFieldField = value;
            }
        }
        public PicklistForRecordType[] picklistsForRecordType
        {
            get
            {
                return this.picklistsForRecordTypeField;
            }
            set
            {
                this.picklistsForRecordTypeField = value;
            }
        }
        public string recordTypeId
        {
            get
            {
                return this.recordTypeIdField;
            }
            set
            {
                this.recordTypeIdField = value;
            }
        }
        public DescribePathAssistantStep[] steps
        {
            get
            {
                return this.stepsField;
            }
            set
            {
                this.stepsField = value;
            }
        }
    }
    public class DescribeAnimationRule
    {
        private string animationFrequencyField;
        private bool isActiveField;
        private string recordTypeContextField;
        private string recordTypeIdField;
        private string targetFieldField;
        private string targetFieldChangeToValuesField;
        public string animationFrequency
        {
            get
            {
                return this.animationFrequencyField;
            }
            set
            {
                this.animationFrequencyField = value;
            }
        }
        public bool isActive
        {
            get
            {
                return this.isActiveField;
            }
            set
            {
                this.isActiveField = value;
            }
        }
        public string recordTypeContext
        {
            get
            {
                return this.recordTypeContextField;
            }
            set
            {
                this.recordTypeContextField = value;
            }
        }
        public string recordTypeId
        {
            get
            {
                return this.recordTypeIdField;
            }
            set
            {
                this.recordTypeIdField = value;
            }
        }
        public string targetField
        {
            get
            {
                return this.targetFieldField;
            }
            set
            {
                this.targetFieldField = value;
            }
        }
        public string targetFieldChangeToValues
        {
            get
            {
                return this.targetFieldChangeToValuesField;
            }
            set
            {
                this.targetFieldChangeToValuesField = value;
            }
        }
    }
    public class DescribePathAssistantStep
    {
        private bool closedField;
        private bool convertedField;
        private DescribePathAssistantField[] fieldsField;
        private string infoField;
        private DescribeLayoutSection layoutSectionField;
        private string picklistLabelField;
        private string picklistValueField;
        private bool wonField;
        public bool closed
        {
            get
            {
                return this.closedField;
            }
            set
            {
                this.closedField = value;
            }
        }
        public bool converted
        {
            get
            {
                return this.convertedField;
            }
            set
            {
                this.convertedField = value;
            }
        }
        public DescribePathAssistantField[] fields
        {
            get
            {
                return this.fieldsField;
            }
            set
            {
                this.fieldsField = value;
            }
        }
        public string info
        {
            get
            {
                return this.infoField;
            }
            set
            {
                this.infoField = value;
            }
        }
        public DescribeLayoutSection layoutSection
        {
            get
            {
                return this.layoutSectionField;
            }
            set
            {
                this.layoutSectionField = value;
            }
        }
        public string picklistLabel
        {
            get
            {
                return this.picklistLabelField;
            }
            set
            {
                this.picklistLabelField = value;
            }
        }
        public string picklistValue
        {
            get
            {
                return this.picklistValueField;
            }
            set
            {
                this.picklistValueField = value;
            }
        }
        public bool won
        {
            get
            {
                return this.wonField;
            }
            set
            {
                this.wonField = value;
            }
        }
    }
    public class DescribePathAssistantField
    {
        private string apiNameField;
        private string labelField;
        private bool readOnlyField;
        private bool requiredField;
        public string apiName
        {
            get
            {
                return this.apiNameField;
            }
            set
            {
                this.apiNameField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public bool readOnly
        {
            get
            {
                return this.readOnlyField;
            }
            set
            {
                this.readOnlyField = value;
            }
        }
        public bool required
        {
            get
            {
                return this.requiredField;
            }
            set
            {
                this.requiredField = value;
            }
        }
    }
    public class describePathAssistantsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public string sObjectType;
        public string picklistValue;
        public string[] recordTypeIds;
        public describePathAssistantsRequest()
        {
        }
        public describePathAssistantsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string picklistValue, string[] recordTypeIds)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.picklistValue = picklistValue;
            this.recordTypeIds = recordTypeIds;
        }
    }
    public class describePathAssistantsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribePathAssistant[] result;
        public describePathAssistantsResponse()
        {
        }
        public describePathAssistantsResponse(LimitInfo[] LimitInfoHeader, DescribePathAssistant[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeApprovalLayout
    {
        private string idField;
        private string labelField;
        private DescribeLayoutItem[] layoutItemsField;
        private string nameField;
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public DescribeLayoutItem[] layoutItems
        {
            get
            {
                return this.layoutItemsField;
            }
            set
            {
                this.layoutItemsField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public class describeApprovalLayoutRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public string sObjectType;
        public string[] approvalProcessNames;
        public describeApprovalLayoutRequest()
        {
        }
        public describeApprovalLayoutRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string[] approvalProcessNames)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.approvalProcessNames = approvalProcessNames;
        }
    }
    public class describeApprovalLayoutResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeApprovalLayout[] result;
        public describeApprovalLayoutResponse()
        {
        }
        public describeApprovalLayoutResponse(LimitInfo[] LimitInfoHeader, DescribeApprovalLayout[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeSoqlListViewParams
    {
        private string developerNameOrIdField;
        private string sobjectTypeField;
        public string developerNameOrId
        {
            get
            {
                return this.developerNameOrIdField;
            }
            set
            {
                this.developerNameOrIdField = value;
            }
        }
        public string sobjectType
        {
            get
            {
                return this.sobjectTypeField;
            }
            set
            {
                this.sobjectTypeField = value;
            }
        }
    }
    public class DescribeSoqlListView
    {
        private ListViewColumn[] columnsField;
        private string idField;
        private ListViewOrderBy[] orderByField;
        private string queryField;
        private string relatedEntityIdField;
        private string scopeField;
        private string scopeEntityIdField;
        private string sobjectTypeField;
        private SoqlWhereCondition whereConditionField;
        public ListViewColumn[] columns
        {
            get
            {
                return this.columnsField;
            }
            set
            {
                this.columnsField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public ListViewOrderBy[] orderBy
        {
            get
            {
                return this.orderByField;
            }
            set
            {
                this.orderByField = value;
            }
        }
        public string query
        {
            get
            {
                return this.queryField;
            }
            set
            {
                this.queryField = value;
            }
        }
        public string relatedEntityId
        {
            get
            {
                return this.relatedEntityIdField;
            }
            set
            {
                this.relatedEntityIdField = value;
            }
        }
        public string scope
        {
            get
            {
                return this.scopeField;
            }
            set
            {
                this.scopeField = value;
            }
        }
        public string scopeEntityId
        {
            get
            {
                return this.scopeEntityIdField;
            }
            set
            {
                this.scopeEntityIdField = value;
            }
        }
        public string sobjectType
        {
            get
            {
                return this.sobjectTypeField;
            }
            set
            {
                this.sobjectTypeField = value;
            }
        }
        public SoqlWhereCondition whereCondition
        {
            get
            {
                return this.whereConditionField;
            }
            set
            {
                this.whereConditionField = value;
            }
        }
    }
    public class ListViewColumn
    {
        private string ascendingLabelField;
        private string descendingLabelField;
        private string fieldNameOrPathField;
        private bool hiddenField;
        private string labelField;
        private bool searchableField;
        private string selectListItemField;
        private System.Nullable<orderByDirection> sortDirectionField;
        private System.Nullable<int> sortIndexField;
        private bool sortableField;
        private fieldType typeField;
        public string ascendingLabel
        {
            get
            {
                return this.ascendingLabelField;
            }
            set
            {
                this.ascendingLabelField = value;
            }
        }
        public string descendingLabel
        {
            get
            {
                return this.descendingLabelField;
            }
            set
            {
                this.descendingLabelField = value;
            }
        }
        public string fieldNameOrPath
        {
            get
            {
                return this.fieldNameOrPathField;
            }
            set
            {
                this.fieldNameOrPathField = value;
            }
        }
        public bool hidden
        {
            get
            {
                return this.hiddenField;
            }
            set
            {
                this.hiddenField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public bool searchable
        {
            get
            {
                return this.searchableField;
            }
            set
            {
                this.searchableField = value;
            }
        }
        public string selectListItem
        {
            get
            {
                return this.selectListItemField;
            }
            set
            {
                this.selectListItemField = value;
            }
        }
        public System.Nullable<orderByDirection> sortDirection
        {
            get
            {
                return this.sortDirectionField;
            }
            set
            {
                this.sortDirectionField = value;
            }
        }
        public System.Nullable<int> sortIndex
        {
            get
            {
                return this.sortIndexField;
            }
            set
            {
                this.sortIndexField = value;
            }
        }
        public bool sortable
        {
            get
            {
                return this.sortableField;
            }
            set
            {
                this.sortableField = value;
            }
        }
        public fieldType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    public enum orderByDirection
    {
        ascending,
        descending,
    }
    public class ListViewOrderBy
    {
        private string fieldNameOrPathField;
        private System.Nullable<orderByNullsPosition> nullsPositionField;
        private System.Nullable<orderByDirection> sortDirectionField;
        public string fieldNameOrPath
        {
            get
            {
                return this.fieldNameOrPathField;
            }
            set
            {
                this.fieldNameOrPathField = value;
            }
        }
        public System.Nullable<orderByNullsPosition> nullsPosition
        {
            get
            {
                return this.nullsPositionField;
            }
            set
            {
                this.nullsPositionField = value;
            }
        }
        public System.Nullable<orderByDirection> sortDirection
        {
            get
            {
                return this.sortDirectionField;
            }
            set
            {
                this.sortDirectionField = value;
            }
        }
    }
    public enum orderByNullsPosition
    {
        first,
        last,
    }
    public class SoqlWhereCondition
    {
    }
    public class SoqlSubQueryCondition : SoqlWhereCondition
    {
        private string fieldField;
        private soqlOperator operatorField;
        private string subQueryField;
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        public soqlOperator @operator
        {
            get
            {
                return this.operatorField;
            }
            set
            {
                this.operatorField = value;
            }
        }
        public string subQuery
        {
            get
            {
                return this.subQueryField;
            }
            set
            {
                this.subQueryField = value;
            }
        }
    }
    public enum soqlOperator
    {
        equals,
        excludes,
        greaterThan,
        greaterThanOrEqualTo,
        @in,
        includes,
        lessThan,
        lessThanOrEqualTo,
        like,
        notEquals,
        notIn,
        within,
        notLike,
    }
    public class SoqlConditionGroup : SoqlWhereCondition
    {
        private SoqlWhereCondition[] conditionsField;
        private soqlConjunction conjunctionField;
        public SoqlWhereCondition[] conditions
        {
            get
            {
                return this.conditionsField;
            }
            set
            {
                this.conditionsField = value;
            }
        }
        public soqlConjunction conjunction
        {
            get
            {
                return this.conjunctionField;
            }
            set
            {
                this.conjunctionField = value;
            }
        }
    }
    public enum soqlConjunction
    {
        and,
        or,
    }
    public class SoqlNotCondition : SoqlWhereCondition
    {
        private SoqlWhereCondition conditionField;
        public SoqlWhereCondition condition
        {
            get
            {
                return this.conditionField;
            }
            set
            {
                this.conditionField = value;
            }
        }
    }
    public class SoqlCondition : SoqlWhereCondition
    {
        private string fieldField;
        private soqlOperator operatorField;
        private string[] valuesField;
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
        public soqlOperator @operator
        {
            get
            {
                return this.operatorField;
            }
            set
            {
                this.operatorField = value;
            }
        }
        public string[] values
        {
            get
            {
                return this.valuesField;
            }
            set
            {
                this.valuesField = value;
            }
        }
    }
    public class describeSoqlListViewsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public DescribeSoqlListViewParams[] request;
        public describeSoqlListViewsRequest()
        {
        }
        public describeSoqlListViewsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DescribeSoqlListViewParams[] request)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.request = request;
        }
    }
    public class describeSoqlListViewsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeSoqlListView[] result;
        public describeSoqlListViewsResponse()
        {
        }
        public describeSoqlListViewsResponse(LimitInfo[] LimitInfoHeader, DescribeSoqlListView[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class MruHeader
    {
        private bool updateMruField;
        public bool updateMru
        {
            get
            {
                return this.updateMruField;
            }
            set
            {
                this.updateMruField = value;
            }
        }
    }
    public class ExecuteListViewRequest
    {
        private string developerNameOrIdField;
        private System.Nullable<int> limitField;
        private System.Nullable<int> offsetField;
        private ListViewOrderBy[] orderByField;
        private string sobjectTypeField;
        public string developerNameOrId
        {
            get
            {
                return this.developerNameOrIdField;
            }
            set
            {
                this.developerNameOrIdField = value;
            }
        }
        public System.Nullable<int> limit
        {
            get
            {
                return this.limitField;
            }
            set
            {
                this.limitField = value;
            }
        }
        public System.Nullable<int> offset
        {
            get
            {
                return this.offsetField;
            }
            set
            {
                this.offsetField = value;
            }
        }
        public ListViewOrderBy[] orderBy
        {
            get
            {
                return this.orderByField;
            }
            set
            {
                this.orderByField = value;
            }
        }
        public string sobjectType
        {
            get
            {
                return this.sobjectTypeField;
            }
            set
            {
                this.sobjectTypeField = value;
            }
        }
    }
    public class ExecuteListViewResult
    {
        private ListViewColumn[] columnsField;
        private string developerNameField;
        private bool doneField;
        private string idField;
        private string labelField;
        private ListViewRecordColumn[][] recordsField;
        private int sizeField;
        public ListViewColumn[] columns
        {
            get
            {
                return this.columnsField;
            }
            set
            {
                this.columnsField = value;
            }
        }
        public string developerName
        {
            get
            {
                return this.developerNameField;
            }
            set
            {
                this.developerNameField = value;
            }
        }
        public bool done
        {
            get
            {
                return this.doneField;
            }
            set
            {
                this.doneField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public ListViewRecordColumn[][] records
        {
            get
            {
                return this.recordsField;
            }
            set
            {
                this.recordsField = value;
            }
        }
        public int size
        {
            get
            {
                return this.sizeField;
            }
            set
            {
                this.sizeField = value;
            }
        }
    }
    public class ListViewRecordColumn
    {
        private string fieldNameOrPathField;
        private string valueField;
        public string fieldNameOrPath
        {
            get
            {
                return this.fieldNameOrPathField;
            }
            set
            {
                this.fieldNameOrPathField = value;
            }
        }
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    public class executeListViewRequest1
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public MruHeader MruHeader;
        public ExecuteListViewRequest request;
        public executeListViewRequest1()
        {
        }
        public executeListViewRequest1(SessionHeader SessionHeader, CallOptions CallOptions, MruHeader MruHeader, ExecuteListViewRequest request)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.MruHeader = MruHeader;
            this.request = request;
        }
    }
    public class executeListViewResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public ExecuteListViewResult result;
        public executeListViewResponse()
        {
        }
        public executeListViewResponse(LimitInfo[] LimitInfoHeader, ExecuteListViewResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public enum listViewIsSoqlCompatible
    {
        TRUE,
        FALSE,
        ALL,
    }
    public class describeSObjectListViewsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public string sObjectType;
        public bool recentsOnly;
        public listViewIsSoqlCompatible isSoqlCompatible;
        public int limit;
        public int offset;
        public describeSObjectListViewsRequest()
        {
        }
        public describeSObjectListViewsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, bool recentsOnly, listViewIsSoqlCompatible isSoqlCompatible, int limit, int offset)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.recentsOnly = recentsOnly;
            this.isSoqlCompatible = isSoqlCompatible;
            this.limit = limit;
            this.offset = offset;
        }
    }
    public class describeSObjectListViewsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeSoqlListView[] result;
        public describeSObjectListViewsResponse()
        {
        }
        public describeSObjectListViewsResponse(LimitInfo[] LimitInfoHeader, DescribeSoqlListView[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeTabSetResult
    {
        private string descriptionField;
        private string labelField;
        private string logoUrlField;
        private string namespaceField;
        private bool selectedField;
        private string tabSetIdField;
        private DescribeTab[] tabsField;
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string logoUrl
        {
            get
            {
                return this.logoUrlField;
            }
            set
            {
                this.logoUrlField = value;
            }
        }
        public string @namespace
        {
            get
            {
                return this.namespaceField;
            }
            set
            {
                this.namespaceField = value;
            }
        }
        public bool selected
        {
            get
            {
                return this.selectedField;
            }
            set
            {
                this.selectedField = value;
            }
        }
        public string tabSetId
        {
            get
            {
                return this.tabSetIdField;
            }
            set
            {
                this.tabSetIdField = value;
            }
        }
        public DescribeTab[] tabs
        {
            get
            {
                return this.tabsField;
            }
            set
            {
                this.tabsField = value;
            }
        }
    }
    public class DescribeTab
    {
        private DescribeColor[] colorsField;
        private bool customField;
        private string iconUrlField;
        private DescribeIcon[] iconsField;
        private string labelField;
        private string miniIconUrlField;
        private string nameField;
        private string sobjectNameField;
        private string urlField;
        public DescribeColor[] colors
        {
            get
            {
                return this.colorsField;
            }
            set
            {
                this.colorsField = value;
            }
        }
        public bool custom
        {
            get
            {
                return this.customField;
            }
            set
            {
                this.customField = value;
            }
        }
        public string iconUrl
        {
            get
            {
                return this.iconUrlField;
            }
            set
            {
                this.iconUrlField = value;
            }
        }
        public DescribeIcon[] icons
        {
            get
            {
                return this.iconsField;
            }
            set
            {
                this.iconsField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string miniIconUrl
        {
            get
            {
                return this.miniIconUrlField;
            }
            set
            {
                this.miniIconUrlField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string sobjectName
        {
            get
            {
                return this.sobjectNameField;
            }
            set
            {
                this.sobjectNameField = value;
            }
        }
        public string url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }
    }
    public class describeTabsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public describeTabsRequest()
        {
        }
        public describeTabsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }
    public class describeTabsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeTabSetResult[] result;
        public describeTabsResponse()
        {
        }
        public describeTabsResponse(LimitInfo[] LimitInfoHeader, DescribeTabSetResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class describeAllTabsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public describeAllTabsRequest()
        {
        }
        public describeAllTabsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }
    public class describeAllTabsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeTab[] result;
        public describeAllTabsResponse()
        {
        }
        public describeAllTabsResponse(LimitInfo[] LimitInfoHeader, DescribeTab[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class describePrimaryCompactLayoutsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public string[] sObjectTypes;
        public describePrimaryCompactLayoutsRequest()
        {
        }
        public describePrimaryCompactLayoutsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sObjectTypes)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectTypes = sObjectTypes;
        }
    }
    public class describePrimaryCompactLayoutsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeCompactLayout[] result;
        public describePrimaryCompactLayoutsResponse()
        {
        }
        public describePrimaryCompactLayoutsResponse(LimitInfo[] LimitInfoHeader, DescribeCompactLayout[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class AssignmentRuleHeader
    {
        private string assignmentRuleIdField;
        private System.Nullable<bool> useDefaultRuleField;
        public string assignmentRuleId
        {
            get
            {
                return this.assignmentRuleIdField;
            }
            set
            {
                this.assignmentRuleIdField = value;
            }
        }
        public System.Nullable<bool> useDefaultRule
        {
            get
            {
                return this.useDefaultRuleField;
            }
            set
            {
                this.useDefaultRuleField = value;
            }
        }
    }
    public class AllowFieldTruncationHeader
    {
        private bool allowFieldTruncationField;
        public bool allowFieldTruncation
        {
            get
            {
                return this.allowFieldTruncationField;
            }
            set
            {
                this.allowFieldTruncationField = value;
            }
        }
    }
    public class DisableFeedTrackingHeader
    {
        private bool disableFeedTrackingField;
        public bool disableFeedTracking
        {
            get
            {
                return this.disableFeedTrackingField;
            }
            set
            {
                this.disableFeedTrackingField = value;
            }
        }
    }
    public class StreamingEnabledHeader
    {
        private bool streamingEnabledField;
        public bool streamingEnabled
        {
            get
            {
                return this.streamingEnabledField;
            }
            set
            {
                this.streamingEnabledField = value;
            }
        }
    }
    public class AllOrNoneHeader
    {
        private bool allOrNoneField;
        public bool allOrNone
        {
            get
            {
                return this.allOrNoneField;
            }
            set
            {
                this.allOrNoneField = value;
            }
        }
    }
    public class DuplicateRuleHeader
    {
        private bool allowSaveField;
        private bool includeRecordDetailsField;
        private bool runAsCurrentUserField;
        public bool allowSave
        {
            get
            {
                return this.allowSaveField;
            }
            set
            {
                this.allowSaveField = value;
            }
        }
        public bool includeRecordDetails
        {
            get
            {
                return this.includeRecordDetailsField;
            }
            set
            {
                this.includeRecordDetailsField = value;
            }
        }
        public bool runAsCurrentUser
        {
            get
            {
                return this.runAsCurrentUserField;
            }
            set
            {
                this.runAsCurrentUserField = value;
            }
        }
    }
    public class DebuggingHeader
    {
        private LogInfo[] categoriesField;
        private DebugLevel debugLevelField;
        public LogInfo[] categories
        {
            get
            {
                return this.categoriesField;
            }
            set
            {
                this.categoriesField = value;
            }
        }
        public DebugLevel debugLevel
        {
            get
            {
                return this.debugLevelField;
            }
            set
            {
                this.debugLevelField = value;
            }
        }
    }
    public class LogInfo
    {
        private LogCategory categoryField;
        private LogCategoryLevel levelField;
        public LogCategory category
        {
            get
            {
                return this.categoryField;
            }
            set
            {
                this.categoryField = value;
            }
        }
        public LogCategoryLevel level
        {
            get
            {
                return this.levelField;
            }
            set
            {
                this.levelField = value;
            }
        }
    }
    public enum LogCategory
    {
        Db,
        Workflow,
        Validation,
        Callout,
        Apex_code,
        Apex_profiling,
        Visualforce,
        System,
        All,
    }
    public enum LogCategoryLevel
    {
        None,
        Finest,
        Finer,
        Fine,
        Debug,
        Info,
        Warn,
        Error,
    }
    public enum DebugLevel
    {
        None,
        DebugOnly,
        Db,
        Profiling,
        Callout,
        Detail,
    }
    public class EmailHeader
    {
        private bool triggerAutoResponseEmailField;
        private bool triggerOtherEmailField;
        private bool triggerUserEmailField;
        public bool triggerAutoResponseEmail
        {
            get
            {
                return this.triggerAutoResponseEmailField;
            }
            set
            {
                this.triggerAutoResponseEmailField = value;
            }
        }
        public bool triggerOtherEmail
        {
            get
            {
                return this.triggerOtherEmailField;
            }
            set
            {
                this.triggerOtherEmailField = value;
            }
        }
        public bool triggerUserEmail
        {
            get
            {
                return this.triggerUserEmailField;
            }
            set
            {
                this.triggerUserEmailField = value;
            }
        }
    }
    public class sObject
    {
        private string typeField;
        private string[] fieldsToNullField;
        private string idField;
        private System.Xml.XmlElement[] anyField;
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        public string[] fieldsToNull
        {
            get
            {
                return this.fieldsToNullField;
            }
            set
            {
                this.fieldsToNullField = value;
            }
        }
        public string Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
    }
    public class DebuggingInfo
    {
        private string debugLogField;
        public string debugLog
        {
            get
            {
                return this.debugLogField;
            }
            set
            {
                this.debugLogField = value;
            }
        }
    }
    public class SaveResult
    {
        private Error[] errorsField;
        private string idField;
        private bool successField;
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class Error
    {
        private ExtendedErrorDetails[] extendedErrorDetailsField;
        private string[] fieldsField;
        private string messageField;
        private StatusCode statusCodeField;
        public ExtendedErrorDetails[] extendedErrorDetails
        {
            get
            {
                return this.extendedErrorDetailsField;
            }
            set
            {
                this.extendedErrorDetailsField = value;
            }
        }
        public string[] fields
        {
            get
            {
                return this.fieldsField;
            }
            set
            {
                this.fieldsField = value;
            }
        }
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        public StatusCode statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }
    }
    public enum StatusCode
    {
        ALL_OR_NONE_OPERATION_ROLLED_BACK,
        ALREADY_APPLIED,
        ALREADY_IN_PROCESS,
        ALREADY_REDEEMED_VOUCHER,
        APEX_DATA_ACCESS_RESTRICTION,
        APEX_FAILED,
        ASSIGNEE_TYPE_REQUIRED,
        AURA_COMPILE_ERROR,
        AUTH_PROVIDER_NEEDS_AUTH,
        AUTH_PROVIDER_NOT_FOUND,
        B2B_SEARCH_ADMIN_ERROR,
        BAD_CUSTOM_ENTITY_PARENT_DOMAIN,
        BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED,
        BLOCKED_EXCLUSIVE,
        CANNOT_CASCADE_PRODUCT_ACTIVE,
        CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD,
        CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD,
        CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE,
        CANNOT_DEACTIVATE_DIVISION,
        CANNOT_DELETE_GLOBAL_ACTION_LIST,
        CANNOT_DELETE_LAST_DATED_CONVERSION_RATE,
        CANNOT_DELETE_MANAGED_OBJECT,
        CANNOT_DISABLE_LAST_ADMIN,
        CANNOT_ENABLE_IP_RESTRICT_REQUESTS,
        CANNOT_EXECUTE_FLOW_TRIGGER,
        CANNOT_FREEZE_SELF,
        CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY,
        CANNOT_MODIFY_MANAGED_OBJECT,
        CANNOT_PASSWORD_LOCKOUT,
        CANNOT_POST_TO_ARCHIVED_GROUP,
        CANNOT_RENAME_APEX_REFERENCED_FIELD,
        CANNOT_RENAME_APEX_REFERENCED_OBJECT,
        CANNOT_RENAME_REFERENCED_FIELD,
        CANNOT_RENAME_REFERENCED_OBJECT,
        CANNOT_REPARENT_RECORD,
        CANNOT_UPDATE_CONVERTED_LEAD,
        CANT_DISABLE_CORP_CURRENCY,
        CANT_UNSET_CORP_CURRENCY,
        CART_NOT_FOUND,
        CHECKOUT_CONFLICT,
        CHECKOUT_EXPIRED,
        CHECKOUT_INVALIDATED,
        CHECKOUT_LOCKED,
        CHECKOUT_NOT_FOUND,
        CHILD_SHARE_FAILS_PARENT,
        CIRCULAR_DEPENDENCY,
        CLEAN_SERVICE_ERROR,
        CLONE_FIELD_INTEGRITY_EXCEPTION,
        CLONE_NOT_SUPPORTED,
        CMS_FOLDER_ITEM_MOVE_FAILED,
        COLLISION_DETECTED,
        COMMERCE_SEARCH_INDEXING_SYSTEM_ERROR,
        COMMERCE_SEARCH_MQ_ERROR,
        COMMERCE_SEARCH_PROVIDER_LIMIT_EXCEEDED,
        COMMERCE_SEARCH_RESOURCE_NOT_FOUND,
        COMMERCIAL_CONTROL_ERROR,
        COMMUNITY_NOT_ACCESSIBLE,
        CONFLICTING_ENVIRONMENT_HUB_MEMBER,
        CONFLICTING_SSO_USER_MAPPING,
        CONTENT_NOT_FOUND,
        CONTENT_SEARCH_NOT_ENABLED,
        CONTENT_TYPE_NOT_FOUND,
        CUSTOM_APEX_ERROR,
        CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED,
        CUSTOM_ENTITY_OR_FIELD_LIMIT,
        CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED,
        CUSTOM_INDEX_EXISTS,
        CUSTOM_LINK_LIMIT_EXCEEDED,
        CUSTOM_METADATA_LIMIT_EXCEEDED,
        CUSTOM_METADATA_REL_FIELD_MANAGEABILITY,
        CUSTOM_SETTINGS_LIMIT_EXCEEDED,
        CUSTOM_TAB_LIMIT_EXCEEDED,
        DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR,
        DATAASSESSMENT_CONFIG_SERVICE_ERROR,
        DATACLOUDADDRESS_NO_RECORDS_FOUND,
        DATACLOUDADDRESS_PROCESSING_ERROR,
        DATACLOUDADDRESS_SERVER_ERROR,
        DATA_MAPPING_NOT_FOUND,
        DATA_TRANSFER_RECORD_LIMIT_EXCEEDED,
        DATE_OUT_OF_RANGE,
        DELETE_FAILED,
        DELETE_NOT_ALLOWED,
        DELETE_OPERATION_TOO_LARGE,
        DELETE_REQUIRED_ON_CASCADE,
        DEPENDENCY_EXISTS,
        DUPLICATES_DETECTED,
        DUPLICATE_CASE_SOLUTION,
        DUPLICATE_COMM_NICKNAME,
        DUPLICATE_CUSTOM_ENTITY_DEFINITION,
        DUPLICATE_CUSTOM_TAB_MOTIF,
        DUPLICATE_DEVELOPER_NAME,
        DUPLICATE_EXTERNAL_ID,
        DUPLICATE_MASTER_LABEL,
        DUPLICATE_SENDER_DISPLAY_NAME,
        DUPLICATE_USERNAME,
        DUPLICATE_VALUE,
        EMAIL_ADDRESS_BOUNCED,
        EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR,
        EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR,
        EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR,
        EMAIL_EXTERNAL_TRANSPORT_TOO_LARGE_ERROR,
        EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR,
        EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR,
        EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR,
        EMAIL_OPTED_OUT,
        EMAIL_TEMPLATE_FORMULA_ERROR,
        EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR,
        EMAIL_TEMPLATE_MERGEFIELD_ERROR,
        EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR,
        EMAIL_TEMPLATE_PROCESSING_ERROR,
        EMPTY_INGESTION_JOB,
        EMPTY_SCONTROL_FILE_NAME,
        ENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR,
        ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE,
        ENTITY_IS_ARCHIVED,
        ENTITY_IS_DELETED,
        ENTITY_IS_LOCKED,
        ENTITY_SAVE_ERROR,
        ENTITY_SAVE_VALIDATION_ERROR,
        ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT,
        ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB,
        ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB,
        ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN,
        ERROR_CALCULATING_EXPIRY_DATE,
        ERROR_IN_MAILER,
        EXCEEDED_MAX_SEMIJOIN_SUBSELECTS_WRITE,
        EXCHANGE_WEB_SERVICES_URL_INVALID,
        EXTERNAL_RESOURCE_FORBIDDEN,
        FAILED_ACTIVATION,
        FAILED_DUE_TO_OTHER_INPUTS,
        FAILED_TO_RESOLVE_MAPPING,
        FIELD_CUSTOM_VALIDATION_EXCEPTION,
        FIELD_FILTER_VALIDATION_EXCEPTION,
        FIELD_INTEGRITY_EXCEPTION,
        FIELD_KEYWORD_LIST_MATCH_LIMIT,
        FIELD_MAPPING_ERROR,
        FIELD_MODERATION_RULE_BLOCK,
        FIELD_NOT_UPDATABLE,
        FILE_EXTENSION_NOT_ALLOWED,
        FILE_SIZE_LIMIT_EXCEEDED,
        FILTERED_LOOKUP_LIMIT_EXCEEDED,
        FIND_DUPLICATES_ERROR,
        FLOW_EXCEPTION,
        FUNCTIONALITY_NOT_ENABLED,
        GET_EINSTEIN_TENANT_ERROR,
        HAS_PUBLIC_REFERENCES,
        HTML_FILE_UPLOAD_NOT_ALLOWED,
        IAS_AM_AUTH_BAD_REQUEST,
        IAS_AM_AUTH_UNAUTHORIZED,
        IAS_INVALID_AUTH,
        IAS_INVALID_REQUEST_PARAMETER,
        IAS_RECORD_DOES_NOT_EXIST,
        IAS_TENANT_NOT_PROVISIONED,
        IAS_UNCOMMITTED_WORK,
        IMAGE_TOO_LARGE,
        INACTIVE_OWNER_OR_USER,
        INACTIVE_RULE_ERROR,
        INDEX_ITEM_LIMIT_EXCEEDED,
        INDEX_PAYLOAD_NOT_FOUND,
        INGESTION_JOB_RECORDS_LIMIT_EXCEEDED,
        INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE,
        INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY,
        INSUFFICIENT_ACCESS_OR_READONLY,
        INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA,
        INSUFFICIENT_BALANCE,
        INSUFFICIENT_CREDITS,
        INTEGRATION_CANCELLED,
        INTERNAL_ERROR,
        INVALID_ACCESS_LEVEL,
        INVALID_ACCESS_TOKEN,
        INVALID_ACCOUNT,
        INVALID_API_INPUT,
        INVALID_ARGUMENT_TYPE,
        INVALID_ASSIGNEE_TYPE,
        INVALID_ASSIGNMENT_RULE,
        INVALID_AUTH_HEADER,
        INVALID_BATCH_OPERATION,
        INVALID_CHECKOUT_INPUT,
        INVALID_CONTACT,
        INVALID_CONTENT_TYPE,
        INVALID_CREDIT_CARD_INFO,
        INVALID_CROSS_REFERENCE_KEY,
        INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD,
        INVALID_CURRENCY_CONV_RATE,
        INVALID_CURRENCY_CORP_RATE,
        INVALID_CURRENCY_ISO,
        INVALID_DATASET_REFERENCE_INPUT,
        INVALID_DATA_CATEGORY_GROUP_REFERENCE,
        INVALID_DATA_URI,
        INVALID_EMAIL_ADDRESS,
        INVALID_EMPTY_KEY_OWNER,
        INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR,
        INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR,
        INVALID_ENTITY_FOR_UPSERT,
        INVALID_ENVIRONMENT_HUB_MEMBER,
        INVALID_EVENT_DELIVERY,
        INVALID_EVENT_INPUT,
        INVALID_EVENT_SUBSCRIPTION,
        INVALID_EXTENSION_ID,
        INVALID_FIELD,
        INVALID_FIELD_FOR_INSERT_UPDATE,
        INVALID_FIELD_WHEN_USING_TEMPLATE,
        INVALID_FILTER_ACTION,
        INVALID_GOOGLE_DOCS_URL,
        INVALID_ID_FIELD,
        INVALID_INET_ADDRESS,
        INVALID_INPUT,
        INVALID_INPUT_FORMAT,
        INVALID_KEY_FIELD_INPUT,
        INVALID_LINEITEM_CLONE_STATE,
        INVALID_MARKUP,
        INVALID_MASTER_OR_TRANSLATED_SOLUTION,
        INVALID_MESSAGE_ID_REFERENCE,
        INVALID_NAMESPACE_PREFIX,
        INVALID_OAUTH_URL,
        INVALID_OPERATION,
        INVALID_OPERATOR,
        INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST,
        INVALID_OWNER,
        INVALID_PACKAGE_LICENSE,
        INVALID_PACKAGE_VERSION,
        INVALID_PARTNER_NETWORK_STATUS,
        INVALID_PAYLOAD_VERSION,
        INVALID_PERSON_ACCOUNT_OPERATION,
        INVALID_PROFILE,
        INVALID_PROMOTION,
        INVALID_PROVIDER_TYPE,
        INVALID_QUERY_KEY,
        INVALID_QUERY_LOCATOR,
        INVALID_QUERY_VALUE,
        INVALID_READ_ONLY_USER_DML,
        INVALID_RECORD_TYPE,
        INVALID_REFRESH_TOKEN,
        INVALID_REQUEST_STATE,
        INVALID_RUNTIME_VALUE,
        INVALID_SAVE_AS_ACTIVITY_FLAG,
        INVALID_SCS_INBOUND_USER,
        INVALID_SEARCH_PROVIDER_REQUEST,
        INVALID_SESSION_ID,
        INVALID_SETUP_OWNER,
        INVALID_SIGNUP_COUNTRY,
        INVALID_SIGNUP_OPTION,
        INVALID_SITE_DELETE_EXCEPTION,
        INVALID_SITE_FILE_IMPORTED_EXCEPTION,
        INVALID_SITE_FILE_TYPE_EXCEPTION,
        INVALID_SOURCE_OBJECT_ID,
        INVALID_STATUS,
        INVALID_SUBDOMAIN,
        INVALID_TEXT_REPRESENTATION,
        INVALID_TYPE,
        INVALID_TYPE_FOR_OPERATION,
        INVALID_TYPE_ON_FIELD_IN_RECORD,
        INVALID_USERID,
        INVALID_USER_OBJECT,
        IP_RANGE_LIMIT_EXCEEDED,
        ITEM_NOT_FOUND,
        JIGSAW_IMPORT_LIMIT_EXCEEDED,
        LICENSE_LIMIT_EXCEEDED,
        LIGHT_PORTAL_USER_EXCEPTION,
        LIMIT_EXCEEDED,
        LIST_PRICE_NOT_FOUND,
        MALFORMED_ID,
        MANAGER_NOT_DEFINED,
        MASSMAIL_RETRY_LIMIT_EXCEEDED,
        MASS_MAIL_LIMIT_EXCEEDED,
        MATCH_DEFINITION_ERROR,
        MATCH_OPERATION_ERROR,
        MATCH_OPERATION_INVALID_ENGINE_ERROR,
        MATCH_OPERATION_INVALID_RULE_ERROR,
        MATCH_OPERATION_MISSING_ENGINE_ERROR,
        MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR,
        MATCH_OPERATION_MISSING_OPTIONS_ERROR,
        MATCH_OPERATION_MISSING_RULE_ERROR,
        MATCH_OPERATION_UNKNOWN_RULE_ERROR,
        MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR,
        MATCH_PRECONDITION_FAILED,
        MATCH_RUNTIME_ERROR,
        MATCH_SERVICE_ERROR,
        MATCH_SERVICE_TIMED_OUT,
        MATCH_SERVICE_UNAVAILABLE_ERROR,
        MAXIMUM_CCEMAILS_EXCEEDED,
        MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED,
        MAXIMUM_HIERARCHY_CHILDREN_REACHED,
        MAXIMUM_HIERARCHY_LEVELS_REACHED,
        MAXIMUM_HIERARCHY_TREE_SIZE_REACHED,
        MAXIMUM_SIZE_OF_ATTACHMENT,
        MAXIMUM_SIZE_OF_DOCUMENT,
        MAX_ACTIONS_PER_RULE_EXCEEDED,
        MAX_ACTIVE_RULES_EXCEEDED,
        MAX_APPROVAL_STEPS_EXCEEDED,
        MAX_DEPTH_IN_FLOW_EXECUTION,
        MAX_FORMULAS_PER_RULE_EXCEEDED,
        MAX_LIMIT_EXCEEDED,
        MAX_RULES_EXCEEDED,
        MAX_RULE_ENTRIES_EXCEEDED,
        MAX_TASK_DESCRIPTION_EXCEEEDED,
        MAX_TM_RULES_EXCEEDED,
        MAX_TM_RULE_ITEMS_EXCEEDED,
        MAX_TRIGGERS_EXCEEDED,
        MERGE_FAILED,
        METADATA_FIELD_UPDATE_ERROR,
        MISSING_ARGUMENT,
        MISSING_RECORD,
        MIXED_DML_OPERATION,
        MULTIPLE_VOUCHERS,
        NONUNIQUE_SHIPPING_ADDRESS,
        NOT_RECOVERABLE_SEARCH_PROVIDER_ERROR,
        NO_ACCESS_TOKEN,
        NO_ACCESS_TOKEN_FROM_REFRESH,
        NO_APPLICABLE_PROCESS,
        NO_ATTACHMENT_PERMISSION,
        NO_AUTH_PROVIDER,
        NO_INACTIVE_DIVISION_MEMBERS,
        NO_MASS_MAIL_PERMISSION,
        NO_PARTNER_PERMISSION,
        NO_REFRESH_TOKEN,
        NO_SEARCH_ATTRIBUTES,
        NO_SUCH_USER_EXISTS,
        NO_TOKEN_ENDPOINT,
        NUMBER_OUTSIDE_VALID_RANGE,
        NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED,
        OCR_INVALID_REQUEST,
        OPERATION_ENQUEUED,
        OPTED_OUT_OF_MASS_MAIL,
        OP_WITH_INVALID_USER_TYPE_EXCEPTION,
        ORCHESTRATION_INVALID,
        ORDER_MANAGEMENT_ACTION_NOT_ALLOWED,
        ORDER_MANAGEMENT_INVALID_RECORD,
        ORDER_MANAGEMENT_RECORD_EXISTS,
        ORDER_MANAGEMENT_RECORD_NOT_FOUND,
        PACKAGE_DISABLED,
        PACKAGE_LICENSE_REQUIRED,
        PACKAGING_API_INSTALL_FAILED,
        PACKAGING_API_UNINSTALL_FAILED,
        PALI_INVALID_ACTION_ID,
        PALI_INVALID_ACTION_NAME,
        PALI_INVALID_ACTION_TYPE,
        PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID,
        PAL_INVALID_ENTITY_ID,
        PAL_INVALID_FLEXIPAGE_ID,
        PAL_INVALID_LAYOUT_ID,
        PAL_INVALID_PARAMETERS,
        PARAMETER_TOO_LARGE,
        PARTICIPANT_RELATIONSHIP_EXISTS,
        PAYLOAD_SIZE_EXCEEDED,
        PA_API_EXCEPTION,
        PA_AXIS_FAULT,
        PA_INVALID_ID_EXCEPTION,
        PA_NO_ACCESS_EXCEPTION,
        PA_NO_DATA_FOUND_EXCEPTION,
        PA_URI_SYNTAX_EXCEPTION,
        PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION,
        PICKLIST_INACTIVE_VALUES_EXCEEDED,
        PLATFORM_EVENT_ENCRYPTION_ERROR,
        PLATFORM_EVENT_PUBLISHING_UNAVAILABLE,
        PLATFORM_EVENT_PUBLISH_FAILED,
        PORTAL_NO_ACCESS,
        PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT,
        PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION,
        PRICE_NOT_FOUND,
        PRIVATE_CONTACT_ON_ASSET,
        PROCESSING_HALTED,
        QA_INVALID_CREATE_FEED_ITEM,
        QA_INVALID_SUCCESS_MESSAGE,
        QUERY_REFINEMENT_VALUE_LIMIT_EXCEEDED,
        QUERY_TIMEOUT,
        QUICK_ACTION_LIST_ITEM_NOT_ALLOWED,
        QUICK_ACTION_LIST_NOT_ALLOWED,
        RECORD_CREATION_FAILED,
        RECORD_IN_USE_BY_WORKFLOW,
        RECOVERABLE_SEARCH_PROVIDER_ERROR,
        RELATED_ENTITY_FILTER_VALIDATION_EXCEPTION,
        REL_FIELD_BAD_ACCESSIBILITY,
        REPUTATION_MINIMUM_NUMBER_NOT_REACHED,
        REQUEST_RUNNING_TOO_LONG,
        REQUIRED_FEATURE_MISSING,
        REQUIRED_FIELD_MISSING,
        REQUIRE_CONNECTED_APP_SCS,
        REQUIRE_CONNECTED_APP_SESSION_SCS,
        REQUIRE_RUNAS_USER,
        RETRIEVE_EXCHANGE_ATTACHMENT_FAILED,
        RETRIEVE_EXCHANGE_EMAIL_FAILED,
        RETRIEVE_EXCHANGE_EVENT_FAILED,
        RETRIEVE_GOOGLE_EMAIL_FAILED,
        RETRIEVE_GOOGLE_EVENT_FAILED,
        RETRIEVE_USER_CONFIG_ERROR,
        SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR,
        SALESFORCE_INBOX_TRANSPORT_INVALID_INPUT_ERROR,
        SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR,
        SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR,
        SEARCHABLE_ATTRIBUTE_LIMIT_EXCEEDED,
        SEARCH_PROVIDER_REQUEST_RATE_EXCEEDED,
        SELF_REFERENCE_FROM_FLOW,
        SELF_REFERENCE_FROM_TRIGGER,
        SERVICE_UNAVAILABLE,
        SESSION_EXPIRED,
        SESSION_INVALIDATED,
        SHARE_NEEDED_FOR_CHILD_OWNER,
        SINGLE_EMAIL_LIMIT_EXCEEDED,
        SLACK_API_ERROR,
        SOCIAL_ACCOUNT_NOT_FOUND,
        SOCIAL_ACTION_INVALID,
        SOCIAL_PERSONA_NOT_FOUND,
        SOCIAL_POST_INVALID,
        SOCIAL_POST_NOT_FOUND,
        SPECIFICATION_GENERATION_EXCEPTION,
        STANDARD_PRICE_NOT_DEFINED,
        STORAGE_LIMIT_EXCEEDED,
        STRING_TOO_LONG,
        SUBDOMAIN_IN_USE,
        TABSET_LIMIT_EXCEEDED,
        TEMPLATE_NOT_ACTIVE,
        TEMPLATE_NOT_FOUND,
        TERMS_OF_SERVICE_UNREAD,
        TERRITORY_REALIGN_IN_PROGRESS,
        TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET,
        TEXT_TO_PICKLIST_VALUES_EXCEEDED,
        TOO_MANY_APEX_REQUESTS,
        TOO_MANY_ENUM_VALUE,
        TOO_MANY_JOBS,
        TOO_MANY_POSSIBLE_USERS_EXIST,
        TRANSFER_REQUIRES_READ,
        UISF_ENTITY_QUERY_FAILED,
        UISF_NO_MAPPINGS_FOUND,
        UISF_TOKEN_NOT_FOUND,
        UISF_UNKNOWN_EXCEPTION,
        UISF_USER_MAPPING_FAILED,
        UNABLE_TO_LOCK_ROW,
        UNAUTHORIZED_SEARCH_PROVIDER_REQUEST,
        UNAVAILABLE_RECORDTYPE_EXCEPTION,
        UNAVAILABLE_REF,
        UNDEFINED_MAPPING_DEFINITION,
        UNDELETE_FAILED,
        UNKNOWN_EXCEPTION,
        UNKNOWN_TOKEN_ERROR,
        UNQUALIFIED_CART,
        UNSAFE_HTML_CONTENT,
        UNSPECIFIED_EMAIL_ADDRESS,
        UNSUPPORTED_APEX_TRIGGER_OPERATON,
        UNSUPPORTED_SITE,
        UNSUPPORTED_SITE_FILE_IMPORTED_EXCEPTION,
        UNSUPPORTED_SOCIAL_PROVIDER,
        UNVERIFIED_SENDER_ADDRESS,
        UPDATE_GOOGLE_EMAIL_LABEL_FAILED,
        USER_OWNS_PORTAL_ACCOUNT_EXCEPTION,
        USER_WITHOUT_WEM_PERMISSION,
        USER_WITH_APEX_SHARES_EXCEPTION,
        VARIANT_NOT_FOUND,
        VF_COMPILE_ERROR,
        WEBLINK_SIZE_LIMIT_EXCEEDED,
        WEBLINK_URL_INVALID,
        WEM_USER_NOT_ORG_ADMIN,
        WORKSPACE_NOT_FOUND,
        WRONG_CONTROLLER_TYPE,
        XCLEAN_DJ_MATCH_IGNORABLE_ERROR,
        XCLEAN_DJ_MATCH_INTERNAL_DJ_ERROR,
        XCLEAN_DJ_MATCH_NON_RETRIABLE_ERROR,
        XCLEAN_DJ_MATCH_RETRIABLE_ERROR,
        XCLEAN_DJ_MATCH_UNKNOWN_ERROR,
        XCLEAN_UNEXPECTED_ERROR,
    }
    public class DuplicateError : Error
    {
        private DuplicateResult duplicateResultField;
        public DuplicateResult duplicateResult
        {
            get
            {
                return this.duplicateResultField;
            }
            set
            {
                this.duplicateResultField = value;
            }
        }
    }
    public class DuplicateResult
    {
        private bool allowSaveField;
        private string duplicateRuleField;
        private string duplicateRuleEntityTypeField;
        private string errorMessageField;
        private MatchResult[] matchResultsField;
        public bool allowSave
        {
            get
            {
                return this.allowSaveField;
            }
            set
            {
                this.allowSaveField = value;
            }
        }
        public string duplicateRule
        {
            get
            {
                return this.duplicateRuleField;
            }
            set
            {
                this.duplicateRuleField = value;
            }
        }
        public string duplicateRuleEntityType
        {
            get
            {
                return this.duplicateRuleEntityTypeField;
            }
            set
            {
                this.duplicateRuleEntityTypeField = value;
            }
        }
        public string errorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                this.errorMessageField = value;
            }
        }
        public MatchResult[] matchResults
        {
            get
            {
                return this.matchResultsField;
            }
            set
            {
                this.matchResultsField = value;
            }
        }
    }
    public class MatchResult
    {
        private string entityTypeField;
        private Error[] errorsField;
        private string matchEngineField;
        private MatchRecord[] matchRecordsField;
        private string ruleField;
        private int sizeField;
        private bool successField;
        public string entityType
        {
            get
            {
                return this.entityTypeField;
            }
            set
            {
                this.entityTypeField = value;
            }
        }
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string matchEngine
        {
            get
            {
                return this.matchEngineField;
            }
            set
            {
                this.matchEngineField = value;
            }
        }
        public MatchRecord[] matchRecords
        {
            get
            {
                return this.matchRecordsField;
            }
            set
            {
                this.matchRecordsField = value;
            }
        }
        public string rule
        {
            get
            {
                return this.ruleField;
            }
            set
            {
                this.ruleField = value;
            }
        }
        public int size
        {
            get
            {
                return this.sizeField;
            }
            set
            {
                this.sizeField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class MatchRecord
    {
        private AdditionalInformationMap[] additionalInformationField;
        private FieldDiff[] fieldDiffsField;
        private double matchConfidenceField;
        private sObject recordField;
        public AdditionalInformationMap[] additionalInformation
        {
            get
            {
                return this.additionalInformationField;
            }
            set
            {
                this.additionalInformationField = value;
            }
        }
        public FieldDiff[] fieldDiffs
        {
            get
            {
                return this.fieldDiffsField;
            }
            set
            {
                this.fieldDiffsField = value;
            }
        }
        public double matchConfidence
        {
            get
            {
                return this.matchConfidenceField;
            }
            set
            {
                this.matchConfidenceField = value;
            }
        }
        public sObject record
        {
            get
            {
                return this.recordField;
            }
            set
            {
                this.recordField = value;
            }
        }
    }
    public class AdditionalInformationMap
    {
        private string nameField;
        private string valueField;
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    public class FieldDiff
    {
        private differenceType differenceField;
        private string nameField;
        public differenceType difference
        {
            get
            {
                return this.differenceField;
            }
            set
            {
                this.differenceField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    public enum differenceType
    {
        DIFFERENT,
        NULL,
        SAME,
        SIMILAR,
    }
    public class createRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public AssignmentRuleHeader AssignmentRuleHeader;
        public MruHeader MruHeader;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public AllOrNoneHeader AllOrNoneHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public PackageVersion[] PackageVersionHeader;
        public EmailHeader EmailHeader;
        public sObject[] sObjects;
        public createRequest()
        {
        }
        public createRequest(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, sObject[] sObjects)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.sObjects = sObjects;
        }
    }
    public class createResponse
    {
        public DebuggingInfo DebuggingInfo;
        public LimitInfo[] LimitInfoHeader;
        public SaveResult[] result;
        public createResponse()
        {
        }
        public createResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, SaveResult[] result)
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class OwnerChangeOption
    {
        private OwnerChangeOptionType typeField;
        private bool executeField;
        public OwnerChangeOptionType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        public bool execute
        {
            get
            {
                return this.executeField;
            }
            set
            {
                this.executeField = value;
            }
        }
    }
    public enum OwnerChangeOptionType
    {
        EnforceNewOwnerHasReadAccess,
        TransferOpenActivities,
        TransferNotesAndAttachments,
        TransferOthersOpenOpportunities,
        TransferOwnedOpenOpportunities,
        TransferOwnedClosedOpportunities,
        TransferOwnedOpenCases,
        TransferAllOwnedCases,
        TransferContracts,
        TransferOrders,
        TransferContacts,
        TransferArticleOwnedPublishedVersion,
        TransferArticleOwnedArchivedVersions,
        TransferArticleAllVersions,
        KeepAccountTeam,
        KeepSalesTeam,
        KeepSalesTeamGrantCurrentOwnerReadWriteAccess,
    }
    public class updateRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public AssignmentRuleHeader AssignmentRuleHeader;
        public MruHeader MruHeader;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public AllOrNoneHeader AllOrNoneHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public PackageVersion[] PackageVersionHeader;
        public EmailHeader EmailHeader;
        public OwnerChangeOption[] OwnerChangeOptions;
        public sObject[] sObjects;
        public updateRequest()
        {
        }
        public updateRequest(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, sObject[] sObjects)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.OwnerChangeOptions = OwnerChangeOptions;
            this.sObjects = sObjects;
        }
    }
    public class updateResponse
    {
        public DebuggingInfo DebuggingInfo;
        public LimitInfo[] LimitInfoHeader;
        public SaveResult[] result;
        public updateResponse()
        {
        }
        public updateResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, SaveResult[] result)
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class UpsertResult
    {
        private bool createdField;
        private Error[] errorsField;
        private string idField;
        private bool successField;
        public bool created
        {
            get
            {
                return this.createdField;
            }
            set
            {
                this.createdField = value;
            }
        }
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class upsertRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public AssignmentRuleHeader AssignmentRuleHeader;
        public MruHeader MruHeader;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public AllOrNoneHeader AllOrNoneHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public PackageVersion[] PackageVersionHeader;
        public EmailHeader EmailHeader;
        public OwnerChangeOption[] OwnerChangeOptions;
        public string externalIDFieldName;
        public sObject[] sObjects;
        public upsertRequest()
        {
        }
        public upsertRequest(
                    SessionHeader SessionHeader,
                    CallOptions CallOptions,
                    AssignmentRuleHeader AssignmentRuleHeader,
                    MruHeader MruHeader,
                    AllowFieldTruncationHeader AllowFieldTruncationHeader,
                    DisableFeedTrackingHeader DisableFeedTrackingHeader,
                    StreamingEnabledHeader StreamingEnabledHeader,
                    AllOrNoneHeader AllOrNoneHeader,
                    DuplicateRuleHeader DuplicateRuleHeader,
                    LocaleOptions LocaleOptions,
                    DebuggingHeader DebuggingHeader,
                    PackageVersion[] PackageVersionHeader,
                    EmailHeader EmailHeader,
                    OwnerChangeOption[] OwnerChangeOptions,
                    string externalIDFieldName,
                    sObject[] sObjects)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.OwnerChangeOptions = OwnerChangeOptions;
            this.externalIDFieldName = externalIDFieldName;
            this.sObjects = sObjects;
        }
    }
    public class upsertResponse
    {
        public DebuggingInfo DebuggingInfo;
        public LimitInfo[] LimitInfoHeader;
        public UpsertResult[] result;
        public upsertResponse()
        {
        }
        public upsertResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, UpsertResult[] result)
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class MergeRequest
    {
        private AdditionalInformationMap[] additionalInformationMapField;
        private sObject masterRecordField;
        private string[] recordToMergeIdsField;
        public AdditionalInformationMap[] additionalInformationMap
        {
            get
            {
                return this.additionalInformationMapField;
            }
            set
            {
                this.additionalInformationMapField = value;
            }
        }
        public sObject masterRecord
        {
            get
            {
                return this.masterRecordField;
            }
            set
            {
                this.masterRecordField = value;
            }
        }
        public string[] recordToMergeIds
        {
            get
            {
                return this.recordToMergeIdsField;
            }
            set
            {
                this.recordToMergeIdsField = value;
            }
        }
    }
    public class MergeResult
    {
        private Error[] errorsField;
        private string idField;
        private string[] mergedRecordIdsField;
        private bool successField;
        private string[] updatedRelatedIdsField;
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public string[] mergedRecordIds
        {
            get
            {
                return this.mergedRecordIdsField;
            }
            set
            {
                this.mergedRecordIdsField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
        public string[] updatedRelatedIds
        {
            get
            {
                return this.updatedRelatedIdsField;
            }
            set
            {
                this.updatedRelatedIdsField = value;
            }
        }
    }
    public class mergeRequest1
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public AssignmentRuleHeader AssignmentRuleHeader;
        public MruHeader MruHeader;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public PackageVersion[] PackageVersionHeader;
        public EmailHeader EmailHeader;
        public MergeRequest[] request;
        public mergeRequest1()
        {
        }
        public mergeRequest1(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, MergeRequest[] request)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.request = request;
        }
    }
    public class mergeResponse
    {
        public DebuggingInfo DebuggingInfo;
        public LimitInfo[] LimitInfoHeader;
        public MergeResult[] result;
        public mergeResponse()
        {
        }
        public mergeResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, MergeResult[] result)
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class UserTerritoryDeleteHeader
    {
        private string transferToUserIdField;
        public string transferToUserId
        {
            get
            {
                return this.transferToUserIdField;
            }
            set
            {
                this.transferToUserIdField = value;
            }
        }
    }
    public class DeleteResult
    {
        private Error[] errorsField;
        private string idField;
        private bool successField;
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class deleteRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public UserTerritoryDeleteHeader UserTerritoryDeleteHeader;
        public EmailHeader EmailHeader;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public AllOrNoneHeader AllOrNoneHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public string[] ids;
        public deleteRequest()
        {
        }
        public deleteRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, UserTerritoryDeleteHeader UserTerritoryDeleteHeader, EmailHeader EmailHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, string[] ids)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.UserTerritoryDeleteHeader = UserTerritoryDeleteHeader;
            this.EmailHeader = EmailHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.ids = ids;
        }
    }
    public class deleteResponse
    {
        public DebuggingInfo DebuggingInfo;
        public LimitInfo[] LimitInfoHeader;
        public DeleteResult[] result;
        public deleteResponse()
        {
        }
        public deleteResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, DeleteResult[] result)
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class UndeleteResult
    {
        private Error[] errorsField;
        private string idField;
        private bool successField;
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class undeleteRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public AllOrNoneHeader AllOrNoneHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public PackageVersion[] PackageVersionHeader;
        public string[] ids;
        public undeleteRequest()
        {
        }
        public undeleteRequest(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, string[] ids)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.ids = ids;
        }
    }
    public class undeleteResponse
    {
        public DebuggingInfo DebuggingInfo;
        public LimitInfo[] LimitInfoHeader;
        public UndeleteResult[] result;
        public undeleteResponse()
        {
        }
        public undeleteResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, UndeleteResult[] result)
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class EmptyRecycleBinResult
    {
        private Error[] errorsField;
        private string idField;
        private bool successField;
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class emptyRecycleBinRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public string[] ids;
        public emptyRecycleBinRequest()
        {
        }
        public emptyRecycleBinRequest(SessionHeader SessionHeader, CallOptions CallOptions, string[] ids)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.ids = ids;
        }
    }
    public class emptyRecycleBinResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public EmptyRecycleBinResult[] result;
        public emptyRecycleBinResponse()
        {
        }
        public emptyRecycleBinResponse(LimitInfo[] LimitInfoHeader, EmptyRecycleBinResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class QueryOptions
    {
        private int batchSizeField;
        private bool batchSizeFieldSpecified;
        public int batchSize
        {
            get
            {
                return this.batchSizeField;
            }
            set
            {
                this.batchSizeField = value;
            }
        }
        public bool batchSizeSpecified
        {
            get
            {
                return this.batchSizeFieldSpecified;
            }
            set
            {
                this.batchSizeFieldSpecified = value;
            }
        }
    }
    public class retrieveRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public QueryOptions QueryOptions;
        public MruHeader MruHeader;
        public PackageVersion[] PackageVersionHeader;
        public string fieldList;
        public string sObjectType;
        public string[] ids;
        public retrieveRequest()
        {
        }
        public retrieveRequest(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, MruHeader MruHeader, PackageVersion[] PackageVersionHeader, string fieldList, string sObjectType, string[] ids)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.QueryOptions = QueryOptions;
            this.MruHeader = MruHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.fieldList = fieldList;
            this.sObjectType = sObjectType;
            this.ids = ids;
        }
    }
    public class retrieveResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public sObject[] result;
        public retrieveResponse()
        {
        }
        public retrieveResponse(LimitInfo[] LimitInfoHeader, sObject[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class ProcessRequest
    {
        private string commentsField;
        private string[] nextApproverIdsField;
        public string comments
        {
            get
            {
                return this.commentsField;
            }
            set
            {
                this.commentsField = value;
            }
        }
        public string[] nextApproverIds
        {
            get
            {
                return this.nextApproverIdsField;
            }
            set
            {
                this.nextApproverIdsField = value;
            }
        }
    }
    public class ProcessWorkitemRequest : ProcessRequest
    {
        private string actionField;
        private string workitemIdField;
        public string action
        {
            get
            {
                return this.actionField;
            }
            set
            {
                this.actionField = value;
            }
        }
        public string workitemId
        {
            get
            {
                return this.workitemIdField;
            }
            set
            {
                this.workitemIdField = value;
            }
        }
    }
    public class ProcessSubmitRequest : ProcessRequest
    {
        private string objectIdField;
        private string submitterIdField;
        private string processDefinitionNameOrIdField;
        private System.Nullable<bool> skipEntryCriteriaField;
        public string objectId
        {
            get
            {
                return this.objectIdField;
            }
            set
            {
                this.objectIdField = value;
            }
        }
        public string submitterId
        {
            get
            {
                return this.submitterIdField;
            }
            set
            {
                this.submitterIdField = value;
            }
        }
        public string processDefinitionNameOrId
        {
            get
            {
                return this.processDefinitionNameOrIdField;
            }
            set
            {
                this.processDefinitionNameOrIdField = value;
            }
        }
        public System.Nullable<bool> skipEntryCriteria
        {
            get
            {
                return this.skipEntryCriteriaField;
            }
            set
            {
                this.skipEntryCriteriaField = value;
            }
        }
    }
    public class ProcessResult
    {
        private string[] actorIdsField;
        private string entityIdField;
        private Error[] errorsField;
        private string instanceIdField;
        private string instanceStatusField;
        private string[] newWorkitemIdsField;
        private bool successField;
        public string[] actorIds
        {
            get
            {
                return this.actorIdsField;
            }
            set
            {
                this.actorIdsField = value;
            }
        }
        public string entityId
        {
            get
            {
                return this.entityIdField;
            }
            set
            {
                this.entityIdField = value;
            }
        }
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string instanceId
        {
            get
            {
                return this.instanceIdField;
            }
            set
            {
                this.instanceIdField = value;
            }
        }
        public string instanceStatus
        {
            get
            {
                return this.instanceStatusField;
            }
            set
            {
                this.instanceStatusField = value;
            }
        }
        public string[] newWorkitemIds
        {
            get
            {
                return this.newWorkitemIdsField;
            }
            set
            {
                this.newWorkitemIdsField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class processRequest1
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public PackageVersion[] PackageVersionHeader;
        public ProcessRequest[] actions;
        public processRequest1()
        {
        }
        public processRequest1(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, ProcessRequest[] actions)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.actions = actions;
        }
    }
    public class processResponse
    {
        public DebuggingInfo DebuggingInfo;
        public LimitInfo[] LimitInfoHeader;
        public ProcessResult[] result;
        public processResponse()
        {
        }
        public processResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, ProcessResult[] result)
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class LeadConvert
    {
        private string accountIdField;
        private sObject accountRecordField;
        private System.Nullable<bool> bypassAccountDedupeCheckField;
        private System.Nullable<bool> bypassContactDedupeCheckField;
        private string contactIdField;
        private sObject contactRecordField;
        private string convertedStatusField;
        private bool doNotCreateOpportunityField;
        private string leadIdField;
        private string opportunityIdField;
        private string opportunityNameField;
        private sObject opportunityRecordField;
        private bool overwriteLeadSourceField;
        private string ownerIdField;
        private string relatedPersonAccountIdField;
        private sObject relatedPersonAccountRecordField;
        private bool sendNotificationEmailField;
        public string accountId
        {
            get
            {
                return this.accountIdField;
            }
            set
            {
                this.accountIdField = value;
            }
        }
        public sObject accountRecord
        {
            get
            {
                return this.accountRecordField;
            }
            set
            {
                this.accountRecordField = value;
            }
        }
        public System.Nullable<bool> bypassAccountDedupeCheck
        {
            get
            {
                return this.bypassAccountDedupeCheckField;
            }
            set
            {
                this.bypassAccountDedupeCheckField = value;
            }
        }
        public System.Nullable<bool> bypassContactDedupeCheck
        {
            get
            {
                return this.bypassContactDedupeCheckField;
            }
            set
            {
                this.bypassContactDedupeCheckField = value;
            }
        }
        public string contactId
        {
            get
            {
                return this.contactIdField;
            }
            set
            {
                this.contactIdField = value;
            }
        }
        public sObject contactRecord
        {
            get
            {
                return this.contactRecordField;
            }
            set
            {
                this.contactRecordField = value;
            }
        }
        public string convertedStatus
        {
            get
            {
                return this.convertedStatusField;
            }
            set
            {
                this.convertedStatusField = value;
            }
        }
        public bool doNotCreateOpportunity
        {
            get
            {
                return this.doNotCreateOpportunityField;
            }
            set
            {
                this.doNotCreateOpportunityField = value;
            }
        }
        public string leadId
        {
            get
            {
                return this.leadIdField;
            }
            set
            {
                this.leadIdField = value;
            }
        }
        public string opportunityId
        {
            get
            {
                return this.opportunityIdField;
            }
            set
            {
                this.opportunityIdField = value;
            }
        }
        public string opportunityName
        {
            get
            {
                return this.opportunityNameField;
            }
            set
            {
                this.opportunityNameField = value;
            }
        }
        public sObject opportunityRecord
        {
            get
            {
                return this.opportunityRecordField;
            }
            set
            {
                this.opportunityRecordField = value;
            }
        }
        public bool overwriteLeadSource
        {
            get
            {
                return this.overwriteLeadSourceField;
            }
            set
            {
                this.overwriteLeadSourceField = value;
            }
        }
        public string ownerId
        {
            get
            {
                return this.ownerIdField;
            }
            set
            {
                this.ownerIdField = value;
            }
        }
        public string relatedPersonAccountId
        {
            get
            {
                return this.relatedPersonAccountIdField;
            }
            set
            {
                this.relatedPersonAccountIdField = value;
            }
        }
        public sObject relatedPersonAccountRecord
        {
            get
            {
                return this.relatedPersonAccountRecordField;
            }
            set
            {
                this.relatedPersonAccountRecordField = value;
            }
        }
        public bool sendNotificationEmail
        {
            get
            {
                return this.sendNotificationEmailField;
            }
            set
            {
                this.sendNotificationEmailField = value;
            }
        }
    }
    public class LeadConvertResult
    {
        private string accountIdField;
        private string contactIdField;
        private Error[] errorsField;
        private string leadIdField;
        private string opportunityIdField;
        private string relatedPersonAccountIdField;
        private bool successField;
        public string accountId
        {
            get
            {
                return this.accountIdField;
            }
            set
            {
                this.accountIdField = value;
            }
        }
        public string contactId
        {
            get
            {
                return this.contactIdField;
            }
            set
            {
                this.contactIdField = value;
            }
        }
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string leadId
        {
            get
            {
                return this.leadIdField;
            }
            set
            {
                this.leadIdField = value;
            }
        }
        public string opportunityId
        {
            get
            {
                return this.opportunityIdField;
            }
            set
            {
                this.opportunityIdField = value;
            }
        }
        public string relatedPersonAccountId
        {
            get
            {
                return this.relatedPersonAccountIdField;
            }
            set
            {
                this.relatedPersonAccountIdField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class convertLeadRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public PackageVersion[] PackageVersionHeader;
        public LeadConvert[] leadConverts;
        public convertLeadRequest()
        {
        }
        public convertLeadRequest(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, LeadConvert[] leadConverts)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.leadConverts = leadConverts;
        }
    }
    public class convertLeadResponse
    {
        public DebuggingInfo DebuggingInfo;
        public LimitInfo[] LimitInfoHeader;
        public LeadConvertResult[] result;
        public convertLeadResponse()
        {
        }
        public convertLeadResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, LeadConvertResult[] result)
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class logoutRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public logoutRequest()
        {
        }
        public logoutRequest(SessionHeader SessionHeader, CallOptions CallOptions)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
        }
    }
    public class logoutResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public logoutResponse()
        {
        }
        public logoutResponse(LimitInfo[] LimitInfoHeader)
        {
            this.LimitInfoHeader = LimitInfoHeader;
        }
    }
    public class InvalidateSessionsResult
    {
        private Error[] errorsField;
        private bool successField;
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class invalidateSessionsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public string[] sessionIds;
        public invalidateSessionsRequest()
        {
        }
        public invalidateSessionsRequest(SessionHeader SessionHeader, CallOptions CallOptions, string[] sessionIds)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.sessionIds = sessionIds;
        }
    }
    public class invalidateSessionsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public InvalidateSessionsResult[] result;
        public invalidateSessionsResponse()
        {
        }
        public invalidateSessionsResponse(LimitInfo[] LimitInfoHeader, InvalidateSessionsResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class GetDeletedResult
    {
        private DeletedRecord[] deletedRecordsField;
        private System.DateTime earliestDateAvailableField;
        private System.DateTime latestDateCoveredField;
        public DeletedRecord[] deletedRecords
        {
            get
            {
                return this.deletedRecordsField;
            }
            set
            {
                this.deletedRecordsField = value;
            }
        }
        public System.DateTime earliestDateAvailable
        {
            get
            {
                return this.earliestDateAvailableField;
            }
            set
            {
                this.earliestDateAvailableField = value;
            }
        }
        public System.DateTime latestDateCovered
        {
            get
            {
                return this.latestDateCoveredField;
            }
            set
            {
                this.latestDateCoveredField = value;
            }
        }
    }
    public class DeletedRecord
    {
        private System.DateTime deletedDateField;
        private string idField;
        public System.DateTime deletedDate
        {
            get
            {
                return this.deletedDateField;
            }
            set
            {
                this.deletedDateField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
    public class getDeletedRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public string sObjectType;
        public System.DateTime startDate;
        public System.DateTime endDate;
        public getDeletedRequest()
        {
        }
        public getDeletedRequest(SessionHeader SessionHeader, CallOptions CallOptions, string sObjectType, System.DateTime startDate, System.DateTime endDate)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.sObjectType = sObjectType;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    public class getDeletedResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public GetDeletedResult result;
        public getDeletedResponse()
        {
        }
        public getDeletedResponse(LimitInfo[] LimitInfoHeader, GetDeletedResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class GetUpdatedResult
    {
        private string[] idsField;
        private System.DateTime latestDateCoveredField;
        public string[] ids
        {
            get
            {
                return this.idsField;
            }
            set
            {
                this.idsField = value;
            }
        }
        public System.DateTime latestDateCovered
        {
            get
            {
                return this.latestDateCoveredField;
            }
            set
            {
                this.latestDateCoveredField = value;
            }
        }
    }
    public class getUpdatedRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public string sObjectType;
        public System.DateTime startDate;
        public System.DateTime endDate;
        public getUpdatedRequest()
        {
        }
        public getUpdatedRequest(SessionHeader SessionHeader, CallOptions CallOptions, string sObjectType, System.DateTime startDate, System.DateTime endDate)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.sObjectType = sObjectType;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    public class getUpdatedResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public GetUpdatedResult result;
        public getUpdatedResponse()
        {
        }
        public getUpdatedResponse(LimitInfo[] LimitInfoHeader, GetUpdatedResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class QueryResult
    {
        private bool doneField;
        private string queryLocatorField;
        private sObject[] recordsField;
        private int sizeField;
        public bool done
        {
            get
            {
                return this.doneField;
            }
            set
            {
                this.doneField = value;
            }
        }
        public string queryLocator
        {
            get
            {
                return this.queryLocatorField;
            }
            set
            {
                this.queryLocatorField = value;
            }
        }
        public sObject[] records
        {
            get
            {
                return this.recordsField;
            }
            set
            {
                this.recordsField = value;
            }
        }
        public int size
        {
            get
            {
                return this.sizeField;
            }
            set
            {
                this.sizeField = value;
            }
        }
    }
    public class queryRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public QueryOptions QueryOptions;
        public MruHeader MruHeader;
        public PackageVersion[] PackageVersionHeader;
        public string queryString;
        public queryRequest()
        {
        }
        public queryRequest(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, MruHeader MruHeader, PackageVersion[] PackageVersionHeader, string queryString)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.QueryOptions = QueryOptions;
            this.MruHeader = MruHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.queryString = queryString;
        }
    }
    public class queryResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public QueryResult result;
        public queryResponse()
        {
        }
        public queryResponse(LimitInfo[] LimitInfoHeader, QueryResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class queryAllRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public QueryOptions QueryOptions;
        public string queryString;
        public queryAllRequest()
        {
        }
        public queryAllRequest(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, string queryString)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.QueryOptions = QueryOptions;
            this.queryString = queryString;
        }
    }
    public class queryAllResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public QueryResult result;
        public queryAllResponse()
        {
        }
        public queryAllResponse(LimitInfo[] LimitInfoHeader, QueryResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class queryMoreRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public QueryOptions QueryOptions;
        public string queryLocator;
        public queryMoreRequest()
        {
        }
        public queryMoreRequest(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, string queryLocator)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.QueryOptions = QueryOptions;
            this.queryLocator = queryLocator;
        }
    }
    public class queryMoreResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public QueryResult result;
        public queryMoreResponse()
        {
        }
        public queryMoreResponse(LimitInfo[] LimitInfoHeader, QueryResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class SearchResult
    {
        private string queryIdField;
        private SearchRecord[] searchRecordsField;
        private SearchResultsMetadata searchResultsMetadataField;
        public string queryId
        {
            get
            {
                return this.queryIdField;
            }
            set
            {
                this.queryIdField = value;
            }
        }
        public SearchRecord[] searchRecords
        {
            get
            {
                return this.searchRecordsField;
            }
            set
            {
                this.searchRecordsField = value;
            }
        }
        public SearchResultsMetadata searchResultsMetadata
        {
            get
            {
                return this.searchResultsMetadataField;
            }
            set
            {
                this.searchResultsMetadataField = value;
            }
        }
    }
    public class SearchRecord
    {
        private sObject recordField;
        private SearchRecordMetadata searchRecordMetadataField;
        private SearchSnippet snippetField;
        public sObject record
        {
            get
            {
                return this.recordField;
            }
            set
            {
                this.recordField = value;
            }
        }
        public SearchRecordMetadata searchRecordMetadata
        {
            get
            {
                return this.searchRecordMetadataField;
            }
            set
            {
                this.searchRecordMetadataField = value;
            }
        }
        public SearchSnippet snippet
        {
            get
            {
                return this.snippetField;
            }
            set
            {
                this.snippetField = value;
            }
        }
    }
    public class SearchRecordMetadata
    {
        private bool searchPromotedField;
        private bool spellCorrectedField;
        public bool searchPromoted
        {
            get
            {
                return this.searchPromotedField;
            }
            set
            {
                this.searchPromotedField = value;
            }
        }
        public bool spellCorrected
        {
            get
            {
                return this.spellCorrectedField;
            }
            set
            {
                this.spellCorrectedField = value;
            }
        }
    }
    public class SearchSnippet
    {
        private string textField;
        private NameValuePair[] wholeFieldsField;
        public string text
        {
            get
            {
                return this.textField;
            }
            set
            {
                this.textField = value;
            }
        }
        public NameValuePair[] wholeFields
        {
            get
            {
                return this.wholeFieldsField;
            }
            set
            {
                this.wholeFieldsField = value;
            }
        }
    }
    public class NameValuePair
    {
        private string nameField;
        private string valueField;
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    public class SearchResultsMetadata
    {
        private LabelsSearchMetadata[] entityLabelMetadataField;
        private EntitySearchMetadata[] entityMetadataField;
        public LabelsSearchMetadata[] entityLabelMetadata
        {
            get
            {
                return this.entityLabelMetadataField;
            }
            set
            {
                this.entityLabelMetadataField = value;
            }
        }
        public EntitySearchMetadata[] entityMetadata
        {
            get
            {
                return this.entityMetadataField;
            }
            set
            {
                this.entityMetadataField = value;
            }
        }
    }
    public class LabelsSearchMetadata
    {
        private NameValuePair[] entityFieldLabelsField;
        private string entityNameField;
        public NameValuePair[] entityFieldLabels
        {
            get
            {
                return this.entityFieldLabelsField;
            }
            set
            {
                this.entityFieldLabelsField = value;
            }
        }
        public string entityName
        {
            get
            {
                return this.entityNameField;
            }
            set
            {
                this.entityNameField = value;
            }
        }
    }
    public class EntitySearchMetadata
    {
        private string entityNameField;
        private EntityErrorMetadata errorMetadataField;
        private FieldLevelSearchMetadata[] fieldMetadataField;
        private EntityIntentQueryMetadata intentQueryMetadataField;
        private EntitySearchPromotionMetadata searchPromotionMetadataField;
        private EntitySpellCorrectionMetadata spellCorrectionMetadataField;
        public string entityName
        {
            get
            {
                return this.entityNameField;
            }
            set
            {
                this.entityNameField = value;
            }
        }
        public EntityErrorMetadata errorMetadata
        {
            get
            {
                return this.errorMetadataField;
            }
            set
            {
                this.errorMetadataField = value;
            }
        }
        public FieldLevelSearchMetadata[] fieldMetadata
        {
            get
            {
                return this.fieldMetadataField;
            }
            set
            {
                this.fieldMetadataField = value;
            }
        }
        public EntityIntentQueryMetadata intentQueryMetadata
        {
            get
            {
                return this.intentQueryMetadataField;
            }
            set
            {
                this.intentQueryMetadataField = value;
            }
        }
        public EntitySearchPromotionMetadata searchPromotionMetadata
        {
            get
            {
                return this.searchPromotionMetadataField;
            }
            set
            {
                this.searchPromotionMetadataField = value;
            }
        }
        public EntitySpellCorrectionMetadata spellCorrectionMetadata
        {
            get
            {
                return this.spellCorrectionMetadataField;
            }
            set
            {
                this.spellCorrectionMetadataField = value;
            }
        }
    }
    public class EntityErrorMetadata
    {
        private string errorCodeField;
        private string messageField;
        public string errorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    public class FieldLevelSearchMetadata
    {
        private string labelField;
        private string nameField;
        private string typeField;
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    public class EntityIntentQueryMetadata
    {
        private bool intentQueryField;
        private string messageField;
        public bool intentQuery
        {
            get
            {
                return this.intentQueryField;
            }
            set
            {
                this.intentQueryField = value;
            }
        }
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    public class EntitySearchPromotionMetadata
    {
        private int promotedResultCountField;
        public int promotedResultCount
        {
            get
            {
                return this.promotedResultCountField;
            }
            set
            {
                this.promotedResultCountField = value;
            }
        }
    }
    public class EntitySpellCorrectionMetadata
    {
        private string correctedQueryField;
        private bool hasNonCorrectedResultsField;
        public string correctedQuery
        {
            get
            {
                return this.correctedQueryField;
            }
            set
            {
                this.correctedQueryField = value;
            }
        }
        public bool hasNonCorrectedResults
        {
            get
            {
                return this.hasNonCorrectedResultsField;
            }
            set
            {
                this.hasNonCorrectedResultsField = value;
            }
        }
    }
    public class searchRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public string searchString;
        public searchRequest()
        {
        }
        public searchRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string searchString)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.searchString = searchString;
        }
    }
    public class searchResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public SearchResult result;
        public searchResponse()
        {
        }
        public searchResponse(LimitInfo[] LimitInfoHeader, SearchResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class GetServerTimestampResult
    {
        private System.DateTime timestampField;
        public System.DateTime timestamp
        {
            get
            {
                return this.timestampField;
            }
            set
            {
                this.timestampField = value;
            }
        }
    }
    public class getServerTimestampRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public getServerTimestampRequest()
        {
        }
        public getServerTimestampRequest(SessionHeader SessionHeader, CallOptions CallOptions)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
        }
    }
    public class getServerTimestampResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public GetServerTimestampResult result;
        public getServerTimestampResponse()
        {
        }
        public getServerTimestampResponse(LimitInfo[] LimitInfoHeader, GetServerTimestampResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class SetPasswordResult
    {
    }
    public class setPasswordRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public string userId;
        public string password;
        public setPasswordRequest()
        {
        }
        public setPasswordRequest(SessionHeader SessionHeader, CallOptions CallOptions, string userId, string password)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.userId = userId;
            this.password = password;
        }
    }
    public class setPasswordResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public SetPasswordResult result;
        public setPasswordResponse()
        {
        }
        public setPasswordResponse(LimitInfo[] LimitInfoHeader, SetPasswordResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class ChangeOwnPasswordResult
    {
    }
    public class changeOwnPasswordRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public string oldPassword;
        public string newPassword;
        public changeOwnPasswordRequest()
        {
        }
        public changeOwnPasswordRequest(SessionHeader SessionHeader, CallOptions CallOptions, string oldPassword, string newPassword)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.oldPassword = oldPassword;
            this.newPassword = newPassword;
        }
    }
    public class changeOwnPasswordResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public ChangeOwnPasswordResult result;
        public changeOwnPasswordResponse()
        {
        }
        public changeOwnPasswordResponse(LimitInfo[] LimitInfoHeader, ChangeOwnPasswordResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class ResetPasswordResult
    {
        private string passwordField;
        public string password
        {
            get
            {
                return this.passwordField;
            }
            set
            {
                this.passwordField = value;
            }
        }
    }
    public class resetPasswordRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public EmailHeader EmailHeader;
        public string userId;
        public resetPasswordRequest()
        {
        }
        public resetPasswordRequest(SessionHeader SessionHeader, CallOptions CallOptions, EmailHeader EmailHeader, string userId)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.EmailHeader = EmailHeader;
            this.userId = userId;
        }
    }
    public class resetPasswordResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public ResetPasswordResult result;
        public resetPasswordResponse()
        {
        }
        public resetPasswordResponse(LimitInfo[] LimitInfoHeader, ResetPasswordResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class getUserInfoRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public getUserInfoRequest()
        {
        }
        public getUserInfoRequest(SessionHeader SessionHeader, CallOptions CallOptions)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
        }
    }
    public class getUserInfoResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public GetUserInfoResult result;
        public getUserInfoResponse()
        {
        }
        public getUserInfoResponse(LimitInfo[] LimitInfoHeader, GetUserInfoResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DeleteByExampleResult
    {
        private sObject entityField;
        private Error[] errorsField;
        private long rowCountField;
        private bool successField;
        public sObject entity
        {
            get
            {
                return this.entityField;
            }
            set
            {
                this.entityField = value;
            }
        }
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public long rowCount
        {
            get
            {
                return this.rowCountField;
            }
            set
            {
                this.rowCountField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class deleteByExampleRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public UserTerritoryDeleteHeader UserTerritoryDeleteHeader;
        public EmailHeader EmailHeader;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public AllOrNoneHeader AllOrNoneHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public sObject[] sObjects;
        public deleteByExampleRequest()
        {
        }
        public deleteByExampleRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, UserTerritoryDeleteHeader UserTerritoryDeleteHeader, EmailHeader EmailHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, sObject[] sObjects)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.UserTerritoryDeleteHeader = UserTerritoryDeleteHeader;
            this.EmailHeader = EmailHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.sObjects = sObjects;
        }
    }
    public class deleteByExampleResponse
    {
        public DebuggingInfo DebuggingInfo;
        public LimitInfo[] LimitInfoHeader;
        public DeleteByExampleResult[] result;
        public deleteByExampleResponse()
        {
        }
        public deleteByExampleResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, DeleteByExampleResult[] result)
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class SendEmailResult
    {
        private SendEmailError[] errorsField;
        private bool successField;
        public SendEmailError[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class SendEmailError
    {
        private string[] fieldsField;
        private string messageField;
        private StatusCode statusCodeField;
        private string targetObjectIdField;
        public string[] fields
        {
            get
            {
                return this.fieldsField;
            }
            set
            {
                this.fieldsField = value;
            }
        }
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        public StatusCode statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }
        public string targetObjectId
        {
            get
            {
                return this.targetObjectIdField;
            }
            set
            {
                this.targetObjectIdField = value;
            }
        }
    }
    public class sendEmailMessageRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public string[] ids;
        public sendEmailMessageRequest()
        {
        }
        public sendEmailMessageRequest(SessionHeader SessionHeader, CallOptions CallOptions, string[] ids)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.ids = ids;
        }
    }
    public class sendEmailMessageResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public SendEmailResult[] result;
        public sendEmailMessageResponse()
        {
        }
        public sendEmailMessageResponse(LimitInfo[] LimitInfoHeader, SendEmailResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class Email
    {
        private System.Nullable<bool> bccSenderField;
        private System.Nullable<EmailPriority> emailPriorityField;
        private string replyToField;
        private System.Nullable<bool> saveAsActivityField;
        private string senderDisplayNameField;
        private string subjectField;
        private System.Nullable<bool> useSignatureField;
        public System.Nullable<bool> bccSender
        {
            get
            {
                return this.bccSenderField;
            }
            set
            {
                this.bccSenderField = value;
            }
        }
        public System.Nullable<EmailPriority> emailPriority
        {
            get
            {
                return this.emailPriorityField;
            }
            set
            {
                this.emailPriorityField = value;
            }
        }
        public string replyTo
        {
            get
            {
                return this.replyToField;
            }
            set
            {
                this.replyToField = value;
            }
        }
        public System.Nullable<bool> saveAsActivity
        {
            get
            {
                return this.saveAsActivityField;
            }
            set
            {
                this.saveAsActivityField = value;
            }
        }
        public string senderDisplayName
        {
            get
            {
                return this.senderDisplayNameField;
            }
            set
            {
                this.senderDisplayNameField = value;
            }
        }
        public string subject
        {
            get
            {
                return this.subjectField;
            }
            set
            {
                this.subjectField = value;
            }
        }
        public System.Nullable<bool> useSignature
        {
            get
            {
                return this.useSignatureField;
            }
            set
            {
                this.useSignatureField = value;
            }
        }
    }
    public enum EmailPriority
    {
        Highest,
        High,
        Normal,
        Low,
        Lowest,
    }
    public class SingleEmailMessage : Email
    {
        private string[] bccAddressesField;
        private string[] ccAddressesField;
        private string charsetField;
        private string[] documentAttachmentsField;
        private string[] entityAttachmentsField;
        private EmailFileAttachment[] fileAttachmentsField;
        private string htmlBodyField;
        private string inReplyToField;
        private System.Nullable<SendEmailOptOutPolicy> optOutPolicyField;
        private string orgWideEmailAddressIdField;
        private string plainTextBodyField;
        private string referencesField;
        private string targetObjectIdField;
        private string templateIdField;
        private string templateNameField;
        private string[] toAddressesField;
        private System.Nullable<bool> treatBodiesAsTemplateField;
        private System.Nullable<bool> treatTargetObjectAsRecipientField;
        private string whatIdField;
        public string[] bccAddresses
        {
            get
            {
                return this.bccAddressesField;
            }
            set
            {
                this.bccAddressesField = value;
            }
        }
        public string[] ccAddresses
        {
            get
            {
                return this.ccAddressesField;
            }
            set
            {
                this.ccAddressesField = value;
            }
        }
        public string charset
        {
            get
            {
                return this.charsetField;
            }
            set
            {
                this.charsetField = value;
            }
        }
        public string[] documentAttachments
        {
            get
            {
                return this.documentAttachmentsField;
            }
            set
            {
                this.documentAttachmentsField = value;
            }
        }
        public string[] entityAttachments
        {
            get
            {
                return this.entityAttachmentsField;
            }
            set
            {
                this.entityAttachmentsField = value;
            }
        }
        public EmailFileAttachment[] fileAttachments
        {
            get
            {
                return this.fileAttachmentsField;
            }
            set
            {
                this.fileAttachmentsField = value;
            }
        }
        public string htmlBody
        {
            get
            {
                return this.htmlBodyField;
            }
            set
            {
                this.htmlBodyField = value;
            }
        }
        public string inReplyTo
        {
            get
            {
                return this.inReplyToField;
            }
            set
            {
                this.inReplyToField = value;
            }
        }
        public System.Nullable<SendEmailOptOutPolicy> optOutPolicy
        {
            get
            {
                return this.optOutPolicyField;
            }
            set
            {
                this.optOutPolicyField = value;
            }
        }
        public string orgWideEmailAddressId
        {
            get
            {
                return this.orgWideEmailAddressIdField;
            }
            set
            {
                this.orgWideEmailAddressIdField = value;
            }
        }
        public string plainTextBody
        {
            get
            {
                return this.plainTextBodyField;
            }
            set
            {
                this.plainTextBodyField = value;
            }
        }
        public string references
        {
            get
            {
                return this.referencesField;
            }
            set
            {
                this.referencesField = value;
            }
        }
        public string targetObjectId
        {
            get
            {
                return this.targetObjectIdField;
            }
            set
            {
                this.targetObjectIdField = value;
            }
        }
        public string templateId
        {
            get
            {
                return this.templateIdField;
            }
            set
            {
                this.templateIdField = value;
            }
        }
        public string templateName
        {
            get
            {
                return this.templateNameField;
            }
            set
            {
                this.templateNameField = value;
            }
        }
        public string[] toAddresses
        {
            get
            {
                return this.toAddressesField;
            }
            set
            {
                this.toAddressesField = value;
            }
        }
        public System.Nullable<bool> treatBodiesAsTemplate
        {
            get
            {
                return this.treatBodiesAsTemplateField;
            }
            set
            {
                this.treatBodiesAsTemplateField = value;
            }
        }
        public System.Nullable<bool> treatTargetObjectAsRecipient
        {
            get
            {
                return this.treatTargetObjectAsRecipientField;
            }
            set
            {
                this.treatTargetObjectAsRecipientField = value;
            }
        }
        public string whatId
        {
            get
            {
                return this.whatIdField;
            }
            set
            {
                this.whatIdField = value;
            }
        }
    }
    public class EmailFileAttachment
    {
        private byte[] bodyField;
        private string contentTypeField;
        private string fileNameField;
        private string idField;
        private bool inlineField;
        private bool inlineFieldSpecified;
        public byte[] body
        {
            get
            {
                return this.bodyField;
            }
            set
            {
                this.bodyField = value;
            }
        }
        public string contentType
        {
            get
            {
                return this.contentTypeField;
            }
            set
            {
                this.contentTypeField = value;
            }
        }
        public string fileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        public bool inline
        {
            get
            {
                return this.inlineField;
            }
            set
            {
                this.inlineField = value;
            }
        }
        public bool inlineSpecified
        {
            get
            {
                return this.inlineFieldSpecified;
            }
            set
            {
                this.inlineFieldSpecified = value;
            }
        }
    }
    public enum SendEmailOptOutPolicy
    {
        SEND,
        FILTER,
        REJECT,
    }
    public class MassEmailMessage : Email
    {
        private string descriptionField;
        private string[] targetObjectIdsField;
        private string templateIdField;
        private string[] whatIdsField;
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        public string[] targetObjectIds
        {
            get
            {
                return this.targetObjectIdsField;
            }
            set
            {
                this.targetObjectIdsField = value;
            }
        }
        public string templateId
        {
            get
            {
                return this.templateIdField;
            }
            set
            {
                this.templateIdField = value;
            }
        }
        public string[] whatIds
        {
            get
            {
                return this.whatIdsField;
            }
            set
            {
                this.whatIdsField = value;
            }
        }
    }
    public class sendEmailRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public Email[] messages;
        public sendEmailRequest()
        {
        }
        public sendEmailRequest(SessionHeader SessionHeader, CallOptions CallOptions, Email[] messages)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.messages = messages;
        }
    }
    public class sendEmailResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public SendEmailResult[] result;
        public sendEmailResponse()
        {
        }
        public sendEmailResponse(LimitInfo[] LimitInfoHeader, SendEmailResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class RenderEmailTemplateRequest
    {
        private bool escapeHtmlInMergeFieldsField;
        private bool escapeHtmlInMergeFieldsFieldSpecified;
        private string[] templateBodiesField;
        private string whatIdField;
        private string whoIdField;
        public bool escapeHtmlInMergeFields
        {
            get
            {
                return this.escapeHtmlInMergeFieldsField;
            }
            set
            {
                this.escapeHtmlInMergeFieldsField = value;
            }
        }
        public bool escapeHtmlInMergeFieldsSpecified
        {
            get
            {
                return this.escapeHtmlInMergeFieldsFieldSpecified;
            }
            set
            {
                this.escapeHtmlInMergeFieldsFieldSpecified = value;
            }
        }
        public string[] templateBodies
        {
            get
            {
                return this.templateBodiesField;
            }
            set
            {
                this.templateBodiesField = value;
            }
        }
        public string whatId
        {
            get
            {
                return this.whatIdField;
            }
            set
            {
                this.whatIdField = value;
            }
        }
        public string whoId
        {
            get
            {
                return this.whoIdField;
            }
            set
            {
                this.whoIdField = value;
            }
        }
    }
    public class RenderEmailTemplateResult
    {
        private RenderEmailTemplateBodyResult[] bodyResultsField;
        private Error[] errorsField;
        private bool successField;
        public RenderEmailTemplateBodyResult[] bodyResults
        {
            get
            {
                return this.bodyResultsField;
            }
            set
            {
                this.bodyResultsField = value;
            }
        }
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class RenderEmailTemplateBodyResult
    {
        private RenderEmailTemplateError[] errorsField;
        private string mergedBodyField;
        private bool successField;
        public RenderEmailTemplateError[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string mergedBody
        {
            get
            {
                return this.mergedBodyField;
            }
            set
            {
                this.mergedBodyField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class RenderEmailTemplateError
    {
        private string fieldNameField;
        private string messageField;
        private int offsetField;
        private StatusCode statusCodeField;
        public string fieldName
        {
            get
            {
                return this.fieldNameField;
            }
            set
            {
                this.fieldNameField = value;
            }
        }
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
        public int offset
        {
            get
            {
                return this.offsetField;
            }
            set
            {
                this.offsetField = value;
            }
        }
        public StatusCode statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }
    }
    public class renderEmailTemplateRequest1
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public RenderEmailTemplateRequest[] renderRequests;
        public renderEmailTemplateRequest1()
        {
        }
        public renderEmailTemplateRequest1(SessionHeader SessionHeader, CallOptions CallOptions, RenderEmailTemplateRequest[] renderRequests)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.renderRequests = renderRequests;
        }
    }
    public class renderEmailTemplateResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public RenderEmailTemplateResult[] result;
        public renderEmailTemplateResponse()
        {
        }
        public renderEmailTemplateResponse(LimitInfo[] LimitInfoHeader, RenderEmailTemplateResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class RenderStoredEmailTemplateRequest
    {
        private System.Nullable<AttachmentRetrievalOption> attachmentRetrievalOptionField;
        private string templateIdField;
        private bool updateTemplateUsageField;
        private bool updateTemplateUsageFieldSpecified;
        private string whatIdField;
        private string whoIdField;
        public System.Nullable<AttachmentRetrievalOption> attachmentRetrievalOption
        {
            get
            {
                return this.attachmentRetrievalOptionField;
            }
            set
            {
                this.attachmentRetrievalOptionField = value;
            }
        }
        public string templateId
        {
            get
            {
                return this.templateIdField;
            }
            set
            {
                this.templateIdField = value;
            }
        }
        public bool updateTemplateUsage
        {
            get
            {
                return this.updateTemplateUsageField;
            }
            set
            {
                this.updateTemplateUsageField = value;
            }
        }
        public bool updateTemplateUsageSpecified
        {
            get
            {
                return this.updateTemplateUsageFieldSpecified;
            }
            set
            {
                this.updateTemplateUsageFieldSpecified = value;
            }
        }
        public string whatId
        {
            get
            {
                return this.whatIdField;
            }
            set
            {
                this.whatIdField = value;
            }
        }
        public string whoId
        {
            get
            {
                return this.whoIdField;
            }
            set
            {
                this.whoIdField = value;
            }
        }
    }
    public enum AttachmentRetrievalOption
    {
        None,
        MetadataOnly,
        MetadataWithBody,
    }
    public class RenderStoredEmailTemplateResult
    {
        private Error[] errorsField;
        private SingleEmailMessage renderedEmailField;
        private bool successField;
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public SingleEmailMessage renderedEmail
        {
            get
            {
                return this.renderedEmailField;
            }
            set
            {
                this.renderedEmailField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class renderStoredEmailTemplateRequest1
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public RenderStoredEmailTemplateRequest request;
        public renderStoredEmailTemplateRequest1()
        {
        }
        public renderStoredEmailTemplateRequest1(SessionHeader SessionHeader, CallOptions CallOptions, RenderStoredEmailTemplateRequest request)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.request = request;
        }
    }
    public class renderStoredEmailTemplateResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public RenderStoredEmailTemplateResult result;
        public renderStoredEmailTemplateResponse()
        {
        }
        public renderStoredEmailTemplateResponse(LimitInfo[] LimitInfoHeader, RenderStoredEmailTemplateResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class PerformQuickActionRequest
    {
        private string contextIdField;
        private string quickActionNameField;
        private sObject[] recordsField;
        public string contextId
        {
            get
            {
                return this.contextIdField;
            }
            set
            {
                this.contextIdField = value;
            }
        }
        public string quickActionName
        {
            get
            {
                return this.quickActionNameField;
            }
            set
            {
                this.quickActionNameField = value;
            }
        }
        public sObject[] records
        {
            get
            {
                return this.recordsField;
            }
            set
            {
                this.recordsField = value;
            }
        }
    }
    public class PerformQuickActionResult
    {
        private string contextIdField;
        private bool createdField;
        private Error[] errorsField;
        private string[] feedItemIdsField;
        private string[] idsField;
        private bool successField;
        private string successMessageField;
        public string contextId
        {
            get
            {
                return this.contextIdField;
            }
            set
            {
                this.contextIdField = value;
            }
        }
        public bool created
        {
            get
            {
                return this.createdField;
            }
            set
            {
                this.createdField = value;
            }
        }
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public string[] feedItemIds
        {
            get
            {
                return this.feedItemIdsField;
            }
            set
            {
                this.feedItemIdsField = value;
            }
        }
        public string[] ids
        {
            get
            {
                return this.idsField;
            }
            set
            {
                this.idsField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
        public string successMessage
        {
            get
            {
                return this.successMessageField;
            }
            set
            {
                this.successMessageField = value;
            }
        }
    }
    public class performQuickActionsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public AssignmentRuleHeader AssignmentRuleHeader;
        public MruHeader MruHeader;
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        public StreamingEnabledHeader StreamingEnabledHeader;
        public AllOrNoneHeader AllOrNoneHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public LocaleOptions LocaleOptions;
        public DebuggingHeader DebuggingHeader;
        public PackageVersion[] PackageVersionHeader;
        public EmailHeader EmailHeader;
        public OwnerChangeOption[] OwnerChangeOptions;
        public PerformQuickActionRequest[] quickActions;
        public performQuickActionsRequest()
        {
        }
        public performQuickActionsRequest(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, PerformQuickActionRequest[] quickActions)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.OwnerChangeOptions = OwnerChangeOptions;
            this.quickActions = quickActions;
        }
    }
    public class performQuickActionsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public PerformQuickActionResult[] result;
        public performQuickActionsResponse()
        {
        }
        public performQuickActionsResponse(LimitInfo[] LimitInfoHeader, PerformQuickActionResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeQuickActionResult
    {
        private System.Nullable<ShareAccessLevel> accessLevelRequiredField;
        private string actionEnumOrIdField;
        private string canvasApplicationIdField;
        private string canvasApplicationNameField;
        private DescribeColor[] colorsField;
        private string contextSobjectTypeField;
        private DescribeQuickActionDefaultValue[] defaultValuesField;
        private string flowDevNameField;
        private string flowRecordIdVarField;
        private System.Nullable<int> heightField;
        private string iconNameField;
        private string iconUrlField;
        private DescribeIcon[] iconsField;
        private string labelField;
        private DescribeLayoutSection layoutField;
        private string lightningComponentBundleIdField;
        private string lightningComponentBundleNameField;
        private string lightningComponentQualifiedNameField;
        private string lightningWebComponentBundleIdField;
        private string lightningWebComponentBundleNameField;
        private string lightningWebComponentQualifiedNameField;
        private string miniIconUrlField;
        private string mobileExtensionIdField;
        private string nameField;
        private bool showQuickActionLcHeaderField;
        private bool showQuickActionVfHeaderField;
        private string targetParentFieldField;
        private string targetRecordTypeIdField;
        private string targetSobjectTypeField;
        private string typeField;
        private string visualforcePageNameField;
        private string visualforcePageUrlField;
        private System.Nullable<int> widthField;
        public System.Nullable<ShareAccessLevel> accessLevelRequired
        {
            get
            {
                return this.accessLevelRequiredField;
            }
            set
            {
                this.accessLevelRequiredField = value;
            }
        }
        public string actionEnumOrId
        {
            get
            {
                return this.actionEnumOrIdField;
            }
            set
            {
                this.actionEnumOrIdField = value;
            }
        }
        public string canvasApplicationId
        {
            get
            {
                return this.canvasApplicationIdField;
            }
            set
            {
                this.canvasApplicationIdField = value;
            }
        }
        public string canvasApplicationName
        {
            get
            {
                return this.canvasApplicationNameField;
            }
            set
            {
                this.canvasApplicationNameField = value;
            }
        }
        public DescribeColor[] colors
        {
            get
            {
                return this.colorsField;
            }
            set
            {
                this.colorsField = value;
            }
        }
        public string contextSobjectType
        {
            get
            {
                return this.contextSobjectTypeField;
            }
            set
            {
                this.contextSobjectTypeField = value;
            }
        }
        public DescribeQuickActionDefaultValue[] defaultValues
        {
            get
            {
                return this.defaultValuesField;
            }
            set
            {
                this.defaultValuesField = value;
            }
        }
        public string flowDevName
        {
            get
            {
                return this.flowDevNameField;
            }
            set
            {
                this.flowDevNameField = value;
            }
        }
        public string flowRecordIdVar
        {
            get
            {
                return this.flowRecordIdVarField;
            }
            set
            {
                this.flowRecordIdVarField = value;
            }
        }
        public System.Nullable<int> height
        {
            get
            {
                return this.heightField;
            }
            set
            {
                this.heightField = value;
            }
        }
        public string iconName
        {
            get
            {
                return this.iconNameField;
            }
            set
            {
                this.iconNameField = value;
            }
        }
        public string iconUrl
        {
            get
            {
                return this.iconUrlField;
            }
            set
            {
                this.iconUrlField = value;
            }
        }
        public DescribeIcon[] icons
        {
            get
            {
                return this.iconsField;
            }
            set
            {
                this.iconsField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public DescribeLayoutSection layout
        {
            get
            {
                return this.layoutField;
            }
            set
            {
                this.layoutField = value;
            }
        }
        public string lightningComponentBundleId
        {
            get
            {
                return this.lightningComponentBundleIdField;
            }
            set
            {
                this.lightningComponentBundleIdField = value;
            }
        }
        public string lightningComponentBundleName
        {
            get
            {
                return this.lightningComponentBundleNameField;
            }
            set
            {
                this.lightningComponentBundleNameField = value;
            }
        }
        public string lightningComponentQualifiedName
        {
            get
            {
                return this.lightningComponentQualifiedNameField;
            }
            set
            {
                this.lightningComponentQualifiedNameField = value;
            }
        }
        public string lightningWebComponentBundleId
        {
            get
            {
                return this.lightningWebComponentBundleIdField;
            }
            set
            {
                this.lightningWebComponentBundleIdField = value;
            }
        }
        public string lightningWebComponentBundleName
        {
            get
            {
                return this.lightningWebComponentBundleNameField;
            }
            set
            {
                this.lightningWebComponentBundleNameField = value;
            }
        }
        public string lightningWebComponentQualifiedName
        {
            get
            {
                return this.lightningWebComponentQualifiedNameField;
            }
            set
            {
                this.lightningWebComponentQualifiedNameField = value;
            }
        }
        public string miniIconUrl
        {
            get
            {
                return this.miniIconUrlField;
            }
            set
            {
                this.miniIconUrlField = value;
            }
        }
        public string mobileExtensionId
        {
            get
            {
                return this.mobileExtensionIdField;
            }
            set
            {
                this.mobileExtensionIdField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public bool showQuickActionLcHeader
        {
            get
            {
                return this.showQuickActionLcHeaderField;
            }
            set
            {
                this.showQuickActionLcHeaderField = value;
            }
        }
        public bool showQuickActionVfHeader
        {
            get
            {
                return this.showQuickActionVfHeaderField;
            }
            set
            {
                this.showQuickActionVfHeaderField = value;
            }
        }
        public string targetParentField
        {
            get
            {
                return this.targetParentFieldField;
            }
            set
            {
                this.targetParentFieldField = value;
            }
        }
        public string targetRecordTypeId
        {
            get
            {
                return this.targetRecordTypeIdField;
            }
            set
            {
                this.targetRecordTypeIdField = value;
            }
        }
        public string targetSobjectType
        {
            get
            {
                return this.targetSobjectTypeField;
            }
            set
            {
                this.targetSobjectTypeField = value;
            }
        }
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        public string visualforcePageName
        {
            get
            {
                return this.visualforcePageNameField;
            }
            set
            {
                this.visualforcePageNameField = value;
            }
        }
        public string visualforcePageUrl
        {
            get
            {
                return this.visualforcePageUrlField;
            }
            set
            {
                this.visualforcePageUrlField = value;
            }
        }
        public System.Nullable<int> width
        {
            get
            {
                return this.widthField;
            }
            set
            {
                this.widthField = value;
            }
        }
    }
    public class DescribeQuickActionDefaultValue
    {
        private string defaultValueField;
        private string fieldField;
        public string defaultValue
        {
            get
            {
                return this.defaultValueField;
            }
            set
            {
                this.defaultValueField = value;
            }
        }
        public string field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }
    }
    public class describeQuickActionsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public string[] quickActions;
        public describeQuickActionsRequest()
        {
        }
        public describeQuickActionsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActions)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.quickActions = quickActions;
        }
    }
    public class describeQuickActionsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeQuickActionResult[] result;
        public describeQuickActionsResponse()
        {
        }
        public describeQuickActionsResponse(LimitInfo[] LimitInfoHeader, DescribeQuickActionResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class describeQuickActionsForRecordTypeRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public string[] quickActions;
        public string recordTypeId;
        public describeQuickActionsForRecordTypeRequest()
        {
        }
        public describeQuickActionsForRecordTypeRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActions, string recordTypeId)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.quickActions = quickActions;
            this.recordTypeId = recordTypeId;
        }
    }
    public class describeQuickActionsForRecordTypeResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeQuickActionResult[] result;
        public describeQuickActionsForRecordTypeResponse()
        {
        }
        public describeQuickActionsForRecordTypeResponse(LimitInfo[] LimitInfoHeader, DescribeQuickActionResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeAvailableQuickActionResult
    {
        private string actionEnumOrIdField;
        private string labelField;
        private string nameField;
        private string typeField;
        public string actionEnumOrId
        {
            get
            {
                return this.actionEnumOrIdField;
            }
            set
            {
                this.actionEnumOrIdField = value;
            }
        }
        public string label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
    }
    public class describeAvailableQuickActionsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public string contextType;
        public describeAvailableQuickActionsRequest()
        {
        }
        public describeAvailableQuickActionsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string contextType)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.contextType = contextType;
        }
    }
    public class describeAvailableQuickActionsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeAvailableQuickActionResult[] result;
        public describeAvailableQuickActionsResponse()
        {
        }
        public describeAvailableQuickActionsResponse(LimitInfo[] LimitInfoHeader, DescribeAvailableQuickActionResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class QuickActionTemplateResult
    {
        private string contextIdField;
        private sObject defaultValueFormulasField;
        private sObject defaultValuesField;
        private Error[] errorsField;
        private bool successField;
        public string contextId
        {
            get
            {
                return this.contextIdField;
            }
            set
            {
                this.contextIdField = value;
            }
        }
        public sObject defaultValueFormulas
        {
            get
            {
                return this.defaultValueFormulasField;
            }
            set
            {
                this.defaultValueFormulasField = value;
            }
        }
        public sObject defaultValues
        {
            get
            {
                return this.defaultValuesField;
            }
            set
            {
                this.defaultValuesField = value;
            }
        }
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class retrieveQuickActionTemplatesRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public string[] quickActionNames;
        public string contextId;
        public retrieveQuickActionTemplatesRequest()
        {
        }
        public retrieveQuickActionTemplatesRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActionNames, string contextId)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.quickActionNames = quickActionNames;
            this.contextId = contextId;
        }
    }
    public class retrieveQuickActionTemplatesResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public QuickActionTemplateResult[] result;
        public retrieveQuickActionTemplatesResponse()
        {
        }
        public retrieveQuickActionTemplatesResponse(LimitInfo[] LimitInfoHeader, QuickActionTemplateResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class retrieveMassQuickActionTemplatesRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public string quickActionName;
        public string[] contextIds;
        public retrieveMassQuickActionTemplatesRequest()
        {
        }
        public retrieveMassQuickActionTemplatesRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string quickActionName, string[] contextIds)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.quickActionName = quickActionName;
            this.contextIds = contextIds;
        }
    }
    public class retrieveMassQuickActionTemplatesResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public QuickActionTemplateResult[] result;
        public retrieveMassQuickActionTemplatesResponse()
        {
        }
        public retrieveMassQuickActionTemplatesResponse(LimitInfo[] LimitInfoHeader, QuickActionTemplateResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeVisualForceResult
    {
        private string domainField;
        public string domain
        {
            get
            {
                return this.domainField;
            }
            set
            {
                this.domainField = value;
            }
        }
    }
    public class describeVisualForceRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public bool includeAllDetails;
        public string namespacePrefix;
        public describeVisualForceRequest()
        {
        }
        public describeVisualForceRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeAllDetails, string namespacePrefix)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.includeAllDetails = includeAllDetails;
            this.namespacePrefix = namespacePrefix;
        }
    }
    public class describeVisualForceResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeVisualForceResult result;
        public describeVisualForceResponse()
        {
        }
        public describeVisualForceResponse(LimitInfo[] LimitInfoHeader, DescribeVisualForceResult result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class FindDuplicatesResult
    {
        private DuplicateResult[] duplicateResultsField;
        private Error[] errorsField;
        private bool successField;
        public DuplicateResult[] duplicateResults
        {
            get
            {
                return this.duplicateResultsField;
            }
            set
            {
                this.duplicateResultsField = value;
            }
        }
        public Error[] errors
        {
            get
            {
                return this.errorsField;
            }
            set
            {
                this.errorsField = value;
            }
        }
        public bool success
        {
            get
            {
                return this.successField;
            }
            set
            {
                this.successField = value;
            }
        }
    }
    public class findDuplicatesRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public sObject[] sObjects;
        public findDuplicatesRequest()
        {
        }
        public findDuplicatesRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DuplicateRuleHeader DuplicateRuleHeader, sObject[] sObjects)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.sObjects = sObjects;
        }
    }
    public class findDuplicatesResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public FindDuplicatesResult[] result;
        public findDuplicatesResponse()
        {
        }
        public findDuplicatesResponse(LimitInfo[] LimitInfoHeader, FindDuplicatesResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class findDuplicatesByIdsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public DuplicateRuleHeader DuplicateRuleHeader;
        public string[] ids;
        public findDuplicatesByIdsRequest()
        {
        }
        public findDuplicatesByIdsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DuplicateRuleHeader DuplicateRuleHeader, string[] ids)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.ids = ids;
        }
    }
    public class findDuplicatesByIdsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public FindDuplicatesResult[] result;
        public findDuplicatesByIdsResponse()
        {
        }
        public findDuplicatesByIdsResponse(LimitInfo[] LimitInfoHeader, FindDuplicatesResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
    public class DescribeNounResult
    {
        private NameCaseValue[] caseValuesField;
        private string developerNameField;
        private System.Nullable<Gender> genderField;
        private string nameField;
        private string pluralAliasField;
        private System.Nullable<StartsWith> startsWithField;
        public NameCaseValue[] caseValues
        {
            get
            {
                return this.caseValuesField;
            }
            set
            {
                this.caseValuesField = value;
            }
        }
        public string developerName
        {
            get
            {
                return this.developerNameField;
            }
            set
            {
                this.developerNameField = value;
            }
        }
        public System.Nullable<Gender> gender
        {
            get
            {
                return this.genderField;
            }
            set
            {
                this.genderField = value;
            }
        }
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        public string pluralAlias
        {
            get
            {
                return this.pluralAliasField;
            }
            set
            {
                this.pluralAliasField = value;
            }
        }
        public System.Nullable<StartsWith> startsWith
        {
            get
            {
                return this.startsWithField;
            }
            set
            {
                this.startsWithField = value;
            }
        }
    }
    public class NameCaseValue
    {
        private System.Nullable<Article> articleField;
        private System.Nullable<CaseType> caseTypeField;
        private System.Nullable<GrammaticalNumber> numberField;
        private System.Nullable<Possessive> possessiveField;
        private string valueField;
        public System.Nullable<Article> article
        {
            get
            {
                return this.articleField;
            }
            set
            {
                this.articleField = value;
            }
        }
        public System.Nullable<CaseType> caseType
        {
            get
            {
                return this.caseTypeField;
            }
            set
            {
                this.caseTypeField = value;
            }
        }
        public System.Nullable<GrammaticalNumber> number
        {
            get
            {
                return this.numberField;
            }
            set
            {
                this.numberField = value;
            }
        }
        public System.Nullable<Possessive> possessive
        {
            get
            {
                return this.possessiveField;
            }
            set
            {
                this.possessiveField = value;
            }
        }
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    public enum Article
    {
        None,
        Indefinite,
        Definite,
    }
    public enum CaseType
    {
        Nominative,
        Accusative,
        Genitive,
        Dative,
        Inessive,
        Elative,
        Illative,
        Adessive,
        Ablative,
        Allative,
        Essive,
        Translative,
        Partitive,
        Objective,
        Subjective,
        Instrumental,
        Prepositional,
        Locative,
        Vocative,
        Sublative,
        Superessive,
        Delative,
        Causalfinal,
        Essiveformal,
        Termanative,
        Distributive,
        Ergative,
        Adverbial,
        Abessive,
        Comitative,
    }
    public enum GrammaticalNumber
    {
        Singular,
        Plural,
        Dual,
    }
    public enum Possessive
    {
        None,
        First,
        Second,
    }
    public enum Gender
    {
        Neuter,
        Masculine,
        Feminine,
        AnimateMasculine,
        ClassI,
        ClassIII,
        ClassV,
        ClassVII,
        ClassIX,
        ClassXI,
        ClassXIV,
        ClassXV,
        ClassXVI,
        ClassXVII,
        ClassXVIII,
    }
    public enum StartsWith
    {
        Consonant,
        Vowel,
        Special,
    }
    public class describeNounsRequest
    {
        public SessionHeader SessionHeader;
        public CallOptions CallOptions;
        public PackageVersion[] PackageVersionHeader;
        public LocaleOptions LocaleOptions;
        public string[] nouns;
        public bool onlyRenamed;
        public bool includeFields;
        public describeNounsRequest()
        {
        }
        public describeNounsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] nouns, bool onlyRenamed, bool includeFields)
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.nouns = nouns;
            this.onlyRenamed = onlyRenamed;
            this.includeFields = includeFields;
        }
    }
    public class describeNounsResponse
    {
        public LimitInfo[] LimitInfoHeader;
        public DescribeNounResult[] result;
        public describeNounsResponse()
        {
        }
        public describeNounsResponse(LimitInfo[] LimitInfoHeader, DescribeNounResult[] result)
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }
}
